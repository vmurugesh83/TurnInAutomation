<?xml version="1.0"?>
<DTS:Executable xmlns:DTS="www.microsoft.com/SqlServer/Dts"
  DTS:refId="Package"
  DTS:CreationDate="2/13/2018 3:32:32 PM"
  DTS:CreationName="Microsoft.Package"
  DTS:CreatorComputerName="PC82811"
  DTS:CreatorName="INTERNAL\034846"
  DTS:DTSID="{11FB1BC4-CF99-432D-8FD9-0B4499CA40EA}"
  DTS:ExecutableType="Microsoft.Package"
  DTS:LastModifiedProductVersion="12.0.2430.0"
  DTS:LocaleID="1033"
  DTS:ObjectName="Report2_Outsale"
  DTS:PackageType="5"
  DTS:VersionBuild="337"
  DTS:VersionGUID="{0F13A24F-B29E-4B39-9159-AFF65187CE96}">
  <DTS:Property
    DTS:Name="PackageFormatVersion">8</DTS:Property>
  <DTS:ConnectionManagers>
    <DTS:ConnectionManager
      DTS:refId="Package.ConnectionManagers[Excel Connection Manager]"
      DTS:CreationName="EXCEL"
      DTS:DTSID="{29FE42F2-2A4B-4141-9807-5150A645F14A}"
      DTS:ObjectName="Excel Connection Manager">
      <DTS:PropertyExpression
        DTS:Name="ExcelFilePath">@[User::ReportFileName]</DTS:PropertyExpression>
      <DTS:ObjectData>
        <DTS:ConnectionManager
          DTS:ConnectionString="Provider=Microsoft.ACE.OLEDB.12.0;Data Source=\\internal.bonton.com\york\Group\BigTicketReporting\\Reports\0\\OutSaleReport_2018-04-09.xlsx;Extended Properties=&quot;EXCEL 12.0 XML;HDR=NO&quot;;" />
      </DTS:ObjectData>
    </DTS:ConnectionManager>
  </DTS:ConnectionManagers>
  <DTS:PackageParameters>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="3"
      DTS:DTSID="{089C5CFB-8202-4B1E-8282-4C0237B0FDD1}"
      DTS:ObjectName="FiscalYear">
      <DTS:Property
        DTS:DataType="3"
        DTS:Name="ParameterValue">0</DTS:Property>
    </DTS:PackageParameter>
    <DTS:PackageParameter
      DTS:CreationName=""
      DTS:DataType="8"
      DTS:DTSID="{B79C3B8C-BD55-41BF-A28B-91492507E69E}"
      DTS:ObjectName="ReportSubDirectoryName">
      <DTS:Property
        DTS:DataType="8"
        DTS:Name="ParameterValue"
        xml:space="preserve"></DTS:Property>
    </DTS:PackageParameter>
  </DTS:PackageParameters>
  <DTS:Variables>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{1A7C1FD4-08D3-4851-96F7-45539218846C}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="CCEmailAddress">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{20C13CCB-29AE-477D-8414-488E7030419C}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;The outsale reports were generated successfully and they can be found in the below location: \n&quot; +&#xA; @[User::PDFReportFileName] + &quot;\n&quot; +&#xA; @[User::ReportFileName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailBody">
      <DTS:VariableValue
        DTS:DataType="8">The outsale reports were generated successfully and they can be found in the below location: 

\\internal.bonton.com\york\Group\BigTicketReporting\\Reports\0\\OutSaleReport_2018-04-09.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{CCD96885-7B44-4E43-BB88-17E473534419}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="EmailSubject">
      <DTS:VariableValue
        DTS:DataType="8">Outstanding Report</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{ED76288B-5271-4058-9EDD-19B25922B844}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::FiscalYear]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FiscalYear">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{C403C049-E999-4003-8146-E9E87CFCAD6E}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="FromEmailAddress">
      <DTS:VariableValue
        DTS:DataType="8">Murugesan.venkatasubramanian@bonton.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{5379C723-EFD7-40A5-A7E2-FE1ABB5E5C46}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="LastYearWeekEndDate">
      <DTS:VariableValue
        DTS:DataType="7">2/21/2018 4:16:09 PM</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{EE8D98B6-8798-457A-AD04-142D2AEDE1F1}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="NoOfWeeks">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A53F66F9-C15A-44E1-9DA8-A602C8047029}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="PDFReportFileName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{7425034D-B762-4F90-B96E-10590E46330D}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[User::ReportTemplateFolderName]+ &quot;\\Reports\\&quot; + ((DT_WSTR,5) @[User::FiscalYear])  + &quot;\\&quot; + @[User::ReportSubDirectoryName]  + &quot;\\OutSaleReport_&quot; +  (DT_WSTR,4)DATEPART(&quot;yy&quot;,GETDATE()) + &quot;-&quot; + RIGHT(&quot;0&quot; + (DT_WSTR,2)DATEPART(&quot;mm&quot;,GETDATE()),2) + &quot;-&quot; + RIGHT(&quot;0&quot; + (DT_WSTR,2)DATEPART(&quot;dd&quot;,GETDATE()),2)  + &quot;.xlsx&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReportFileName">
      <DTS:VariableValue
        DTS:DataType="8">\\internal.bonton.com\york\Group\BigTicketReporting\\Reports\0\\OutSaleReport_2018-04-09.xlsx</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{A6014901-A2A3-42EF-B3F8-8D441B06617B}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="ReportMonth">
      <DTS:VariableValue
        DTS:DataType="3">0</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{2DE6CBF1-0002-4D4B-AF2D-4B92225BF0CC}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;WITH CTEDEPT AS (SELECT DISTINCT NO_DEPT FROM MRSPC.TBTSTYL&#xA;WHERE NO_DEPT &lt; 600 AND NO_DEPT NOT IN (508,510)), &#xA;CTEOUTSALE_TY AS (SELECT DISTINCT A.NO_RESV, D.TY_STYLE, D.NO_DEPT,                              &#xA;B.DL_UNIT_NET,B.QT_RESV,B.QT_RESV *B.DL_UNIT_FINAL AS SALE                           &#xA;FROM MRSPC.VBTRESV A, MRSPC.TBTRVSK B, MRSPC.TBTSKUU C, MRSPC.TBTSTYL D        &#xA;WHERE (NOT (A.NO_LOCN = 591                                                    &#xA;     OR A.NO_LOCN = 579)                                                       &#xA;     AND (D.NO_DEPT &lt; 600)                                                     &#xA;AND A.DT_RESV &lt;= '&quot; + (DT_WSTR,4)DATEPART(&quot;yy&quot;,@[User::WeekEndDate]) + &quot;-&quot; + (DT_WSTR,2)DATEPART(&quot;mm&quot;,@[User::WeekEndDate]) + &quot;-&quot; + (DT_WSTR,2)DATEPART(&quot;dd&quot;,@[User::WeekEndDate])  + &quot;')                                                        &#xA;AND (D.TY_STYLE IN ('R', 'S', 'Q'))                                            &#xA;     AND (A.TY_RESV IN ('SO','MR', 'SP' ))                                     &#xA;     AND (A.ST_RESV = 'CF')                                                   &#xA;     AND (B.NO_SKU = C.NO_SKU)                                                 &#xA;     AND (C.ID_STYLE = D.ID_STYLE)                                             &#xA;     AND (C.NO_VNDR_DUNS = D.NO_VNDR_DUNS)                                     &#xA;     AND (A.NO_RESV = B.NO_RESV)                                               &#xA;UNION                                                                          &#xA;SELECT DISTINCT A.NO_RESV, D.TY_STYLE, D.NO_DEPT,                              &#xA;B.DL_UNIT_NET,B.QT_RESV,B.QT_RESV *B.DL_UNIT_FINAL AS SALE                            &#xA;FROM MRSPB.VBTRESV A, MRSPB.TBTRVSK B, MRSPB.TBTSKUU C, MRSPB.TBTSTYL D        &#xA;WHERE (NOT (A.NO_LOCN = 057)                                                   &#xA;     AND (D.NO_DEPT &lt; 600)                                                     &#xA;AND A.DT_RESV &lt;= '&quot; + (DT_WSTR,4)DATEPART(&quot;yy&quot;,@[User::WeekEndDate]) + &quot;-&quot; + (DT_WSTR,2)DATEPART(&quot;mm&quot;,@[User::WeekEndDate]) + &quot;-&quot; + (DT_WSTR,2)DATEPART(&quot;dd&quot;,@[User::WeekEndDate])  + &quot;')                                                        &#xA;AND (D.TY_STYLE IN ('R', 'S', 'Q'))                                            &#xA;     AND (A.TY_RESV IN ('SO','MR', 'SP' ))                                     &#xA;     AND (A.ST_RESV = 'CF')                                                   &#xA;     AND (B.NO_SKU = C.NO_SKU)                                                 &#xA;     AND (C.ID_STYLE = D.ID_STYLE)                                             &#xA;     AND (C.NO_VNDR_DUNS = D.NO_VNDR_DUNS)                                     &#xA;     AND (A.NO_RESV = B.NO_RESV)                                               &#xA;ORDER BY 3 ASC, 2 ASC),&#xA;CTEOUTSALE_LY AS (SELECT DISTINCT A.NO_RESV, D.TY_STYLE, D.NO_DEPT,                              &#xA;B.DL_UNIT_NET,B.QT_RESV,B.QT_RESV *B.DL_UNIT_FINAL AS SALE                           &#xA;FROM MRSPC.VBTRESV A, MRSPC.TBTRVSK B, MRSPC.TBTSKUU C, MRSPC.TBTSTYL D        &#xA;WHERE (NOT (A.NO_LOCN = 591                                                    &#xA;     OR A.NO_LOCN = 579)                                                       &#xA;     AND (D.NO_DEPT &lt; 600)                                                     &#xA;AND (A.DT_POS &gt; '&quot; + (DT_WSTR,4)(DATEPART(&quot;yy&quot;,@[User::LastYearWeekEndDate])) + &quot;-&quot; + (DT_WSTR,2)DATEPART(&quot;mm&quot;,@[User::LastYearWeekEndDate]) + &quot;-&quot; + (DT_WSTR,2)DATEPART(&quot;dd&quot;,@[User::LastYearWeekEndDate])  + &quot;' AND A.DT_RESV &lt;= '&quot; + (DT_WSTR,4)(DATEPART(&quot;yy&quot;,@[User::LastYearWeekEndDate])) + &quot;-&quot; + (DT_WSTR,2)DATEPART(&quot;mm&quot;,@[User::LastYearWeekEndDate]) + &quot;-&quot; + (DT_WSTR,2)DATEPART(&quot;dd&quot;,@[User::LastYearWeekEndDate])  + &quot;')                                                        &#xA;AND (D.TY_STYLE IN ('R', 'S', 'Q'))                                            &#xA;     AND (A.TY_RESV IN ('SO','MR', 'SP' ))                                     &#xA;     AND (A.ST_RESV = 'CM'))                                                   &#xA;     AND (B.NO_SKU = C.NO_SKU)                                                 &#xA;     AND (C.ID_STYLE = D.ID_STYLE)                                             &#xA;     AND (C.NO_VNDR_DUNS = D.NO_VNDR_DUNS)                                     &#xA;     AND (A.NO_RESV = B.NO_RESV)                                               &#xA;UNION                                                                          &#xA;SELECT DISTINCT A.NO_RESV, D.TY_STYLE, D.NO_DEPT,                              &#xA;B.DL_UNIT_NET,B.QT_RESV,B.QT_RESV *B.DL_UNIT_FINAL AS SALE                            &#xA;FROM MRSPB.VBTRESV A, MRSPB.TBTRVSK B, MRSPB.TBTSKUU C, MRSPB.TBTSTYL D        &#xA;WHERE (NOT (A.NO_LOCN = 057)                                                   &#xA;     AND (D.NO_DEPT &lt; 600)                                                     &#xA;AND (A.DT_POS &gt; '&quot; + (DT_WSTR,4)(DATEPART(&quot;yy&quot;,@[User::LastYearWeekEndDate])) + &quot;-&quot; + (DT_WSTR,2)DATEPART(&quot;mm&quot;,@[User::LastYearWeekEndDate]) + &quot;-&quot; + (DT_WSTR,2)DATEPART(&quot;dd&quot;,@[User::LastYearWeekEndDate])  + &quot;' AND A.DT_RESV &lt;= '&quot; + (DT_WSTR,4)(DATEPART(&quot;yy&quot;,@[User::LastYearWeekEndDate])) + &quot;-&quot; + (DT_WSTR,2)DATEPART(&quot;mm&quot;,@[User::LastYearWeekEndDate]) + &quot;-&quot; + (DT_WSTR,2)DATEPART(&quot;dd&quot;,@[User::LastYearWeekEndDate])  + &quot;')                                                        &#xA;AND (D.TY_STYLE IN ('R', 'S', 'Q'))                                            &#xA;     AND (A.TY_RESV IN ('SO','MR', 'SP' ))                                     &#xA;     AND (A.ST_RESV = 'CM'))                                                   &#xA;     AND (B.NO_SKU = C.NO_SKU)                                                 &#xA;     AND (C.ID_STYLE = D.ID_STYLE)                                             &#xA;     AND (C.NO_VNDR_DUNS = D.NO_VNDR_DUNS)                                     &#xA;     AND (A.NO_RESV = B.NO_RESV)                                               &#xA;ORDER BY 3 ASC, 2 ASC)&#xA;SELECT DEPT.NO_DEPT,&#xA;(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_TY WHERE NO_DEPT = TY.NO_DEPT AND TY_STYLE = 'Q' GROUP BY TY_STYLE) AS QT,  &#xA;(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_TY WHERE NO_DEPT = TY.NO_DEPT AND TY_STYLE = 'R' GROUP BY TY_STYLE) AS Stock,&#xA;(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_TY WHERE NO_DEPT = TY.NO_DEPT AND TY_STYLE = 'S' GROUP BY TY_STYLE) AS SO,&#xA;(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_TY WHERE NO_DEPT = TY.NO_DEPT GROUP BY NO_DEPT) AS TOTALSALES,&#xA;(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_LY WHERE NO_DEPT = LY.NO_DEPT AND TY_STYLE = 'Q' GROUP BY TY_STYLE) AS QT1,  &#xA;(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_LY WHERE NO_DEPT = LY.NO_DEPT AND TY_STYLE = 'R' GROUP BY TY_STYLE) AS Stock1,&#xA;(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_LY WHERE NO_DEPT = LY.NO_DEPT AND TY_STYLE = 'S' GROUP BY TY_STYLE) AS SO1,&#xA;(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_LY WHERE NO_DEPT = LY.NO_DEPT GROUP BY NO_DEPT) AS TOTALSALES1&#xA;FROM CTEDEPT AS DEPT&#xA;LEFT OUTER JOIN CTEOUTSALE_TY AS TY&#xA;ON DEPT.NO_DEPT = TY.NO_DEPT&#xA;LEFT OUTER JOIN CTEOUTSALE_LY AS LY&#xA;ON DEPT.NO_DEPT  = LY.NO_DEPT&#xA;GROUP BY DEPT.NO_DEPT,LY.NO_DEPT, TY.NO_DEPT       &#xA;WITH UR;&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReportQuery">
      <DTS:VariableValue
        DTS:DataType="8">WITH CTEDEPT AS (SELECT DISTINCT NO_DEPT FROM MRSPC.TBTSTYL
WHERE NO_DEPT &lt; 600 AND NO_DEPT NOT IN (508,510)), 
CTEOUTSALE_TY AS (SELECT DISTINCT A.NO_RESV, D.TY_STYLE, D.NO_DEPT,                              
B.DL_UNIT_NET,B.QT_RESV,B.QT_RESV *B.DL_UNIT_FINAL AS SALE                           
FROM MRSPC.VBTRESV A, MRSPC.TBTRVSK B, MRSPC.TBTSKUU C, MRSPC.TBTSTYL D        
WHERE (NOT (A.NO_LOCN = 591                                                    
     OR A.NO_LOCN = 579)                                                       
     AND (D.NO_DEPT &lt; 600)                                                     
AND A.DT_RESV &lt;= '2018-2-21')                                                        
AND (D.TY_STYLE IN ('R', 'S', 'Q'))                                            
     AND (A.TY_RESV IN ('SO','MR', 'SP' ))                                     
     AND (A.ST_RESV = 'CF')                                                   
     AND (B.NO_SKU = C.NO_SKU)                                                 
     AND (C.ID_STYLE = D.ID_STYLE)                                             
     AND (C.NO_VNDR_DUNS = D.NO_VNDR_DUNS)                                     
     AND (A.NO_RESV = B.NO_RESV)                                               
UNION                                                                          
SELECT DISTINCT A.NO_RESV, D.TY_STYLE, D.NO_DEPT,                              
B.DL_UNIT_NET,B.QT_RESV,B.QT_RESV *B.DL_UNIT_FINAL AS SALE                            
FROM MRSPB.VBTRESV A, MRSPB.TBTRVSK B, MRSPB.TBTSKUU C, MRSPB.TBTSTYL D        
WHERE (NOT (A.NO_LOCN = 057)                                                   
     AND (D.NO_DEPT &lt; 600)                                                     
AND A.DT_RESV &lt;= '2018-2-21')                                                        
AND (D.TY_STYLE IN ('R', 'S', 'Q'))                                            
     AND (A.TY_RESV IN ('SO','MR', 'SP' ))                                     
     AND (A.ST_RESV = 'CF')                                                   
     AND (B.NO_SKU = C.NO_SKU)                                                 
     AND (C.ID_STYLE = D.ID_STYLE)                                             
     AND (C.NO_VNDR_DUNS = D.NO_VNDR_DUNS)                                     
     AND (A.NO_RESV = B.NO_RESV)                                               
ORDER BY 3 ASC, 2 ASC),
CTEOUTSALE_LY AS (SELECT DISTINCT A.NO_RESV, D.TY_STYLE, D.NO_DEPT,                              
B.DL_UNIT_NET,B.QT_RESV,B.QT_RESV *B.DL_UNIT_FINAL AS SALE                           
FROM MRSPC.VBTRESV A, MRSPC.TBTRVSK B, MRSPC.TBTSKUU C, MRSPC.TBTSTYL D        
WHERE (NOT (A.NO_LOCN = 591                                                    
     OR A.NO_LOCN = 579)                                                       
     AND (D.NO_DEPT &lt; 600)                                                     
AND (A.DT_POS &gt; '2018-2-21' AND A.DT_RESV &lt;= '2018-2-21')                                                        
AND (D.TY_STYLE IN ('R', 'S', 'Q'))                                            
     AND (A.TY_RESV IN ('SO','MR', 'SP' ))                                     
     AND (A.ST_RESV = 'CM'))                                                   
     AND (B.NO_SKU = C.NO_SKU)                                                 
     AND (C.ID_STYLE = D.ID_STYLE)                                             
     AND (C.NO_VNDR_DUNS = D.NO_VNDR_DUNS)                                     
     AND (A.NO_RESV = B.NO_RESV)                                               
UNION                                                                          
SELECT DISTINCT A.NO_RESV, D.TY_STYLE, D.NO_DEPT,                              
B.DL_UNIT_NET,B.QT_RESV,B.QT_RESV *B.DL_UNIT_FINAL AS SALE                            
FROM MRSPB.VBTRESV A, MRSPB.TBTRVSK B, MRSPB.TBTSKUU C, MRSPB.TBTSTYL D        
WHERE (NOT (A.NO_LOCN = 057)                                                   
     AND (D.NO_DEPT &lt; 600)                                                     
AND (A.DT_POS &gt; '2018-2-21' AND A.DT_RESV &lt;= '2018-2-21')                                                        
AND (D.TY_STYLE IN ('R', 'S', 'Q'))                                            
     AND (A.TY_RESV IN ('SO','MR', 'SP' ))                                     
     AND (A.ST_RESV = 'CM'))                                                   
     AND (B.NO_SKU = C.NO_SKU)                                                 
     AND (C.ID_STYLE = D.ID_STYLE)                                             
     AND (C.NO_VNDR_DUNS = D.NO_VNDR_DUNS)                                     
     AND (A.NO_RESV = B.NO_RESV)                                               
ORDER BY 3 ASC, 2 ASC)
SELECT DEPT.NO_DEPT,
(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_TY WHERE NO_DEPT = TY.NO_DEPT AND TY_STYLE = 'Q' GROUP BY TY_STYLE) AS QT,  
(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_TY WHERE NO_DEPT = TY.NO_DEPT AND TY_STYLE = 'R' GROUP BY TY_STYLE) AS Stock,
(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_TY WHERE NO_DEPT = TY.NO_DEPT AND TY_STYLE = 'S' GROUP BY TY_STYLE) AS SO,
(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_TY WHERE NO_DEPT = TY.NO_DEPT GROUP BY NO_DEPT) AS TOTALSALES,
(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_LY WHERE NO_DEPT = LY.NO_DEPT AND TY_STYLE = 'Q' GROUP BY TY_STYLE) AS QT1,  
(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_LY WHERE NO_DEPT = LY.NO_DEPT AND TY_STYLE = 'R' GROUP BY TY_STYLE) AS Stock1,
(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_LY WHERE NO_DEPT = LY.NO_DEPT AND TY_STYLE = 'S' GROUP BY TY_STYLE) AS SO1,
(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_LY WHERE NO_DEPT = LY.NO_DEPT GROUP BY NO_DEPT) AS TOTALSALES1
FROM CTEDEPT AS DEPT
LEFT OUTER JOIN CTEOUTSALE_TY AS TY
ON DEPT.NO_DEPT = TY.NO_DEPT
LEFT OUTER JOIN CTEOUTSALE_LY AS LY
ON DEPT.NO_DEPT  = LY.NO_DEPT
GROUP BY DEPT.NO_DEPT,LY.NO_DEPT, TY.NO_DEPT       
WITH UR;</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{F09FA3DF-9616-447D-A9F9-83C077CB2F61}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="@[$Package::ReportSubDirectoryName]"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReportSubDirectoryName">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{BD21B6B9-12D9-4415-956F-BAD33F1D5746}"
      DTS:EvaluateAsExpression="True"
      DTS:Expression="&quot;\\\\internal.bonton.com\\york\\Group\\BigTicketReporting\\&quot;"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReportTemplateFolderName">
      <DTS:VariableValue
        DTS:DataType="8">\\internal.bonton.com\york\Group\BigTicketReporting\</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{006DBDC3-6058-4965-8D06-D061662DAB49}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ReservDate">
      <DTS:VariableValue
        DTS:DataType="8"
        xml:space="preserve"></DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{998E35A5-407B-4FBB-89B8-39531529F8C8}"
      DTS:IncludeInDebugDump="2345"
      DTS:Namespace="User"
      DTS:ObjectName="ToEmailAddress">
      <DTS:VariableValue
        DTS:DataType="8">Murugesan.venkatasubramanian@bonton.com</DTS:VariableValue>
    </DTS:Variable>
    <DTS:Variable
      DTS:CreationName=""
      DTS:DTSID="{B7FBA240-4204-48B4-804F-59FD918A4A90}"
      DTS:IncludeInDebugDump="6789"
      DTS:Namespace="User"
      DTS:ObjectName="WeekEndDate">
      <DTS:VariableValue
        DTS:DataType="7">2/21/2018 4:16:00 PM</DTS:VariableValue>
    </DTS:Variable>
  </DTS:Variables>
  <DTS:Executables>
    <DTS:Executable
      DTS:refId="Package\Delete the top two temporary rows from the spreadsheet, they were used for formatting"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{F0883165-FC96-4AB4-A367-95CF86D0A506}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Delete the top two temporary rows from the spreadsheet, they were used for formatting"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_4f270c64acf94439ad4f0600e28d2372"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::ReportFileName">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Runtime.InteropServices;
using Microsoft.Office.Interop.Excel;
#endregion

namespace ST_4f270c64acf94439ad4f0600e28d2372
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            string reportFileName = (string)Dts.Variables["User::ReportFileName"].Value;
            int reportHeaderRowIndex = 2;
            int columnHeaderRowIndex = 3;
            Microsoft.Office.Interop.Excel.Application excelApp = new Microsoft.Office.Interop.Excel.Application();
                       
            Workbook workBook = excelApp.Workbooks.Open(reportFileName);
            Worksheet workSheet = workBook.Worksheets.get_Item(1);
            
            // Delete the two rows
            Range cellRange = workSheet.get_Range("A6", Type.Missing);
            cellRange.EntireRow.Delete(Type.Missing);

            cellRange = workSheet.get_Range("A5", Type.Missing);
            cellRange.EntireRow.Delete(Type.Missing);

            // The below values are hardcoded, but they shouldn't create any problem as they are text
            // and the assumption is that those cells will be empty.  So these should be changed, 
            // if the template is changed
            //Report Header
            cellRange = workSheet.get_Range(string.Concat("K",
                reportHeaderRowIndex.ToString()), Type.Missing);
            cellRange.Value = "Outsale Report";

            // This Year
            cellRange = workSheet.get_Range(string.Concat("F", 
                columnHeaderRowIndex.ToString()), Type.Missing);
            cellRange.Value = DateTime.Today.Year;
            //Last Year
            cellRange = workSheet.get_Range(string.Concat("K", 
                columnHeaderRowIndex.ToString()), Type.Missing);
            cellRange.Value = DateTime.Today.AddYears(-1).Year;
            //Month Name
            cellRange = workSheet.get_Range(string.Concat("B",
                columnHeaderRowIndex.ToString()), Type.Missing);
            cellRange.Value = DateTime.Today.ToString("MMMM");

            cellRange = workSheet.get_Range(string.Concat("P",
                columnHeaderRowIndex.ToString()), Type.Missing);
            cellRange.Value = "TY - LY";

            cellRange = workSheet.get_Range("P6", Type.Missing);
            cellRange.Style = "Currency";

            cellRange = workSheet.get_Range("R7", Type.Missing);
            //cellRange.NumberFormat = "0.00%";
            cellRange.Style = "Percent";


            cellRange = workSheet.get_Range(string.Concat("R", 
                columnHeaderRowIndex.ToString()), Type.Missing);
            cellRange.Value = "% Change";

            workBook.Save();

            workBook.Close();
            excelApp.Application.Quit();

            Marshal.ReleaseComObject(workSheet);
            Marshal.ReleaseComObject(workBook);
            workBook = null;
            Marshal.ReleaseComObject(excelApp);
            excelApp = null;

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="ST_4f270c64acf94439ad4f0600e28d2372.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A7AB251E-DEEC-448A-992C-96E976F9CE33}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_4f270c64acf94439ad4f0600e28d2372</RootNamespace>
    <AssemblyName>ST_4f270c64acf94439ad4f0600e28d2372</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <COMReference Include="Microsoft.Office.Core">
      <Guid>{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}</Guid>
      <VersionMajor>2</VersionMajor>
      <VersionMinor>8</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
    <COMReference Include="Microsoft.Office.Interop.Excel">
      <Guid>{00020813-0000-0000-C000-000000000046}</Guid>
      <VersionMajor>1</VersionMajor>
      <VersionMinor>9</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
    <COMReference Include="VBIDE">
      <Guid>{0002E157-0000-0000-C000-000000000046}</Guid>
      <VersionMajor>5</VersionMajor>
      <VersionMinor>3</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_4f270c64acf94439ad4f0600e28d2372</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_4f270c64acf94439ad4f0600e28d2372</msb:DisplayName>
		<msb:ProjectId>{9DE4BD54-34C6-440B-84E1-35AD83F93751}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_4f270c64acf94439ad4f0600e28d2372.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4f270c64acf94439ad4f0600e28d2372.Properties.Settings.get_Default():ST_4f270c64acf94439ad4f0600e28d2372.Properties.Sett" +
    "ings")]

namespace ST_4f270c64acf94439ad4f0600e28d2372.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_4f270c64acf94439ad4f0600e28d2372")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("The BonTon Stores, Inc.")]
[assembly: AssemblyProduct("ST_4f270c64acf94439ad4f0600e28d2372")]
[assembly: AssemblyCopyright("Copyright @ The BonTon Stores, Inc. 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4f270c64acf94439ad4f0600e28d2372.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4f270c64acf94439ad4f0600e28d2372.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_4f270c64acf94439ad4f0600e28d2372.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_4f270c64acf94439ad4f0600e28d2372.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_4f270c64acf94439ad4f0600e28d2372.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_4f270c64acf94439ad4f0600e28d2372.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABHgy1oAAAAAAAAAAOAAAiELAQsAACYAAAAIAAAAAAAAHkUA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAANBEAABLAAAAAGAAAIgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJCUAAAAgAAAAJgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIgEAAAAYAAAAAYAAAAoAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAALgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
RQAAAAAAAEgAAAACAAUAoCQAADAgAAABAAAAAAAAAOgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwEAASAwAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKdCIA
AAEKGAsZDHKdAABwcxoAAAooGwAACigcAAAKdAgAAAINCW8MAAAGBn4eAAAKfh4AAAp+HgAACn4e
AAAKfh4AAAp+HgAACn4eAAAKfh4AAAp+HgAACn4eAAAKfh4AAAp+HgAACn4eAAAKfh4AAApvEAAA
BhMEfgcAAAQtJBbQBwAAAigPAAAK0AQAAAIoDwAACiggAAAKKCEAAAqABwAABH4HAAAEeyIAAAp+
BwAABBEEbxYAAAYXjC8AAAFvGAAABm8lAAAKEwURBXLnAABwfiYAAApvGgAABhMGEQZvHgAABn4m
AAAKbxwAAAYmEQVy7QAAcH4mAAAKbxoAAAYTBhEGbx4AAAZ+JgAACm8cAAAGJhEFcvMAAHASASgq
AAAKKCsAAAp+JgAACm8aAAAGEwYRBn4eAAAKcvcAAHBvJAAABhEFchUBAHASAigqAAAKKCsAAAp+
JgAACm8aAAAGEwYRBn4eAAAKKC0AAAoTBxIHKC4AAAqMLwAAAW8kAAAGEQVy8wAAcBICKCoAAAoo
KwAACn4mAAAKbxoAAAYTBhEGfh4AAAooLQAAChMIEggVKC8AAAoTCRIJKC4AAAqMLwAAAW8kAAAG
EQVyGQEAcBICKCoAAAooKwAACn4mAAAKbxoAAAYTBhEGfh4AAAooLQAAChMKEgpyHQEAcCgwAAAK
byQAAAYRBXInAQBwEgIoKgAACigrAAAKfiYAAApvGgAABhMGEQZ+HgAACnIrAQBwbyQAAAYRBXI7
AQBwfiYAAApvGgAABhMGEQZyQQEAcG8hAAAGEQVyUwEAcH4mAAAKbxoAAAYTBhEGclkBAHBvIQAA
BhEFcmkBAHASAigqAAAKKCsAAAp+JgAACm8aAAAGEwYRBn4eAAAKcm0BAHBvJAAABhEEbxQAAAYR
BH4eAAAKfh4AAAp+HgAACm8SAAAGCW8KAAAGbw4AAAYRBSg2AAAKJhEEKDYAAAomFBMECSg2AAAK
JhQNAigWAAAKFm83AAAKKh4CKDgAAAoqAAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVz
b3VyY2VzLlJlc291cmNlUmVhZGVyLCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJl
PW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNl
cy5SdW50aW1lUmVzb3VyY2VTZXQCAAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwA
AAB2NC4wLjMwMzE5AAAAAAUAbAAAAOQLAAAjfgAAUAwAAPQKAAAjU3RyaW5ncwAAAABEFwAAgAEA
ACNVUwDEGAAAEAAAACNHVUlEAAAA1BgAAFwHAAAjQmxvYgAAAAAAAAACAAABVz+iCQkDAAAA+iUz
ABYAAAEAAABBAAAAFQAAAAcAAAAkAAAAJQAAAAkAAABCAAAAAgAAAFoAAAAkAAAAAgAAAAcAAAAL
AAAADgAAAAIAAAABAAAABgAAAAEAAAACAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYA
WQG6AAYAbwFeAQYAoAGLAQYAVwI9AgYAggJwAgYAmQJwAgYAtgJwAgYA1QJwAgYA7gJwAgYABwNw
AgYAIgNwAgYAPQNwAgYAVgNwAgYAjwNvAwYArwNvAwYA4APNAwYA/QO6AAYAAgS6AAYAJgRwAgoA
UgQ8BAoAawQ8BAYAgARvAw4AogQUARIA6ARvAwYA8wS6ABIA+gRvAwQAAwUNBQ4ANwUUARYAkAVw
BRYAqAVwBQYAxAW6AAYAywW6AAYA4QW6AAQA+gUNBQQABgYNBQQAEwYNBQYAKwZwAgQAOQYNBRoA
dwZYBhIAfgZvAxoAjQZYBgQAtQYNBQQAvwYNBQYA1Qa6AAQA4gYNBQQA7QYNBQYALAe6AAYAmgd7
BwQAwgcNBQYA0gd7BwYA4Ad7BwYA+Ad7BwYACwh7BwQAHAgNBQYALAh7BwYAVwhwAgYAgQhuCAYA
mgh7BwQAUQkNBQYASQp7BwYAYAp7BwYAcQp7BwAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEAAQAA
ARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQACgCDARAAxAQAAAUABwAKAKEQ
AAADBQ0FAAAIAAoAoRAAAPoFDQUAAAgACgChEAAABgYNBQAACAAKAKEQAAATBg0FAAAIAA8AoRAA
ADkGDQUAAAgAEQChEAAAtQYNBQAACAARAKEQAAC/Bg0FAAAIABcAoRAAAOIGDQUAAAgAGQChEAAA
7QYNBQAACAAbAKEQAADCBw0FAAAIACUAoRAAABwIDQUAAAgAJQChEAAAUQkNBQAACAAlAKEQAACM
Cg0FAAAIACUAoRAAAJYKDQUAAAgAJQChEAAAoAoNBQAACAAlABEAfwETABEArAEXABEA9gE5AAYG
HwJHAFaAJwJKAFaALwJKABYALAWNAFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACT
CNYBJAABAJggAAAAAJMI4gEpAAEAoCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEY
mwSJAAIAvCAAAAAAhgAaAhsAAgDaIwAAAACGGLwBGwACAAAAAAAAAMYNZgdwAQIAAAAAAAAABhg8
CBsAAwAAAAAAAADGDR0GwAADAAAAAAAAAAYYSQgbAAQAAAAAAAAAxgV2BxsABAAAAAAAAAAGGI0I
GwAEAAAAAAAAAMYFQgbKAAQAAAAAAAAABhhmCRsAFAAAAAAAAADGBWAHaQEUAAAAAAAAAAYYjQkb
ABcAAAAAAAAAxgVbBxsAFwAAAAAAAAAGGJoJGwAXAAAAAAAAAMYNxgYSARcAAAAAAAAABhiyCRsA
GAAAAAAAAADGDbEFFwEYAAAAAAAAAAYYyQkbABoAAAAAAAAAxg3zBjIBGgAAAAAAAAAGGOIJGwAd
AAAAAACAAMYFCwcXAR0AAAAAAAAABhj1CRsAHwAAAAAAgADGDf0GOQEfAAAAAAAAAAYYAQobACAA
AAAAAIAAxg0PCq4AIAAAAAAAgADGDVEHZAEhAAAAAAAAAAYYGQobACIAAAAAAIAAxg26BRcBIgAA
AAAAgADGDSIHSAEkAAAAAQA3AgAgAAAAAAAgAAAAAAAgAAAAAAEgAQCyCBEgAgC7CBEgAwDHCBEg
BADQCBEgBQDXCBEgBgDgCBEgBwDxCBEgCAALCREgCQASCREgCgAcCREgCwAlCREgDAAsCREgDQA2
CREgDgA/CREgDwBFCREgAQBzCREgAgCyCBEgAwB/CQAgAAAAAAAgAAAAAAEgAQC+CQAgAAAAAAEg
AQDWCREgAgDcCQAgAAAAABEgAQDvCQAgAAAAAAAgAAAAAAEgAQA3AgAgAAAAABEgAQAmChEgAQAm
ChEgAgA3AgcAOAAHAEAACAAkAAgARAAKAPEACwAwAAsASAANAPEADwDxADkAvAFYAEEAvAFYAEkA
vAFYAFEAvAFYAFkAvAFYAGEAvAFYAGkAvAFYAHEAvAFYAHkAvAFYAIEAvAFYAIkAvAFdAJEAvAEb
AJkAvAEbAAkAvAEbAKEAFARiAKEALwRpACkAvAFuALkAvAF6AMkAvAEbABEAvAEbANEAvAEbABkA
SQWcAPkAmgWhAAEBsQWnAAkBugWuABkBvAFYAKEA0AWyACEB6wW6AGMAHQbAAEEBMwbFAIMAQgbK
AFEBnwbnAAwApwYCAQwArgYOAbMAxgYSAcMAsQUXARQA2wYmAaEAKwYvAdMA8wYyAfMA/QY5AeMA
CwcXAXkBEgc+AREBGwdCASMBIgdIAZEBNQdOAZEBPwdUAZEBSAdYAZEBEgdfAQsBUQdkAaMAWwcb
AJMAYAdpAVMAZgdwAXMAdgcbAJkBogd1AfkAswddABkAvAEbAKkBvAFYALEBvAEbALkBvAEbAMEB
vAG+AdEBvAFdANkBvAFYAOkBvAFdAPkBvAHAA7EBvAHHAwkCvAEmBAgAFABOAAgAGABTACkAkwCA
AC4AKwDpBi4AQwDjBi4AWwA0By4AIwDjBi4AMwC6Bi4AGwDjBi4AYwA9By4AOwAGBy4ACwByBi4A
EwC6BkMAawBTAEkAkwCAAGEAmwBTAIMAqwBTAMMAmwBTAOMA4wHEAeMA0wFTAOMAywGUAeMAmwBT
AAMB4wHEAQMBywEkAgMBmwBTAAMB0wFTACMB8wF1AiMB0wFTACMBmwBTACMBywEkAkAB6wFOAkMB
ywGZAkMB0wFTAEMBmwBTAEMB8wF1AmMBywHDAmMB0wFTAGMB4wHEAWMBmwBTAIAB6wFZAoMB0wFT
AIMBywHDAoMBmwBTAKMBmwBTAKMB8wF1AqMBywEvA6MB0wFTAMAB6wFiAsMBmwBTAMMBywGUAcMB
0wFTAOMBmwBTAOMB0wFTAOMB8wF1AuMBywGWA+MBAwKAAAAC6wGMAgAC+wGDAgMCCwLNAwMCmwBT
AAMCEwIuBCMCCwKFBCMCmwBTACMCEwLeBEAC6wH2AkAC+wHtAkMCEwKTBUMCmwBTAEMCCwI1BWMC
ywH0BWMCAwKAAGMCmwBTAGMC0wFTAIAC6wEIA4AC+wH/AoMCAwKAAIMCmwBTAIMC0wFTAIMCywEe
BqMCAwKAAKMC0wFTAKMCmwBTAKMCywFIBsAC6wERAwAD6wEfA0AD6wFZA4AD6wFpA8AD6wFyAwAE
6wF7AyAE6wF7A2AE6wGEA4AE6wGEAwUAVwIHAFcCCQBXAgsAlQINAJcCDwCXAhEAlwITAJcCFQCX
AhcAlwIZAJcCGwCXAh0AlwIfAJcCIQCXAiMAlwIlAJcCJwCXAikAlwIrAJcCLQCXAi8AVwIxACgD
MwCXAjUAVwI3AJcCOQCXAjsAlwI9AJcCPwBXAkEAlwJDAJcCRQCXAkcAlwJJAJcCSwCXAnUAegEC
AAEAAwADAAkABAAMAAYADQAHAA4ACAAPAAkAAABvAS8AAADuATQAAAASAkIAAAD6BWsCAAATBnAC
AACnCRoDAADECSoDAADtBmIDAAA5Co0DAABDCpIDAAAzBioDAgACAAMAAQAEAAUAAgADAAUAAgAF
AAcAAgAKAAkAAgAMAAsAAgAWAA0AAgAYAA8AAgAaABEAAgAeABMAAgAgABUAAQAhABUAAgAjABcA
AQAkABcA9AAcAQSAAAABAAAAERpYbwAAAAAAAH8AAAAEAAAAAAAAAAAAAAABALEAAAAAAAQAAAAA
AAAAAAAAAAEAugAAAAAADAAAAAAAAAAAAAAACgD1AAAAAAAEAAAAAAAAAAAAAAABANwEAAAAAAwA
AAAAAAAAAAAAAAoAUQUAAAAABAAAAAAAAAAAAAAA3gBHBgAAAAAAAAAAAQAAAK8KAAAFAAQABgAE
AAAAADxNb2R1bGU+AFNUXzRmMjcwYzY0YWNmOTQ0MzlhZDRmMDYwMGUyOGQyMzcyLmRsbABSZXNv
dXJjZXMAU1RfNGYyNzBjNjRhY2Y5NDQzOWFkNGYwNjAwZTI4ZDIzNzIuUHJvcGVydGllcwBTZXR0
aW5ncwBTY3JpcHRNYWluAFNUXzRmMjcwYzY0YWNmOTQ0MzlhZDRmMDYwMGUyOGQyMzcyAFNjcmlw
dFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0ZW0uQ29uZmlndXJhdGlvbgBBcHBs
aWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2VydmVyLlNjcmlwdFRhc2sATWljcm9z
b2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBWU1RBUlRTY3JpcHRPYmplY3RNb2Rl
bEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNlTWFuYWdlcgByZXNvdXJjZU1hbgBT
eXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNvdXJjZUN1bHR1cmUALmN0b3IAZ2V0
X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3VsdHVyZQBDdWx0dXJlAGRlZmF1bHRJ
bnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4AdmFsdWVfXwBTdWNjZXNzAEZhaWx1cmUA
dmFsdWUAU3lzdGVtLlJ1bnRpbWUuVmVyc2lvbmluZwBUYXJnZXRGcmFtZXdvcmtBdHRyaWJ1dGUA
U3lzdGVtLlJlZmxlY3Rpb24AQXNzZW1ibHlUaXRsZUF0dHJpYnV0ZQBBc3NlbWJseURlc2NyaXB0
aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29uZmlndXJhdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNvbXBh
bnlBdHRyaWJ1dGUAQXNzZW1ibHlQcm9kdWN0QXR0cmlidXRlAEFzc2VtYmx5Q29weXJpZ2h0QXR0
cmlidXRlAEFzc2VtYmx5VHJhZGVtYXJrQXR0cmlidXRlAEFzc2VtYmx5Q3VsdHVyZUF0dHJpYnV0
ZQBBc3NlbWJseVZlcnNpb25BdHRyaWJ1dGUAU3lzdGVtLlJ1bnRpbWUuQ29tcGlsZXJTZXJ2aWNl
cwBDb21waWxhdGlvblJlbGF4YXRpb25zQXR0cmlidXRlAFJ1bnRpbWVDb21wYXRpYmlsaXR5QXR0
cmlidXRlAFN5c3RlbS5EaWFnbm9zdGljcwBEZWJ1Z2dlck5vblVzZXJDb2RlQXR0cmlidXRlAFR5
cGUAUnVudGltZVR5cGVIYW5kbGUAR2V0VHlwZUZyb21IYW5kbGUAQXNzZW1ibHkAZ2V0X0Fzc2Vt
Ymx5AFN5c3RlbS5Db21wb25lbnRNb2RlbABFZGl0b3JCcm93c2FibGVBdHRyaWJ1dGUARWRpdG9y
QnJvd3NhYmxlU3RhdGUAQ29tcGlsZXJHZW5lcmF0ZWRBdHRyaWJ1dGUALmNjdG9yAFNTSVNTY3Jp
cHRUYXNrRW50cnlQb2ludEF0dHJpYnV0ZQA8TWFpbj5vX19TaXRlQ29udGFpbmVyMABTeXN0ZW0u
Q29yZQBDYWxsU2l0ZWAxAEZ1bmNgMwBDYWxsU2l0ZQBXb3Jrc2hlZXQATWljcm9zb2Z0Lk9mZmlj
ZS5JbnRlcm9wLkV4Y2VsADw+cF9fU2l0ZTEAU2NyaXB0T2JqZWN0TW9kZWwAZ2V0X0R0cwBNaWNy
b3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuUnVudGlt
ZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBnZXRfVmFsdWUAU3Ry
aW5nAEd1aWQAR2V0VHlwZUZyb21DTFNJRABBY3RpdmF0b3IAQ3JlYXRlSW5zdGFuY2UAQXBwbGlj
YXRpb24AX0FwcGxpY2F0aW9uAFdvcmtib29rcwBnZXRfV29ya2Jvb2tzAE1pc3NpbmcAVmFsdWUA
V29ya2Jvb2sAT3BlbgBNaWNyb3NvZnQuQ1NoYXJwAE1pY3Jvc29mdC5DU2hhcnAuUnVudGltZUJp
bmRlcgBCaW5kZXIAQ2FsbFNpdGVCaW5kZXIAQ1NoYXJwQmluZGVyRmxhZ3MAQ29udmVydABDcmVh
dGUAVGFyZ2V0AF9Xb3JrYm9vawBTaGVldHMAZ2V0X1dvcmtzaGVldHMASW50MzIASW52b2tlAF9X
b3Jrc2hlZXQAUmFuZ2UAZ2V0X1JhbmdlAGdldF9FbnRpcmVSb3cARGVsZXRlAFRvU3RyaW5nAENv
bmNhdABzZXRfVmFsdWUARGF0ZVRpbWUAZ2V0X1RvZGF5AGdldF9ZZWFyAEFkZFllYXJzAHNldF9T
dHlsZQBTYXZlAENsb3NlAGdldF9BcHBsaWNhdGlvbgBRdWl0AFN5c3RlbS5SdW50aW1lLkludGVy
b3BTZXJ2aWNlcwBNYXJzaGFsAFJlbGVhc2VDb21PYmplY3QAc2V0X1Rhc2tSZXN1bHQARG9jRXZl
bnRzX0V2ZW50AEd1aWRBdHRyaWJ1dGUAVHlwZUlkZW50aWZpZXJBdHRyaWJ1dGUAQ29tSW1wb3J0
QXR0cmlidXRlAENvQ2xhc3NBdHRyaWJ1dGUAQXBwRXZlbnRzX0V2ZW50AERpc3BJZEF0dHJpYnV0
ZQBfVnRibEdhcDFfNDQAX1Z0YmxHYXAyXzE3NwBEZWZhdWx0TWVtYmVyQXR0cmlidXRlAFN5c3Rl
bS5Db2xsZWN0aW9ucwBJRW51bWVyYWJsZQBfVnRibEdhcDFfMTIATENJRENvbnZlcnNpb25BdHRy
aWJ1dGUARmlsZW5hbWUAVXBkYXRlTGlua3MAUmVhZE9ubHkARm9ybWF0AFBhc3N3b3JkAFdyaXRl
UmVzUGFzc3dvcmQASWdub3JlUmVhZE9ubHlSZWNvbW1lbmRlZABPcmlnaW4ARGVsaW1pdGVyAEVk
aXRhYmxlAE5vdGlmeQBDb252ZXJ0ZXIAQWRkVG9NcnUATG9jYWwAQ29ycnVwdExvYWQAV29ya2Jv
b2tFdmVudHNfRXZlbnQAX1Z0YmxHYXAxXzIwAFNhdmVDaGFuZ2VzAFJvdXRlV29ya2Jvb2sAX1Z0
YmxHYXAyXzc0AF9WdGJsR2FwM18yOABXb3Jrc2hlZXRzAF9WdGJsR2FwMV84AEluZGV4AEl0ZW0A
X1Z0YmxHYXAxXzkzAENlbGwxAENlbGwyAF9WdGJsR2FwMV80NwBTaGlmdABfVnRibEdhcDJfNwBf
VnRibEdhcDNfMTAyAGdldF9TdHlsZQBfVnRibEdhcDRfMTMAUmFuZ2VWYWx1ZURhdGFUeXBlAEVu
dGlyZVJvdwBTdHlsZQBJbnRlcmZhY2VUeXBlQXR0cmlidXRlAENvbUludGVyZmFjZVR5cGUAQ29t
RXZlbnRJbnRlcmZhY2VBdHRyaWJ1dGUAQXBwRXZlbnRzAERvY0V2ZW50cwBXb3JrYm9va0V2ZW50
cwBTVF80ZjI3MGM2NGFjZjk0NDM5YWQ0ZjA2MDBlMjhkMjM3Mi5Qcm9wZXJ0aWVzLlJlc291cmNl
cy5yZXNvdXJjZXMAAAAAcVMAVABfADQAZgAyADcAMABjADYANABhAGMAZgA5ADQANAAzADkAYQBk
ADQAZgAwADYAMAAwAGUAMgA4AGQAMgAzADcAMgAuAFAAcgBvAHAAZQByAHQAaQBlAHMALgBSAGUA
cwBvAHUAcgBjAGUAcwAAKVUAcwBlAHIAOgA6AFIAZQBwAG8AcgB0AEYAaQBsAGUATgBhAG0AZQAA
STAAMAAwADIANAA1ADAAMAAtADAAMAAwADAALQAwADAAMAAwAC0AQwAwADAAMAAtADAAMAAwADAA
MAAwADAAMAAwADAANAA2AAEFQQA2AAAFQQA1AAADSwAAHU8AdQB0AHMAYQBsAGUAIABSAGUAcABv
AHIAdAAAA0YAAANCAAAJTQBNAE0ATQAAA1AAAA9UAFkAIAAtACAATABZAAEFUAA2AAARQwB1AHIA
cgBlAG4AYwB5AAAFUgA3AAAPUABlAHIAYwBlAG4AdAAAA1IAABElACAAQwBoAGEAbgBnAGUAAADA
piMsgNoyRJ6HZAYG748HAAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkF
AAEBEhkECAASFQQIABIZAwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgG
AAESURFVBCAAElkGIAIBDhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABDgYVEm0BFRJxAxJ1HBIc
BCAAEn0FIAASgIEGIAESgIUcAyAAHAcAARJREYCNBQABHBJRBCAAEigEBhKAoRMgDxIsDhwcHBwc
HBwcHBwcHBwcCLA/X38R1Qo6DAADEoCtEYCxElESUQ0VEm0BFRJxAxJ1HBIcCwABFRJtARMAEoCt
AwYTAAQgABI0BCABHBwJFRJxAxJ1HBIcCCACEwITABMBAgYcBiACEjwcHAQgABI8AyAADgUAAg4O
DgUgAgEcHAUAABGAyQMgAAgGIAERgMkIBCABDg4EIAEBHAYgAwEcHBwEIAASIAQAAQgcGQcLDggI
EiASLBIcEjwRgMkRgMkRgMkRgMkpAQAkMDAwMjA4RDgtMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAw
MDQ2AAAFIAEBElFfAQBaU3lzdGVtLk9iamVjdCwgbXNjb3JsaWIsIFZlcnNpb249NC4wLjAuMCwg
Q3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1NjE5MzRlMDg5AAApAQAkMDAw
MjA4RDUtMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2AAAIAQCUAAAAAAABHAgBADwCAAAAAAgB
AC4BAAAAAAQoABIgBCgAEigNAQAIX0RlZmF1bHQAAAgBAA8AAAAAAAgBAIMHAAAAAAETARspAQAk
MDAwMjA4REItMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2AAApAQAkMDAwMjA4REEtMDAwMC0w
MDAwLUMwMDAtMDAwMDAwMDAwMDQ2AAAIAQADAAAAAAAIAQAVAQAAAAAIAQAAAAAAAAAIAQAbAQAA
AAAIAQDuAQAAAAAEKAASNAgBAKoAAAAAAAEaBCgBHBwpAQAkMDAwMjA4RDctMDAwMC0wMDAwLUMw
MDAtMDAwMDAwMDAwMDQ2AAAIAQDFAAAAAAAGKAISPBwcCAEAdQAAAAAACAEA9wAAAAAACAEABAEA
AAAACAEABgAAAAAABCgAEjwDKAAcKQEAJDAwMDIwODQ2LTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAw
MDA0NgAABiABARGBAQUgAgEODlgBACQwMDAyMDgxMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAw
NDYuTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLkRvY0V2ZW50c19FdmVudAAAByACARJR
ElFWAQAoTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLkRvY0V2ZW50cyhNaWNyb3NvZnQu
T2ZmaWNlLkludGVyb3AuRXhjZWwuRG9jRXZlbnRzAABYAQAkMDAwMjA4MTMtMDAwMC0wMDAwLWMw
MDAtMDAwMDAwMDAwMDQ2Lk1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5BcHBFdmVudHNf
RXZlbnQAAFYBAChNaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuQXBwRXZlbnRzKE1pY3Jv
c29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5BcHBFdmVudHMAAF0BACQwMDAyMDgxMy0wMDAwLTAw
MDAtYzAwMC0wMDAwMDAwMDAwNDYzTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLldvcmti
b29rRXZlbnRzX0V2ZW50AABgAQAtTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLldvcmti
b29rRXZlbnRzLU1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5Xb3JrYm9va0V2ZW50cwAA
KQEAJDAwMDI0NDEzLTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAAKQEAJDAwMDI0NDExLTAw
MDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAAKQEAJDAwMDI0NDEyLTAwMDAtMDAwMC1DMDAwLTAw
MDAwMDAwMDA0NgAARwEAGi5ORVRGcmFtZXdvcmssVmVyc2lvbj12NC4wAQBUDhRGcmFtZXdvcmtE
aXNwbGF5TmFtZRAuTkVUIEZyYW1ld29yayA0KAEAI1NUXzRmMjcwYzY0YWNmOTQ0MzlhZDRmMDYw
MGUyOGQyMzcyAAAFAQAAAAAcAQAXVGhlIEJvblRvbiBTdG9yZXMsIEluYy4AAC0BAChDb3B5cmln
aHQgQCBUaGUgQm9uVG9uIFN0b3JlcywgSW5jLiAyMDE4AAAIAQAIAAAAAAAeAQABAFQCFldyYXBO
b25FeGNlcHRpb25UaHJvd3MB+EQAAAAAAAAAAAAADkUAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AABFAAAAAAAAAABfQ29yRGxsTWFpbgBtc2NvcmVlLmRsbAAAAAAA/yUAIAAQAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAQAAAA
GAAAgAAAAAAAAAAAAAAAAAAAAQABAAAAMAAAgAAAAAAAAAAAAAAAAAAAAQAAAAAASAAAAFhgAAAw
BAAAAAAAAAAAAAAwBDQAAABWAFMAXwBWAEUAUgBTAEkATwBOAF8ASQBOAEYATwAAAAAAvQTv/gAA
AQAAAAEAWG8RGgAAAQBYbxEaPwAAAAAAAAAEAAAAAgAAAAAAAAAAAAAAAAAAAEQAAAABAFYAYQBy
AEYAaQBsAGUASQBuAGYAbwAAAAAAJAAEAAAAVAByAGEAbgBzAGwAYQB0AGkAbwBuAAAAAAAAALAE
kAMAAAEAUwB0AHIAaQBuAGcARgBpAGwAZQBJAG4AZgBvAAAAbAMAAAEAMAAwADAAMAAwADQAYgAw
AAAAUAAYAAEAQwBvAG0AcABhAG4AeQBOAGEAbQBlAAAAAABUAGgAZQAgAEIAbwBuAFQAbwBuACAA
UwB0AG8AcgBlAHMALAAgAEkAbgBjAC4AAABwACQAAQBGAGkAbABlAEQAZQBzAGMAcgBpAHAAdABp
AG8AbgAAAAAAUwBUAF8ANABmADIANwAwAGMANgA0AGEAYwBmADkANAA0ADMAOQBhAGQANABmADAA
NgAwADAAZQAyADgAZAAyADMANwAyAAAAQAAPAAEARgBpAGwAZQBWAGUAcgBzAGkAbwBuAAAAAAAx
AC4AMAAuADYANgA3ADMALgAyADgANQAwADQAAAAAAHAAKAABAEkAbgB0AGUAcgBuAGEAbABOAGEA
bQBlAAAAUwBUAF8ANABmADIANwAwAGMANgA0AGEAYwBmADkANAA0ADMAOQBhAGQANABmADAANgAw
ADAAZQAyADgAZAAyADMANwAyAC4AZABsAGwAAAB4ACkAAQBMAGUAZwBhAGwAQwBvAHAAeQByAGkA
ZwBoAHQAAABDAG8AcAB5AHIAaQBnAGgAdAAgAEAAIABUAGgAZQAgAEIAbwBuAFQAbwBuACAAUwB0
AG8AcgBlAHMALAAgAEkAbgBjAC4AIAAyADAAMQA4AAAAAAB4ACgAAQBPAHIAaQBnAGkAbgBhAGwA
RgBpAGwAZQBuAGEAbQBlAAAAUwBUAF8ANABmADIANwAwAGMANgA0AGEAYwBmADkANAA0ADMAOQBh
AGQANABmADAANgAwADAAZQAyADgAZAAyADMANwAyAC4AZABsAGwAAABoACQAAQBQAHIAbwBkAHUA
YwB0AE4AYQBtAGUAAAAAAFMAVABfADQAZgAyADcAMABjADYANABhAGMAZgA5ADQANAAzADkAYQBk
ADQAZgAwADYAMAAwAGUAMgA4AGQAMgAzADcAMgAAAEQADwABAFAAcgBvAGQAdQBjAHQAVgBlAHIA
cwBpAG8AbgAAADEALgAwAC4ANgA2ADcAMwAuADIAOAA1ADAANAAAAAAASAAPAAEAQQBzAHMAZQBt
AGIAbAB5ACAAVgBlAHIAcwBpAG8AbgAAADEALgAwAC4ANgA2ADcAMwAuADIAOAA1ADAANAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAAMAAAAIDUAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Execute the send email task to send the report out"
      DTS:CreationName="Microsoft.ExecutePackageTask"
      DTS:Description="Execute Package Task"
      DTS:DTSID="{2D6F35A1-BA20-445E-B980-AD8E254EAF10}"
      DTS:ExecutableType="Microsoft.ExecutePackageTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Execute the send email task to send the report out"
      DTS:TaskContact="Microsoft Corporation; Microsoft SQL Server; Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
      <DTS:Variables />
      <DTS:ObjectData>
        <ExecutePackageTask>
          <UseProjectReference>True</UseProjectReference>
          <PackageName>SendEmail.dtsx</PackageName>
          <ParameterAssignment>
            <ParameterName>CCEmailAddress</ParameterName>
            <BindedVariableOrParameterName>User::CCEmailAddress</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>EmailBody</ParameterName>
            <BindedVariableOrParameterName>User::EmailBody</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>EmailSubject</ParameterName>
            <BindedVariableOrParameterName>User::EmailSubject</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>FromEmailAddress</ParameterName>
            <BindedVariableOrParameterName>User::FromEmailAddress</BindedVariableOrParameterName>
          </ParameterAssignment>
          <ParameterAssignment>
            <ParameterName>ToEmailAddresses</ParameterName>
            <BindedVariableOrParameterName>User::ToEmailAddress</BindedVariableOrParameterName>
          </ParameterAssignment>
        </ExecutePackageTask>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Generate PDF document from the excel spreadsheet using Excel Interop"
      DTS:CreationName="Microsoft.ScriptTask"
      DTS:Description="Script Task"
      DTS:DTSID="{B762CAB6-8F0F-4764-8B04-089329B911AB}"
      DTS:ExecutableType="Microsoft.ScriptTask"
      DTS:LocaleID="-1"
      DTS:ObjectName="Generate PDF document from the excel spreadsheet using Excel Interop"
      DTS:ThreadHint="0">
      <DTS:Variables />
      <DTS:ObjectData>
        <ScriptProject
          Name="ST_de74d0c53cc24389a36fe1c4008fb6bf"
          VSTAMajorVersion="3"
          VSTAMinorVersion="0"
          Language="CSharp"
          ReadWriteVariables="User::PDFReportFileName,User::ReportFileName">
          <ProjectItem
            Name="Properties\Settings.settings"
            Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.resx"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
          <ProjectItem
            Name="ST_de74d0c53cc24389a36fe1c4008fb6bf.csproj"
            Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{A1C96DDD-3B73-4E6C-9E2F-B75643C08803}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_de74d0c53cc24389a36fe1c4008fb6bf</RootNamespace>
    <AssemblyName>ST_de74d0c53cc24389a36fe1c4008fb6bf</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <COMReference Include="Microsoft.Office.Core">
      <Guid>{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}</Guid>
      <VersionMajor>2</VersionMajor>
      <VersionMinor>8</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
    <COMReference Include="Microsoft.Office.Interop.Excel">
      <Guid>{00020813-0000-0000-C000-000000000046}</Guid>
      <VersionMajor>1</VersionMajor>
      <VersionMinor>9</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
    <COMReference Include="VBIDE">
      <Guid>{0002E157-0000-0000-C000-000000000046}</Guid>
      <VersionMajor>5</VersionMajor>
      <VersionMinor>3</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
          <ProjectItem
            Name="ScriptMain.cs"
            Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Runtime.InteropServices;
using Microsoft.Office.Interop.Excel;
#endregion

namespace ST_de74d0c53cc24389a36fe1c4008fb6bf
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            string reportFileName = (string)Dts.Variables["User::ReportFileName"].Value;
            string pdfFileName = string.Concat(reportFileName.Substring(0,reportFileName.LastIndexOf('.')),
                ".pdf");
            Microsoft.Office.Interop.Excel.Application excelApp = new Microsoft.Office.Interop.Excel.Application();

            Workbook workBook = excelApp.Workbooks.Open(reportFileName);

            workBook.ExportAsFixedFormat(XlFixedFormatType.xlTypePDF, pdfFileName,
                XlFixedFormatQuality.xlQualityStandard, true, true, Type.Missing,
                Type.Missing, false, Type.Missing);

            Dts.Variables["User::PDFReportFileName"].Value = pdfFileName;

            workBook.Close();
            excelApp.Application.Quit();

            Marshal.ReleaseComObject(workBook);
            workBook = null;
            Marshal.ReleaseComObject(excelApp);
            excelApp = null;

			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
          <ProjectItem
            Name="Project"
            Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_de74d0c53cc24389a36fe1c4008fb6bf</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_de74d0c53cc24389a36fe1c4008fb6bf</msb:DisplayName>
		<msb:ProjectId>{6D89CE80-F300-42BE-A319-CCB50E5596D2}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_de74d0c53cc24389a36fe1c4008fb6bf.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
          <ProjectItem
            Name="Properties\Settings.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_de74d0c53cc24389a36fe1c4008fb6bf.Properties.Settings.get_Default():ST_de74d0c53cc24389a36fe1c4008fb6bf.Properties.Sett" +
    "ings")]

namespace ST_de74d0c53cc24389a36fe1c4008fb6bf.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
          <ProjectItem
            Name="Properties\AssemblyInfo.cs"
            Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_de74d0c53cc24389a36fe1c4008fb6bf")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("The BonTon Stores, Inc.")]
[assembly: AssemblyProduct("ST_de74d0c53cc24389a36fe1c4008fb6bf")]
[assembly: AssemblyCopyright("Copyright @ The BonTon Stores, Inc. 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
          <ProjectItem
            Name="Properties\Resources.Designer.cs"
            Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_de74d0c53cc24389a36fe1c4008fb6bf.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_de74d0c53cc24389a36fe1c4008fb6bf.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_de74d0c53cc24389a36fe1c4008fb6bf.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_de74d0c53cc24389a36fe1c4008fb6bf.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_de74d0c53cc24389a36fe1c4008fb6bf.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
          <BinaryItem
            Name="ST_de74d0c53cc24389a36fe1c4008fb6bf.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDABrYrVoAAAAAAAAAAOAAAiELAQsAAB4AAAAIAAAAAAAAHj0A
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAMw8AABPAAAAAEAAAIgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAJB0AAAAgAAAAHgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIgEAAAAQAAAAAYAAAAgAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAJgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAAAA
PQAAAAAAAEgAAAACAAUAuCIAABQaAAABAAAAAAAAAAAiAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwEAAwAQAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKdB4A
AAEKBhYGHy5vGgAACm8bAAAKcp0AAHAoHAAACgtypwAAcHMdAAAKKB4AAAooHwAACnQGAAACDAhv
DAAABgZ+IQAACn4hAAAKfiEAAAp+IQAACn4hAAAKfiEAAAp+IQAACn4hAAAKfiEAAAp+IQAACn4h
AAAKfiEAAAp+IQAACn4hAAAKbxAAAAYNCRYHFowKAAACF4wnAAABF4wnAAABfiMAAAp+IwAAChaM
JwAAAX4jAAAKbxQAAAYCKBYAAApvFwAACnLxAABwbxgAAAoHbyUAAAoJfiEAAAp+IQAACn4hAAAK
bxIAAAYIbwoAAAZvDgAABgkoKQAACiYUDQgoKQAACiYUDAIoFgAAChZvKgAACioeAigrAAAKKrQA
AADOyu++AQAAAJEAAABsU3lzdGVtLlJlc291cmNlcy5SZXNvdXJjZVJlYWRlciwgbXNjb3JsaWIs
IFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdhNWM1
NjE5MzRlMDg5I1N5c3RlbS5SZXNvdXJjZXMuUnVudGltZVJlc291cmNlU2V0AgAAAAAAAAAAAAAA
UEFEUEFEULQAAABCU0pCAQABAAAAAAAMAAAAdjQuMC4zMDMxOQAAAAAFAGwAAADQCAAAI34AADwJ
AADICQAAI1N0cmluZ3MAAAAABBMAACQBAAAjVVMAKBQAABAAAAAjR1VJRAAAADgUAADcBQAAI0Js
b2IAAAAAAAAAAgAAAVc/ogEJAwAAAPolMwAWAAABAAAANwAAABAAAAAMAAAAFAAAAB8AAAAFAAAA
NQAAAAYAAAA8AAAAHQAAAAIAAAADAAAABQAAAAYAAAABAAAABAAAAAEAAAABAAAAAAAKAAEAAAAA
AAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAVwI9AgYAggJwAgYAmQJwAgYA
tgJwAgYA1QJwAgYA7gJwAgYABwNwAgYAIgNwAgYAPQNwAgYAVgNwAgYAjwNvAwYArwNvAwYA4APN
AwYA/QO6AAYAAgS6AAYAJgRwAgoAUgQ8BAoAawQ8BAYAgARvAw4AogQUAQ4AxAQUARIAHQX9BBIA
NQX9BAYAUQW6AAYAdQW6AAYAiwW6AAQApAWwBQQAzwWwBQQA3AWwBQYA9AVwAgQAAgawBQQAEAaw
BQYAJQa6AAQALQawBQQANwawBQYAoQaCBgQAyQawBQYA2QaCBgYA5waCBgYA/waCBgYAEgeCBgYA
IweCBgYATgdwAgYAeAdlBwYAkQeCBgQASAiwBQYAJwmCBgYATAmCBgYAYwmCBgAAAAABAAAAAAAB
AAEAAAAQADIAPAAFAAEAAQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQA
CgChEAAApAWwBQAABwAKAKEQAADPBbAFAAAHAAoAoRAAANwFsAUAAAcADwChEAAAAgawBQAABwAR
AAEBAAAQBrAFEQAHABEAoRAAAC0GsAUAAAoAEQABAQAANwawBREACgAVAKEQAADJBrAFAAANABUA
oRAAAEgIsAUAAA0AFQChEAAAQgmwBQAADQAVAKEQAAB0CbAFAAANABUAEQB/ARMAEQCsARcAEQD2
ATkABgYfAkcAVoAnAkoAVoAvAkoABgYfAkcAVoBdCDwCVoBvCDwCBgYfAkcAVoATCb8CVoAdCb8C
UCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkAAQCg
IAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwACAPgh
AAAAAIYYvAEbAAIAAAAAAAAAxg1tBvoAAgAAAAAAAAAGGDMHGwADAAAAAAAAAMYN5gW/AAMAAAAA
AAAABhhABxsABAAAAAAAAADGBX0GGwAEAAAAAAAAAAYYhAcbAAQAAAAAAAAAxgULBskABAAAAAAA
AAAGGIAIGwAUAAAAAAAAAMYFZwbzABQAAAAAAAAABhinCBsAFwAAAAAAAADGBUkG4AAXAAAAAQA3
AgAgAAAAAAAgAAAAAAAgAAAAAAEgAQCpBxEgAgCyBxEgAwC+BxEgBADHBxEgBQDOBxEgBgDXBxEg
BwDoBxEgCAACCBEgCQAJCBEgCgATCBEgCwAcCBEgDAAjCBEgDQAtCBEgDgA2CBEgDwA8CBEgAQCN
CBEgAgCpBxEgAwCZCAEAAQD9AxEgAgCpBxEgAwC1CBEgBAC9CBEgBQDSCBEgBgDjCBEgBwDoCBEg
CADrCBEgCQD8CAYAHAAGADQACADJAAkALAAJADgAOQC8AVgAQQC8AVgASQC8AVgAUQC8AVgAWQC8
AVgAYQC8AVgAaQC8AVgAcQC8AVgAeQC8AVgAgQC8AVgAiQC8AV0AkQC8ARsAmQC8ARsACQC8ARsA
oQAUBGIAoQAvBGkAKQC8AW4AuQC8AXoAyQC8ARsAEQC8ARsA0QC8ARsAGQDWBI0A2QAnBZIA4QA+
BZcA6QBHBZ0A8QBYBaEA8QBkBaYA8QBuBawA+QC8AVgAoQB6BbIAAQGVBbkAYwDmBb8AIQH8BcQA
gwALBskAoQD0Bd0AowBJBuAA6QBdBu4AkwBnBvMAUwBtBvoAcwB9BhsAUQGpBv8A2QC6Bl0AGQC8
ARsAYQG8AVgAaQG8ARsAcQG8ARsAeQG8ATcBgQG8AV0AiQG8AVgAmQG8AV0AaQG8AUACqQG8AXcD
sQG8Ab8ECAAUAE4ACAAYAFMACAAgAE4ACAAkAFMACAAsAE4ACAAwAFMAKQCTAIAALgBbALIFLgBj
ALsFLgALAPAELgATADgFLgAbAGEFLgAjAGEFLgArAGcFLgAzADgFLgA7AIQFLgBDAGEFQwBrAFMA
SQCTAIAAYQCbAFMAgwCrAFMAwwBrAVMAwwCbAFMAwwB7AT0BwwBjAQ0B4wCLAcQB4wBrAVMA4wBj
AQ0B4wCbAFMAAwFrAVMAAwGLAcQBAwFjAegBAwGbAFMAIwGbAFMAIwF7AT0BIwFjARICIwFrAVMA
QAGDAZ0BQwGbAUYCQwGbAFMAYwFrAVMAYwFjARICYwGbAFMAgAGDAagBgwGbAFMAgwGbAcMCowGb
AFMAowGbAR4DowGjAX8DwAGDAbEBwwGjATQEwwGbAFMAwwGbAdYD4wGrAYAA4wFrAVMA4wGbAFMA
4wFjAZUEAAKDAdsBAAKTAdIBAwJjAcYEAwKrAYAAAwKbAFMAAwJrAVMAQAKDAa0CQAKTAaQCgAKD
AbYCBQCmAQcApgEJAKYBCwDkAQ0A5gEPAOYBEQDmARMA5gEVAOYBFwDmARkA5gEbAOYBHQDmAR8A
5gEhAOYBIwDmASUA5gEnAOYBKQDmASsA5gEtAOYBMQDmATMA5gE1AOYBNwDmATkA5gE7AOYBPQDm
AT8A5gF1AAQBAgABAAMAAwAHAAQAAABvAS8AAADuATQAAAASAkIAAACkBboBAADcBb8BAgACAAMA
AQAEAAUAAgADAAUAAgAFAAcAAgAKAAkAAgAMAAsABIAAAAEAAAD6GZ2UAAAAAAAAfwAAAAQAAAAA
AAAAAAAAAAEAsQAAAAAABAAAAAAAAAAAAAAAAQC6AAAAAAAMAAAAAAAAAAAAAAAKAPUAAAAAAAwA
AAAAAAAAAAAAAAoA3gQAAAAAAAAAAAEAAACDCQAABQAEAAAAAAAAPE1vZHVsZT4AU1RfZGU3NGQw
YzUzY2MyNDM4OWEzNmZlMWM0MDA4ZmI2YmYuZGxsAFJlc291cmNlcwBTVF9kZTc0ZDBjNTNjYzI0
Mzg5YTM2ZmUxYzQwMDhmYjZiZi5Qcm9wZXJ0aWVzAFNldHRpbmdzAFNjcmlwdE1haW4AU1RfZGU3
NGQwYzUzY2MyNDM4OWEzNmZlMWM0MDA4ZmI2YmYAU2NyaXB0UmVzdWx0cwBtc2NvcmxpYgBTeXN0
ZW0AT2JqZWN0AFN5c3RlbS5Db25maWd1cmF0aW9uAEFwcGxpY2F0aW9uU2V0dGluZ3NCYXNlAE1p
Y3Jvc29mdC5TcWxTZXJ2ZXIuU2NyaXB0VGFzawBNaWNyb3NvZnQuU3FsU2VydmVyLkR0cy5UYXNr
cy5TY3JpcHRUYXNrAFZTVEFSVFNjcmlwdE9iamVjdE1vZGVsQmFzZQBFbnVtAFN5c3RlbS5SZXNv
dXJjZXMAUmVzb3VyY2VNYW5hZ2VyAHJlc291cmNlTWFuAFN5c3RlbS5HbG9iYWxpemF0aW9uAEN1
bHR1cmVJbmZvAHJlc291cmNlQ3VsdHVyZQAuY3RvcgBnZXRfUmVzb3VyY2VNYW5hZ2VyAGdldF9D
dWx0dXJlAHNldF9DdWx0dXJlAEN1bHR1cmUAZGVmYXVsdEluc3RhbmNlAGdldF9EZWZhdWx0AERl
ZmF1bHQATWFpbgB2YWx1ZV9fAFN1Y2Nlc3MARmFpbHVyZQB2YWx1ZQBTeXN0ZW0uUnVudGltZS5W
ZXJzaW9uaW5nAFRhcmdldEZyYW1ld29ya0F0dHJpYnV0ZQBTeXN0ZW0uUmVmbGVjdGlvbgBBc3Nl
bWJseVRpdGxlQXR0cmlidXRlAEFzc2VtYmx5RGVzY3JpcHRpb25BdHRyaWJ1dGUAQXNzZW1ibHlD
b25maWd1cmF0aW9uQXR0cmlidXRlAEFzc2VtYmx5Q29tcGFueUF0dHJpYnV0ZQBBc3NlbWJseVBy
b2R1Y3RBdHRyaWJ1dGUAQXNzZW1ibHlDb3B5cmlnaHRBdHRyaWJ1dGUAQXNzZW1ibHlUcmFkZW1h
cmtBdHRyaWJ1dGUAQXNzZW1ibHlDdWx0dXJlQXR0cmlidXRlAEFzc2VtYmx5VmVyc2lvbkF0dHJp
YnV0ZQBTeXN0ZW0uUnVudGltZS5Db21waWxlclNlcnZpY2VzAENvbXBpbGF0aW9uUmVsYXhhdGlv
bnNBdHRyaWJ1dGUAUnVudGltZUNvbXBhdGliaWxpdHlBdHRyaWJ1dGUAU3lzdGVtLkRpYWdub3N0
aWNzAERlYnVnZ2VyTm9uVXNlckNvZGVBdHRyaWJ1dGUAVHlwZQBSdW50aW1lVHlwZUhhbmRsZQBH
ZXRUeXBlRnJvbUhhbmRsZQBBc3NlbWJseQBnZXRfQXNzZW1ibHkAU3lzdGVtLkNvbXBvbmVudE1v
ZGVsAEVkaXRvckJyb3dzYWJsZUF0dHJpYnV0ZQBFZGl0b3JCcm93c2FibGVTdGF0ZQBDb21waWxl
ckdlbmVyYXRlZEF0dHJpYnV0ZQAuY2N0b3IAU1NJU1NjcmlwdFRhc2tFbnRyeVBvaW50QXR0cmli
dXRlAFNjcmlwdE9iamVjdE1vZGVsAGdldF9EdHMATWljcm9zb2Z0LlNxbFNlcnZlci5NYW5hZ2Vk
RFRTAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuRHRzLlJ1bnRpbWUAVmFyaWFibGVzAGdldF9WYXJpYWJs
ZXMAVmFyaWFibGUAZ2V0X0l0ZW0AZ2V0X1ZhbHVlAFN0cmluZwBMYXN0SW5kZXhPZgBTdWJzdHJp
bmcAQ29uY2F0AEd1aWQAR2V0VHlwZUZyb21DTFNJRABBY3RpdmF0b3IAQ3JlYXRlSW5zdGFuY2UA
QXBwbGljYXRpb24ATWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsAF9BcHBsaWNhdGlvbgBX
b3JrYm9va3MAZ2V0X1dvcmtib29rcwBNaXNzaW5nAFZhbHVlAFdvcmtib29rAE9wZW4AWGxGaXhl
ZEZvcm1hdFF1YWxpdHkAQm9vbGVhbgBfV29ya2Jvb2sAWGxGaXhlZEZvcm1hdFR5cGUARXhwb3J0
QXNGaXhlZEZvcm1hdABzZXRfVmFsdWUAQ2xvc2UAZ2V0X0FwcGxpY2F0aW9uAFF1aXQAU3lzdGVt
LlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2VzAE1hcnNoYWwAUmVsZWFzZUNvbU9iamVjdABzZXRfVGFz
a1Jlc3VsdABBcHBFdmVudHNfRXZlbnQAR3VpZEF0dHJpYnV0ZQBUeXBlSWRlbnRpZmllckF0dHJp
YnV0ZQBDb21JbXBvcnRBdHRyaWJ1dGUAQ29DbGFzc0F0dHJpYnV0ZQBEaXNwSWRBdHRyaWJ1dGUA
X1Z0YmxHYXAxXzQ0AF9WdGJsR2FwMl8xNzcARGVmYXVsdE1lbWJlckF0dHJpYnV0ZQBTeXN0ZW0u
Q29sbGVjdGlvbnMASUVudW1lcmFibGUAX1Z0YmxHYXAxXzEyAExDSURDb252ZXJzaW9uQXR0cmli
dXRlAEZpbGVuYW1lAFVwZGF0ZUxpbmtzAFJlYWRPbmx5AEZvcm1hdABQYXNzd29yZABXcml0ZVJl
c1Bhc3N3b3JkAElnbm9yZVJlYWRPbmx5UmVjb21tZW5kZWQAT3JpZ2luAERlbGltaXRlcgBFZGl0
YWJsZQBOb3RpZnkAQ29udmVydGVyAEFkZFRvTXJ1AExvY2FsAENvcnJ1cHRMb2FkAFdvcmtib29r
RXZlbnRzX0V2ZW50AHhsUXVhbGl0eVN0YW5kYXJkAHhsUXVhbGl0eU1pbmltdW0AX1Z0YmxHYXAx
XzIwAFNhdmVDaGFuZ2VzAFJvdXRlV29ya2Jvb2sAX1Z0YmxHYXAyXzIxNgBRdWFsaXR5AEluY2x1
ZGVEb2NQcm9wZXJ0aWVzAElnbm9yZVByaW50QXJlYXMARnJvbQBUbwBPcGVuQWZ0ZXJQdWJsaXNo
AEZpeGVkRm9ybWF0RXh0Q2xhc3NQdHIAeGxUeXBlUERGAHhsVHlwZVhQUwBDb21FdmVudEludGVy
ZmFjZUF0dHJpYnV0ZQBBcHBFdmVudHMASW50ZXJmYWNlVHlwZUF0dHJpYnV0ZQBDb21JbnRlcmZh
Y2VUeXBlAFdvcmtib29rRXZlbnRzAFNUX2RlNzRkMGM1M2NjMjQzODlhMzZmZTFjNDAwOGZiNmJm
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAAABxUwBUAF8AZABlADcANABkADAAYwA1
ADMAYwBjADIANAAzADgAOQBhADMANgBmAGUAMQBjADQAMAAwADgAZgBiADYAYgBmAC4AUAByAG8A
cABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAApVQBzAGUAcgA6ADoAUgBlAHAAbwBy
AHQARgBpAGwAZQBOAGEAbQBlAAAJLgBwAGQAZgAASTAAMAAwADIANAA1ADAAMAAtADAAMAAwADAA
LQAwADAAMAAwAC0AQwAwADAAMAAtADAAMAAwADAAMAAwADAAMAAwADAANAA2AAEvVQBzAGUAcgA6
ADoAUABEAEYAUgBlAHAAbwByAHQARgBpAGwAZQBOAGEAbQBlAAAAAAAffukqVdu1QJJZdiV29SXx
AAi3elxWGTTgiQiJhF3NgIDMkQMGEhUDBhIZAyAAAQQAABIVBAAAEhkFAAEBEhkECAASFQQIABIZ
AwYSDAQAABIMBAgAEgwCBggDBhEUBAAAAAAEAQAAAAQgAQEOBCABAQgGAAESURFVBCAAElkGIAIB
DhJZBAcBEhUFIAEBEWEIAQACAAAAAAADAAABBCAAEm0EIAAScQUgARJ1HAMgABwEIAEIAwUgAg4I
CAUAAg4ODgYAARJREX0FAAEcElEEIAASIAQGEoCREyAPEiQOHBwcHBwcHBwcHBwcHBwCBhwNIAkB
ETAcHBwcHBwcHAQgAQEcBiADARwcHAQgABIYBAABCBwIBwQODhIYEiQpAQAkMDAwMjA4RDUtMDAw
MC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2AAAFIAEBElFfAQBaU3lzdGVtLk9iamVjdCwgbXNjb3Js
aWIsIFZlcnNpb249NC4wLjAuMCwgQ3VsdHVyZT1uZXV0cmFsLCBQdWJsaWNLZXlUb2tlbj1iNzdh
NWM1NjE5MzRlMDg5AAAIAQCUAAAAAAABHAgBADwCAAAAAAgBAC4BAAAAAAQoABIYBCgAEiANAQAI
X0RlZmF1bHQAAAgBAA8AAAAAAAgBAIMHAAAAAAETARspAQAkMDAwMjA4REItMDAwMC0wMDAwLUMw
MDAtMDAwMDAwMDAwMDQ2AAApAQAkMDAwMjA4REEtMDAwMC0wMDAwLUMwMDAtMDAwMDAwMDAwMDQ2
AAADBhEoBSACAQ4OXQEAJDAwMDIwODEzLTAwMDAtMDAwMC1jMDAwLTAwMDAwMDAwMDA0NjNNaWNy
b3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuWGxGaXhlZEZvcm1hdFF1YWxpdHkAAAgBAAMAAAAA
AAgBABUBAAAAAAgBAL0JAAAAAAMGETBaAQAkMDAwMjA4MTMtMDAwMC0wMDAwLWMwMDAtMDAwMDAw
MDAwMDQ2ME1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5YbEZpeGVkRm9ybWF0VHlwZQAA
WAEAJDAwMDIwODEzLTAwMDAtMDAwMC1jMDAwLTAwMDAwMDAwMDA0Ni5NaWNyb3NvZnQuT2ZmaWNl
LkludGVyb3AuRXhjZWwuQXBwRXZlbnRzX0V2ZW50AAAHIAIBElESUVYBAChNaWNyb3NvZnQuT2Zm
aWNlLkludGVyb3AuRXhjZWwuQXBwRXZlbnRzKE1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNl
bC5BcHBFdmVudHMAAF0BACQwMDAyMDgxMy0wMDAwLTAwMDAtYzAwMC0wMDAwMDAwMDAwNDYzTWlj
cm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLldvcmtib29rRXZlbnRzX0V2ZW50AABgAQAtTWlj
cm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLldvcmtib29rRXZlbnRzLU1pY3Jvc29mdC5PZmZp
Y2UuSW50ZXJvcC5FeGNlbC5Xb3JrYm9va0V2ZW50cwAAKQEAJDAwMDI0NDEzLTAwMDAtMDAwMC1D
MDAwLTAwMDAwMDAwMDA0NgAABiABARGA3SkBACQwMDAyNDQxMi0wMDAwLTAwMDAtQzAwMC0wMDAw
MDAwMDAwNDYAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3b3JrRGlz
cGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF9kZTc0ZDBjNTNjYzI0Mzg5YTM2ZmUxYzQw
MDhmYjZiZgAABQEAAAAAHAEAF1RoZSBCb25Ub24gU3RvcmVzLCBJbmMuAAAtAQAoQ29weXJpZ2h0
IEAgVGhlIEJvblRvbiBTdG9yZXMsIEluYy4gMjAxOAAACAEACAAAAAAAHgEAAQBUAhZXcmFwTm9u
RXhjZXB0aW9uVGhyb3dzAQAA9DwAAAAAAAAAAAAADj0AAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAA9AAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAAEAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEA
EAAAABgAAIAAAAAAAAAAAAAAAAAAAAEAAQAAADAAAIAAAAAAAAAAAAAAAAAAAAEAAAAAAEgAAABY
QAAAMAQAAAAAAAAAAAAAMAQ0AAAAVgBTAF8AVgBFAFIAUwBJAE8ATgBfAEkATgBGAE8AAAAAAL0E
7/4AAAEAAAABAJ2U+hkAAAEAnZT6GT8AAAAAAAAABAAAAAIAAAAAAAAAAAAAAAAAAABEAAAAAQBW
AGEAcgBGAGkAbABlAEkAbgBmAG8AAAAAACQABAAAAFQAcgBhAG4AcwBsAGEAdABpAG8AbgAAAAAA
AACwBJADAAABAFMAdAByAGkAbgBnAEYAaQBsAGUASQBuAGYAbwAAAGwDAAABADAAMAAwADAAMAA0
AGIAMAAAAFAAGAABAEMAbwBtAHAAYQBuAHkATgBhAG0AZQAAAAAAVABoAGUAIABCAG8AbgBUAG8A
bgAgAFMAdABvAHIAZQBzACwAIABJAG4AYwAuAAAAcAAkAAEARgBpAGwAZQBEAGUAcwBjAHIAaQBw
AHQAaQBvAG4AAAAAAFMAVABfAGQAZQA3ADQAZAAwAGMANQAzAGMAYwAyADQAMwA4ADkAYQAzADYA
ZgBlADEAYwA0ADAAMAA4AGYAYgA2AGIAZgAAAEAADwABAEYAaQBsAGUAVgBlAHIAcwBpAG8AbgAA
AAAAMQAuADAALgA2ADYANQAwAC4AMwA4ADAANAA1AAAAAABwACgAAQBJAG4AdABlAHIAbgBhAGwA
TgBhAG0AZQAAAFMAVABfAGQAZQA3ADQAZAAwAGMANQAzAGMAYwAyADQAMwA4ADkAYQAzADYAZgBl
ADEAYwA0ADAAMAA4AGYAYgA2AGIAZgAuAGQAbABsAAAAeAApAAEATABlAGcAYQBsAEMAbwBwAHkA
cgBpAGcAaAB0AAAAQwBvAHAAeQByAGkAZwBoAHQAIABAACAAVABoAGUAIABCAG8AbgBUAG8AbgAg
AFMAdABvAHIAZQBzACwAIABJAG4AYwAuACAAMgAwADEAOAAAAAAAeAAoAAEATwByAGkAZwBpAG4A
YQBsAEYAaQBsAGUAbgBhAG0AZQAAAFMAVABfAGQAZQA3ADQAZAAwAGMANQAzAGMAYwAyADQAMwA4
ADkAYQAzADYAZgBlADEAYwA0ADAAMAA4AGYAYgA2AGIAZgAuAGQAbABsAAAAaAAkAAEAUAByAG8A
ZAB1AGMAdABOAGEAbQBlAAAAAABTAFQAXwBkAGUANwA0AGQAMABjADUAMwBjAGMAMgA0ADMAOAA5
AGEAMwA2AGYAZQAxAGMANAAwADAAOABmAGIANgBiAGYAAABEAA8AAQBQAHIAbwBkAHUAYwB0AFYA
ZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANgA1ADAALgAzADgAMAA0ADUAAAAAAEgADwABAEEAcwBz
AGUAbQBiAGwAeQAgAFYAZQByAHMAaQBvAG4AAAAxAC4AMAAuADYANgA1ADAALgAzADgAMAA0ADUA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMAAADAAAACA9AAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==</BinaryItem>
        </ScriptProject>
      </DTS:ObjectData>
    </DTS:Executable>
    <DTS:Executable
      DTS:refId="Package\Generate the weekly report"
      DTS:AssignExpression="@NoOfWeeks = @NoOfWeeks + 1"
      DTS:CreationName="STOCK:FORLOOP"
      DTS:Description="For Loop Container"
      DTS:DTSID="{8311678A-76C8-4738-B8D9-F4CD9206B5DE}"
      DTS:EvalExpression="@NoOfWeeks&lt;5"
      DTS:ExecutableType="STOCK:FORLOOP"
      DTS:InitExpression="@NoOfWeeks=0"
      DTS:LocaleID="-1"
      DTS:MaxConcurrent="1"
      DTS:ObjectName="Generate the weekly report">
      <DTS:Variables />
      <DTS:Executables>
        <DTS:Executable
          DTS:refId="Package\Generate the weekly report\Add total text to the spreadsheet and two blank rows to separate weeks"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{3C69F95B-E42A-42FF-962B-E8E428751CB6}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Add total text to the spreadsheet and two blank rows to separate weeks"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_bbe633f22b4f4b8e8d05891c2389cb68"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::ReportFileName">
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Runtime.InteropServices;
using Microsoft.Office.Interop.Excel;
#endregion

namespace ST_bbe633f22b4f4b8e8d05891c2389cb68
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
            // TODO: Add your code here
            string reportFileName = (string)Dts.Variables["User::ReportFileName"].Value;
            Microsoft.Office.Interop.Excel.Application excelApp = new Microsoft.Office.Interop.Excel.Application();

            Workbook workBook = excelApp.Workbooks.Open(reportFileName);
            Worksheet workSheet = workBook.Worksheets.get_Item(1);

            // Add total text at the end of the row
            Range cellRange = workSheet.Cells.SpecialCells(XlCellType.xlCellTypeLastCell, Type.Missing);
            Range last = workSheet.get_Range(string.Concat("D", (cellRange.Row)), Type.Missing);
            last.Value = "Total";

            workSheet.Rows[cellRange.Row + 1].Insert();
            workSheet.Rows[cellRange.Row + 2].Insert();

            workBook.Save();
            workBook.Close();
            excelApp.Application.Quit();
            Marshal.ReleaseComObject(workSheet);
            Marshal.ReleaseComObject(workBook);
            Marshal.ReleaseComObject(excelApp);
			Dts.TaskResult = (int)ScriptResults.Success;
		}

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="ST_bbe633f22b4f4b8e8d05891c2389cb68.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{AFAC72B0-83F5-41BF-A17C-DD266A89361B}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_bbe633f22b4f4b8e8d05891c2389cb68</RootNamespace>
    <AssemblyName>ST_bbe633f22b4f4b8e8d05891c2389cb68</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="Microsoft.CSharp" />
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <ItemGroup>
    <COMReference Include="Microsoft.Office.Core">
      <Guid>{2DF8D04C-5BFA-101B-BDE5-00AA0044DE52}</Guid>
      <VersionMajor>2</VersionMajor>
      <VersionMinor>8</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
    <COMReference Include="Microsoft.Office.Interop.Excel">
      <Guid>{00020813-0000-0000-C000-000000000046}</Guid>
      <VersionMajor>1</VersionMajor>
      <VersionMinor>9</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
    <COMReference Include="VBIDE">
      <Guid>{0002E157-0000-0000-C000-000000000046}</Guid>
      <VersionMajor>5</VersionMajor>
      <VersionMinor>3</VersionMinor>
      <Lcid>0</Lcid>
      <WrapperTool>primary</WrapperTool>
      <Isolated>False</Isolated>
      <EmbedInteropTypes>True</EmbedInteropTypes>
    </COMReference>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:Language>msBuild</msb:Language>
		<msb:CodeName>ST_bbe633f22b4f4b8e8d05891c2389cb68</msb:CodeName>
		<msb:DisplayName>ST_bbe633f22b4f4b8e8d05891c2389cb68</msb:DisplayName>
		<msb:ProjectId>{8CC22F71-A29E-43F4-B887-8F1D26E3EB6B}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_bbe633f22b4f4b8e8d05891c2389cb68.csproj"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bbe633f22b4f4b8e8d05891c2389cb68.Properties.Settings.get_Default():ST_bbe633f22b4f4b8e8d05891c2389cb68.Properties.Sett" +
    "ings")]

namespace ST_bbe633f22b4f4b8e8d05891c2389cb68.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_bbe633f22b4f4b8e8d05891c2389cb68")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("The BonTon Stores, Inc.")]
[assembly: AssemblyProduct("ST_bbe633f22b4f4b8e8d05891c2389cb68")]
[assembly: AssemblyCopyright("Copyright @ The BonTon Stores, Inc. 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bbe633f22b4f4b8e8d05891c2389cb68.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bbe633f22b4f4b8e8d05891c2389cb68.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_bbe633f22b4f4b8e8d05891c2389cb68.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_bbe633f22b4f4b8e8d05891c2389cb68.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_bbe633f22b4f4b8e8d05891c2389cb68.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_bbe633f22b4f4b8e8d05891c2389cb68.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDALzOrVoAAAAAAAAAAOAAAiELAQsAACgAAAAIAAAAAAAAnkcA
AAAgAAAAYAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACgAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAEhHAABTAAAAAGAAAIgEAAAAAAAAAAAAAAAAAAAA
AAAAAIAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAApCcAAAAgAAAAKAAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIgEAAAAYAAAAAYAAAAqAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAIAAAAACAAAAMAAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACA
RwAAAAAAAEgAAAACAAUA4CMAAGgjAAABAAAAAAAAACgjAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwEABSAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKdCMA
AAEKcp0AAHBzGgAACigbAAAKKBwAAAp0CAAAAgsHbwwAAAYGfh4AAAp+HgAACn4eAAAKfh4AAAp+
HgAACn4eAAAKfh4AAAp+HgAACn4eAAAKfh4AAAp+HgAACn4eAAAKfh4AAAp+HgAACm8QAAAGDH4H
AAAELSQW0AcAAAIoDwAACtAEAAACKA8AAAooIAAACighAAAKgAcAAAR+BwAABHsiAAAKfgcAAAQI
bxYAAAYXjDAAAAFvGAAABm8lAAAKDQlvGgAABh8LficAAApvJQAABhMECXLnAABwEQRvIwAABoww
AAABKCoAAAp+JwAACm8cAAAGEwURBX4eAAAKcusAAHBvKAAABn4IAAAELTkgAAEAAHL3AABwFNAE
AAACKA8AAAoXjTQAAAETBhEGFhYUKC0AAAqiEQYoLgAACigvAAAKgAgAAAR+CAAABHswAAAKfggA
AAQJbx4AAAYRBG8jAAAGF1iMMAAAAX4eAAAKbyAAAAZvMwAACn4JAAAELTkgAAEAAHL3AABwFNAE
AAACKA8AAAoXjTQAAAETBxEHFhYUKC0AAAqiEQcoLgAACigvAAAKgAkAAAR+CQAABHswAAAKfgkA
AAQJbx4AAAYRBG8jAAAGGFiMMAAAAX4eAAAKbyAAAAZvMwAACghvFAAABgh+HgAACn4eAAAKfh4A
AApvEgAABgdvCgAABm8OAAAGCSg4AAAKJggoOAAACiYHKDgAAAomAigWAAAKFm85AAAKKh4CKDoA
AAoqAAAAAAAAtAAAAM7K774BAAAAkQAAAGxTeXN0ZW0uUmVzb3VyY2VzLlJlc291cmNlUmVhZGVy
LCBtc2NvcmxpYiwgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
a2VuPWI3N2E1YzU2MTkzNGUwODkjU3lzdGVtLlJlc291cmNlcy5SdW50aW1lUmVzb3VyY2VTZXQC
AAAAAAAAAAAAAABQQURQQURQtAAAAEJTSkIBAAEAAAAAAAwAAAB2NC4wLjMwMzE5AAAAAAUAbAAA
AEQNAAAjfgAAsA0AAGwMAAAjU3RyaW5ncwAAAAAcGgAACAEAACNVUwAkGwAAEAAAACNHVUlEAAAA
NBsAADQIAAAjQmxvYgAAAAAAAAACAAABVz+iCQkDAAAA+iUzABYAAAEAAABFAAAAFgAAABQAAAAo
AAAAKwAAAAkAAABEAAAADAAAAF4AAAApAAAAAgAAAAcAAAANAAAAEAAAAAQAAAABAAAABgAAAAEA
AAACAAAAAAAKAAEAAAAAAAYAwQC6AAoA3QDIAA4APQEUAQYAWQG6AAYAbwFeAQYAoAGLAQYAVwI9
AgYAggJwAgYAmQJwAgYAtgJwAgYA1QJwAgYA7gJwAgYABwNwAgYAIgNwAgYAPQNwAgYAVgNwAgYA
jwNvAwYArwNvAwYA4APNAwYA/QO6AAYAAgS6AAYAJgRwAgoAUgQ8BAoAawQ8BAYAgARvAw4AogQU
ARIA6ARvAwYA8wS6ABIA+gRvAwQAAwUNBQYANwW6AA4AVgUUARYArwWPBRYAxwWPBQYA4wW6AAYA
6gW6AAYAAAa6AAQAGQYNBQQAJQYNBQQAMgYNBQYASgZwAgQAWAYNBRoAlgZ3BhIAnQZvAxoArAZ3
BgQA1AYNBQQA3gYNBQYA9Aa6AAQAAQcNBQQADAcNBQQAHAcNBRoAVwd3BhoAagd3BgYAnQeCBwYA
DQjuBwQANQgNBQYARQjuBwYAUwjuBwYAawjuBwYAfgjuBwQAjwgNBQYAnwjuBwYAyghwAgYA9Ajh
CAYADQnuBwQAxAkNBQYA4gruBwYA+QruBwYA6AvuBwAAAAABAAAAAAABAAEAAAAQADIAPAAFAAEA
AQAAARAAawA8AAkAAwAFAAEAEAB0AH8ADQAEAAgAAwEAAKMAAAARAAQACgCDARAAxAQAAAUABwAK
AKEQAAADBQ0FAAAKAAoAoRAAABkGDQUAAAoACgChEAAAJQYNBQAACgAKAKEQAAAyBg0FAAAKAA8A
oRAAAFgGDQUAAAoAEQChEAAA1AYNBQAACgARAKEQAADeBg0FAAAKABcAoRAAAAEHDQUAAAoAGQCh
EAAADAcNBQAACgAfAAEBAAAcBw0FEQAKACkAoRAAADUIDQUAABUAKQChEAAAjwgNBQAAFQApAKEQ
AADECQ0FAAAVACkAoRAAAAMMDQUAABUAKQChEAAADQwNBQAAFQApAKEQAAAXDA0FAAAVACkAEQB/
ARMAEQCsARcAEQD2ATkABgYfAkcAVoAnAkoAVoAvAkoAFgAsBY0AFgBABZwAFgBLBZwABgYfAkcA
VoAKCxQEVoAbCxQEVoAvCxQEVoBCCxQEVoBVCxQEVoBoCxQEVoB6CxQEVoCYCxQEVoC3CxQEVoDP
CxQEUCAAAAAAgxi8ARsAAQBYIAAAAACTCMIBHwABAJEgAAAAAJMI1gEkAAEAmCAAAAAAkwjiASkA
AQCgIAAAAACWCAYCPQACALMgAAAAAIYYvAEbAAIApyAAAAAAkRibBIkAAgC8IAAAAACGABoCGwAC
ABojAAAAAIYYvAEbAAIAAAAAAAAAxg3ZB7IBAgAAAAAAAAAGGK8IGwADAAAAAAAAAMYNPAbOAAMA
AAAAAAAABhi8CBsABAAAAAAAAADGBekHGwAEAAAAAAAAAAYYAAkbAAQAAAAAAAAAxgVhBtgABAAA
AAAAAAAGGNkJGwAUAAAAAAAAAMYF0werARQAAAAAAAAABhgAChsAFwAAAAAAAADGBc4HGwAXAAAA
AAAAAAYYDQobABcAAAAAAAAAxg3lBiABFwAAAAAAAAAGGCUKGwAYAAAAAAAAAMYN0AUlARgAAAAA
AAAABhg8ChsAGgAAAAAAAADGDRIHPQEaAAAAAAAAAAYYSQobABsAAAAAAAAAxg1DB1cBGwAAAAAA
AAAGGGIKGwAeAAAAAAAAAMYNuAc9AR4AAAAAAAAABhg8ChsAHwAAAAAAgADGDcEHlQEfAAAAAACA
AMYNjgqrASIAAAAAAAAABhibChsAJQAAAAAAgADGDTQHTQElAAAAAAAAAAYYqAobACUAAAAAAIAA
xgUnB0UBJQAAAAAAAAAGGLUKGwAoAAAAAACAAMYN2QUlASgAAAAAAIAAxg1NB14BKgAAAAEANwIA
IAAAAAAAIAAAAAAAIAAAAAABIAEAJQkRIAIALgkRIAMAOgkRIAQAQwkRIAUASgkRIAYAUwkRIAcA
ZAkRIAgAfgkRIAkAhQkRIAoAjwkRIAsAmAkRIAwAnwkRIA0AqQkRIA4AsgkRIA8AuAkRIAEA5gkR
IAIAJQkRIAMA8gkAIAAAAAAAIAAAAAABIAEAMQoAIAAAAAAAIAAAAAABIAEAVgoRIAIAXAoAIAAA
AAAAIAAAAAARIAEAeQoRIAIAggoRIAEAeQoRIAIAggoRIAMANwIAIAAAAAABAAEA/QMRIAIAUgYA
IAAAAAARIAEAwgoRIAEAwgoRIAIANwIHADgABwBEAAgAJAAIAEgACgABAQsAMAALAEwADQABAQ8A
AQE5ALwBWABBALwBWABJALwBWABRALwBWABZALwBWABhALwBWABpALwBWABxALwBWAB5ALwBWACB
ALwBWACJALwBXQCRALwBGwCZALwBGwAJALwBGwChABQEYgChAC8EaQApALwBbgC5ALwBegDJALwB
GwARALwBGwDRALwBGwAZAGgFqQABAbkFrwAJAdAFtQARAdkFvAAhAbwBWAChAO8FwAApAQoGyABj
ADwGzgBJAVIG0wCDAGEG2ABZAb4G9QAMAMYGEAEMAM0GHAGzAOUGIAHDANAFJQEUAPoGNAHTABIH
PQGhAEoGQgErAScHRQEbATQHTQEZATwHUQHjAEMHVwFDAU0HXgGhAcYGZAFZAasHbgEcAMYGEAEc
AM0GHAHzALgHPQEDAcEHlQEkAPoGowGjAM4HGwCTANMHqwFTANkHsgFzAOkHGwC5ARUItwEBASYI
XQAZALwBGwDJAbwBWADRAbwBGwDZAbwBGwDhAbwB/AHxAbwBXQD5AbwBWAAJArwBXQAZArwBDQTR
AbwBSgQpArwB/QQIABQATgAIABgAUwAIACwAGAQIADAAHQQIADQAIgQIADgAJwQIADwALAQIAEAA
MQQIAEQANgQIAEgAOwQIAEwAQAQIAFAARQQpAJMAgAAuACsAwAcuAEMAugcuAFsACwguACMAugcu
ADMAkQcuABsAugcuAGMAFAguADsA3QcuAAsASQcuABMAkQdDAGsAUwBJAJMAgABhAJsAUwCDAKsA
UwDDAJsAUwDjAPMBAgLjAOMBUwDjANsB0gHjAJsAUwADAfMBAgIDAdsBYgIDAZsAUwADAeMBUwAj
AQMCswIjAeMBUwAjAZsAUwAjAdsBYgJAAfsBjAJDAdsB1wJDAeMBUwBDAZsAUwBDAQMCswJjAdsB
AQNjAeMBUwBjAfMBAgJjAZsAUwCAAfsBlwKDAeMBUwCDAdsBAQODAZsAUwCjAeMBUwCjAZsAUwCj
AQMCswKjAdsBbQPAAfsBoALDAeMBUwDDAdsB0gHDAZsAUwDjAQMCswLjARMCgADjAeMBUwDjAdsB
4wPjAZsAUwAAAvsBygIAAgsCwQIDApsAUwADAhsCUAQjAhsCpAQjAiMCBQUjApsAUwBAAvsBNANA
AgsCKwNDAhsCXAVDAiMCtQVDApsAUwBjAhsCDAZjApsAUwBjAiMCagaAAgsCPQOAAvsBRgODAtsB
ywaDAhMCgACDAuMBUwCDApsAUwCjAhMCgACjAuMBUwCjAtsB9QajApsAUwDAAvsBTwPDAuMBUwDD
AtsBHwfDApsAUwDDAhMCgAAAA/sBXQNAA/sBlwOAA/sBoAPAA/sBqQMABPsBPQMgBPsBPQNgBPsB
vgOgBPsBxwPgBPsB0AMABfsB0AMFAJUCBwCVAgkAlQILANMCDQDVAg8A1QIRANUCEwDVAhUA1QIX
ANUCGQDVAhsA1QIdANUCHwDVAiEA1QIjANUCJQDVAicA1QIpANUCKwDVAi0A1QIvAJUCMQBmAzMA
1QI1AJUCNwCVAjkA1QI7ANUCPQCVAj8A1QJBANUCQwDVAkUA1QJHANUCSQDVAksAlQJPANUCUQDV
AlMA1QJVANUCVwDVAnUAvAECAAEAAwADAAkABAAMAAYADQAHAA4ACAAPAAsAAABvAS8AAADuATQA
AAASAkIAAAAZBqkCAAAyBq4CAAAaClgDAAA3CmgDAABuCrIDAAAMB7cDAAB0CrIDAADVCtkDAADe
Ct8DAABSBmgDAgACAAMAAgADAAUAAQAEAAUAAgAFAAcAAgAKAAkAAgAMAAsAAgAWAA0AAgAYAA8A
AgAaABEAAgAcABMAAgAeABUAAgAgABcAAQAhABcAAgAjABkAAgAnABsAAQAoABsAAgEqAYkBmwEE
gAAAAQAAAPoZ7o8AAAAAAAB/AAAABAAAAAAAAAAAAAAAAQCxAAAAAAAEAAAAAAAAAAAAAAABALoA
AAAAAAwAAAAAAAAAAAAAAAoA9QAAAAAABAAAAAAAAAAAAAAAAQDcBAAAAAAMAAAAAAAAAAAAAAAK
AHAFAAAAAAQAAAAAAAAAAAAAAOwAZgYAAAAAAAAAAAEAAAAmDAAABQAEAAYABAAAAAA8TW9kdWxl
PgBTVF9iYmU2MzNmMjJiNGY0YjhlOGQwNTg5MWMyMzg5Y2I2OC5kbGwAUmVzb3VyY2VzAFNUX2Ji
ZTYzM2YyMmI0ZjRiOGU4ZDA1ODkxYzIzODljYjY4LlByb3BlcnRpZXMAU2V0dGluZ3MAU2NyaXB0
TWFpbgBTVF9iYmU2MzNmMjJiNGY0YjhlOGQwNTg5MWMyMzg5Y2I2OABTY3JpcHRSZXN1bHRzAG1z
Y29ybGliAFN5c3RlbQBPYmplY3QAU3lzdGVtLkNvbmZpZ3VyYXRpb24AQXBwbGljYXRpb25TZXR0
aW5nc0Jhc2UATWljcm9zb2Z0LlNxbFNlcnZlci5TY3JpcHRUYXNrAE1pY3Jvc29mdC5TcWxTZXJ2
ZXIuRHRzLlRhc2tzLlNjcmlwdFRhc2sAVlNUQVJUU2NyaXB0T2JqZWN0TW9kZWxCYXNlAEVudW0A
U3lzdGVtLlJlc291cmNlcwBSZXNvdXJjZU1hbmFnZXIAcmVzb3VyY2VNYW4AU3lzdGVtLkdsb2Jh
bGl6YXRpb24AQ3VsdHVyZUluZm8AcmVzb3VyY2VDdWx0dXJlAC5jdG9yAGdldF9SZXNvdXJjZU1h
bmFnZXIAZ2V0X0N1bHR1cmUAc2V0X0N1bHR1cmUAQ3VsdHVyZQBkZWZhdWx0SW5zdGFuY2UAZ2V0
X0RlZmF1bHQARGVmYXVsdABNYWluAHZhbHVlX18AU3VjY2VzcwBGYWlsdXJlAHZhbHVlAFN5c3Rl
bS5SdW50aW1lLlZlcnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZs
ZWN0aW9uAEFzc2VtYmx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0
ZQBBc3NlbWJseUNvbmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRl
AEFzc2VtYmx5UHJvZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3Nl
bWJseVRyYWRlbWFya0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlW
ZXJzaW9uQXR0cmlidXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRp
b25SZWxheGF0aW9uc0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTeXN0
ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29kZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVU
eXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2VtYmx5AGdldF9Bc3NlbWJseQBTeXN0ZW0u
Q29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0
YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5jY3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5
UG9pbnRBdHRyaWJ1dGUAPE1haW4+b19fU2l0ZUNvbnRhaW5lcjAAU3lzdGVtLkNvcmUAQ2FsbFNp
dGVgMQBGdW5jYDMAQ2FsbFNpdGUAV29ya3NoZWV0AE1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5F
eGNlbAA8PnBfX1NpdGUxAEFjdGlvbmAyADw+cF9fU2l0ZTIAPD5wX19TaXRlMwBTY3JpcHRPYmpl
Y3RNb2RlbABnZXRfRHRzAE1pY3Jvc29mdC5TcWxTZXJ2ZXIuTWFuYWdlZERUUwBNaWNyb3NvZnQu
U3FsU2VydmVyLkR0cy5SdW50aW1lAFZhcmlhYmxlcwBnZXRfVmFyaWFibGVzAFZhcmlhYmxlAGdl
dF9JdGVtAGdldF9WYWx1ZQBTdHJpbmcAR3VpZABHZXRUeXBlRnJvbUNMU0lEAEFjdGl2YXRvcgBD
cmVhdGVJbnN0YW5jZQBBcHBsaWNhdGlvbgBfQXBwbGljYXRpb24AV29ya2Jvb2tzAGdldF9Xb3Jr
Ym9va3MATWlzc2luZwBWYWx1ZQBXb3JrYm9vawBPcGVuAE1pY3Jvc29mdC5DU2hhcnAATWljcm9z
b2Z0LkNTaGFycC5SdW50aW1lQmluZGVyAEJpbmRlcgBDYWxsU2l0ZUJpbmRlcgBDU2hhcnBCaW5k
ZXJGbGFncwBDb252ZXJ0AENyZWF0ZQBUYXJnZXQAX1dvcmtib29rAFNoZWV0cwBnZXRfV29ya3No
ZWV0cwBJbnQzMgBJbnZva2UAX1dvcmtzaGVldABSYW5nZQBnZXRfQ2VsbHMAWGxDZWxsVHlwZQBT
cGVjaWFsQ2VsbHMAZ2V0X1JvdwBDb25jYXQAZ2V0X1JhbmdlAHNldF9WYWx1ZQBDU2hhcnBBcmd1
bWVudEluZm8AQ1NoYXJwQXJndW1lbnRJbmZvRmxhZ3MAU3lzdGVtLkNvbGxlY3Rpb25zLkdlbmVy
aWMASUVudW1lcmFibGVgMQBJbnZva2VNZW1iZXIAZ2V0X1Jvd3MAZ2V0X19EZWZhdWx0AFNhdmUA
Q2xvc2UAZ2V0X0FwcGxpY2F0aW9uAFF1aXQAU3lzdGVtLlJ1bnRpbWUuSW50ZXJvcFNlcnZpY2Vz
AE1hcnNoYWwAUmVsZWFzZUNvbU9iamVjdABzZXRfVGFza1Jlc3VsdABEb2NFdmVudHNfRXZlbnQA
R3VpZEF0dHJpYnV0ZQBUeXBlSWRlbnRpZmllckF0dHJpYnV0ZQBDb21JbXBvcnRBdHRyaWJ1dGUA
Q29DbGFzc0F0dHJpYnV0ZQBBcHBFdmVudHNfRXZlbnQARGlzcElkQXR0cmlidXRlAF9WdGJsR2Fw
MV80NABfVnRibEdhcDJfMTc3AERlZmF1bHRNZW1iZXJBdHRyaWJ1dGUAU3lzdGVtLkNvbGxlY3Rp
b25zAElFbnVtZXJhYmxlAF9WdGJsR2FwMV8xMgBMQ0lEQ29udmVyc2lvbkF0dHJpYnV0ZQBGaWxl
bmFtZQBVcGRhdGVMaW5rcwBSZWFkT25seQBGb3JtYXQAUGFzc3dvcmQAV3JpdGVSZXNQYXNzd29y
ZABJZ25vcmVSZWFkT25seVJlY29tbWVuZGVkAE9yaWdpbgBEZWxpbWl0ZXIARWRpdGFibGUATm90
aWZ5AENvbnZlcnRlcgBBZGRUb01ydQBMb2NhbABDb3JydXB0TG9hZABXb3JrYm9va0V2ZW50c19F
dmVudABfVnRibEdhcDFfMjAAU2F2ZUNoYW5nZXMAUm91dGVXb3JrYm9vawBfVnRibEdhcDJfNzQA
X1Z0YmxHYXAzXzI4AFdvcmtzaGVldHMAX1Z0YmxHYXAxXzgASW5kZXgASXRlbQBfVnRibEdhcDFf
NDUAX1Z0YmxHYXAyXzQ3AENlbGwxAENlbGwyAF9WdGJsR2FwM18xAENlbGxzAFJvd3MAUm93SW5k
ZXgAQ29sdW1uSW5kZXgAc2V0X19EZWZhdWx0AF9WdGJsR2FwMl85MgBfVnRibEdhcDNfMTcAX1Z0
YmxHYXA0XzE1AFJhbmdlVmFsdWVEYXRhVHlwZQBfRGVmYXVsdABSb3cASW50ZXJmYWNlVHlwZUF0
dHJpYnV0ZQBDb21JbnRlcmZhY2VUeXBlAHhsQ2VsbFR5cGVCbGFua3MAeGxDZWxsVHlwZUNvbnN0
YW50cwB4bENlbGxUeXBlRm9ybXVsYXMAeGxDZWxsVHlwZUxhc3RDZWxsAHhsQ2VsbFR5cGVDb21t
ZW50cwB4bENlbGxUeXBlVmlzaWJsZQB4bENlbGxUeXBlQWxsRm9ybWF0Q29uZGl0aW9ucwB4bENl
bGxUeXBlU2FtZUZvcm1hdENvbmRpdGlvbnMAeGxDZWxsVHlwZUFsbFZhbGlkYXRpb24AeGxDZWxs
VHlwZVNhbWVWYWxpZGF0aW9uAENvbUV2ZW50SW50ZXJmYWNlQXR0cmlidXRlAEFwcEV2ZW50cwBE
b2NFdmVudHMAV29ya2Jvb2tFdmVudHMAU1RfYmJlNjMzZjIyYjRmNGI4ZThkMDU4OTFjMjM4OWNi
NjguUHJvcGVydGllcy5SZXNvdXJjZXMucmVzb3VyY2VzAAAAAABxUwBUAF8AYgBiAGUANgAzADMA
ZgAyADIAYgA0AGYANABiADgAZQA4AGQAMAA1ADgAOQAxAGMAMgAzADgAOQBjAGIANgA4AC4AUABy
AG8AcABlAHIAdABpAGUAcwAuAFIAZQBzAG8AdQByAGMAZQBzAAApVQBzAGUAcgA6ADoAUgBlAHAA
bwByAHQARgBpAGwAZQBOAGEAbQBlAABJMAAwADAAMgA0ADUAMAAwAC0AMAAwADAAMAAtADAAMAAw
ADAALQBDADAAMAAwAC0AMAAwADAAMAAwADAAMAAwADAAMAA0ADYAAQNEAAALVABvAHQAYQBsAAAN
SQBuAHMAZQByAHQAAAAAAMk3z+eqTBhJkLM4AXlAL1kACLd6XFYZNOCJCImEXc2AgMyRAwYSFQMG
EhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAAEgwECAASDAIGCAMGERQEAAAA
AAQBAAAABCABAQ4EIAEBCAYAARJREVUEIAASWQYgAgEOElkEBwESFQUgAQERYQgBAAIAAAAAAAMA
AAEOBhUSbQEVEnEDEnUcEhwMBhUSbQEVEn0CEnUcBSAAEoCBBSAAEoCFBiABEoCJHAMgABwHAAES
URGAkQUAARwSUQQgABIoBAYSgKUTIA8SLA4cHBwcHBwcHBwcHBwcHAiwP19/EdUKOgwAAxKAsRGA
tRJRElENFRJtARUScQMSdRwSHAsAARUSbQETABKAsQMGEwAEIAASNAQgARwcCRUScQMSdRwSHAgg
AhMCEwATAQQgABI8AgYcByACEjwRQBwDIAAIBQACDhwcBiACEjwcHAUgAgEcHAkAAhKA0RGA1Q4a
AAUSgLERgLUOFRKA2QESURJRFRKA2QESgNELFRJtARUSfQISdRwFIAIcHBwHFRJ9AhJ1HAcgAgET
ABMBBiADARwcHAQgABIgBAABCBwVBwgOEiASLBIcEjwSPB0SgNEdEoDRKQEAJDAwMDIwOEQ4LTAw
MDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAABSABARJRXwEAWlN5c3RlbS5PYmplY3QsIG1zY29y
bGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3
YTVjNTYxOTM0ZTA4OQAAKQEAJDAwMDIwOEQ1LTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAA
CAEAlAAAAAAAARwIAQA8AgAAAAAIAQAuAQAAAAAEKAASIAQoABIoDQEACF9EZWZhdWx0AAAIAQAP
AAAAAAAIAQCDBwAAAAABEwEbKQEAJDAwMDIwOERCLTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0
NgAAKQEAJDAwMDIwOERBLTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAACAEAAwAAAAAACAEA
FQEAAAAACAEAAAAAAAAACAEAGwEAAAAACAEA7gEAAAAABCgAEjQIAQCqAAAAAAABGgQoARwcKQEA
JDAwMDIwOEQ3LTAwMDAtMDAwMC1DMDAwLTAwMDAwMDAwMDA0NgAACAEA7gAAAAAACAEAxQAAAAAA
CAEAAgEAAAAABCgAEjwGKAISPBwcCAEAAQEAAAAACAEAmgEAAAAACAEABgAAAAAABSgCHBwcAygA
CCkBACQwMDAyMDg0Ni0wMDAwLTAwMDAtQzAwMC0wMDAwMDAwMDAwNDYAAAYgAQERgREDBhFABAQA
AAAEAgAAAATl7///BAsAAAAE0O///wQMAAAABLTv//8Es+///wSy7///BLHv//8FIAIBDg5TAQAk
MDAwMjA4MTMtMDAwMC0wMDAwLWMwMDAtMDAwMDAwMDAwMDQ2KU1pY3Jvc29mdC5PZmZpY2UuSW50
ZXJvcC5FeGNlbC5YbENlbGxUeXBlAABYAQAkMDAwMjA4MTMtMDAwMC0wMDAwLWMwMDAtMDAwMDAw
MDAwMDQ2Lk1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5Eb2NFdmVudHNfRXZlbnQAAAcg
AgESURJRVgEAKE1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5Eb2NFdmVudHMoTWljcm9z
b2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLkRvY0V2ZW50cwAAWAEAJDAwMDIwODEzLTAwMDAtMDAw
MC1jMDAwLTAwMDAwMDAwMDA0Ni5NaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuQXBwRXZl
bnRzX0V2ZW50AABWAQAoTWljcm9zb2Z0Lk9mZmljZS5JbnRlcm9wLkV4Y2VsLkFwcEV2ZW50cyhN
aWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuQXBwRXZlbnRzAABdAQAkMDAwMjA4MTMtMDAw
MC0wMDAwLWMwMDAtMDAwMDAwMDAwMDQ2M01pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5X
b3JrYm9va0V2ZW50c19FdmVudAAAYAEALU1pY3Jvc29mdC5PZmZpY2UuSW50ZXJvcC5FeGNlbC5X
b3JrYm9va0V2ZW50cy1NaWNyb3NvZnQuT2ZmaWNlLkludGVyb3AuRXhjZWwuV29ya2Jvb2tFdmVu
dHMAACkBACQwMDAyNDQxMy0wMDAwLTAwMDAtQzAwMC0wMDAwMDAwMDAwNDYAACkBACQwMDAyNDQx
MS0wMDAwLTAwMDAtQzAwMC0wMDAwMDAwMDAwNDYAACkBACQwMDAyNDQxMi0wMDAwLTAwMDAtQzAw
MC0wMDAwMDAwMDAwNDYAAEcBABouTkVURnJhbWV3b3JrLFZlcnNpb249djQuMAEAVA4URnJhbWV3
b3JrRGlzcGxheU5hbWUQLk5FVCBGcmFtZXdvcmsgNCgBACNTVF9iYmU2MzNmMjJiNGY0YjhlOGQw
NTg5MWMyMzg5Y2I2OAAABQEAAAAAHAEAF1RoZSBCb25Ub24gU3RvcmVzLCBJbmMuAAAtAQAoQ29w
eXJpZ2h0IEAgVGhlIEJvblRvbiBTdG9yZXMsIEluYy4gMjAxOAAACAEACAAAAAAAHgEAAQBUAhZX
cmFwTm9uRXhjZXB0aW9uVGhyb3dzAQBwRwAAAAAAAAAAAACORwAAACAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAgEcAAAAAAAAAAAAAAAAAAAAAX0NvckRsbE1haW4AbXNjb3JlZS5kbGwAAAAAAP8lACAA
EAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABABAAAAAY
AACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABIAAAAWGAAADAE
AAAAAAAAAAAAADAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAAAAC9BO/+AAAB
AAAAAQDuj/oZAAABAO6P+hk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAAAAEAVgBhAHIA
RgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4AAAAAAAAAsASQ
AwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABsAwAAAQAwADAAMAAwADAANABiADAA
AABQABgAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAFQAaABlACAAQgBvAG4AVABvAG4AIABT
AHQAbwByAGUAcwAsACAASQBuAGMALgAAAHAAJAABAEYAaQBsAGUARABlAHMAYwByAGkAcAB0AGkA
bwBuAAAAAABTAFQAXwBiAGIAZQA2ADMAMwBmADIAMgBiADQAZgA0AGIAOABlADgAZAAwADUAOAA5
ADEAYwAyADMAOAA5AGMAYgA2ADgAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBvAG4AAAAAADEA
LgAwAC4ANgA2ADUAMAAuADMANgA4ADQANgAAAAAAcAAoAAEASQBuAHQAZQByAG4AYQBsAE4AYQBt
AGUAAABTAFQAXwBiAGIAZQA2ADMAMwBmADIAMgBiADQAZgA0AGIAOABlADgAZAAwADUAOAA5ADEA
YwAyADMAOAA5AGMAYgA2ADgALgBkAGwAbAAAAHgAKQABAEwAZQBnAGEAbABDAG8AcAB5AHIAaQBn
AGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFQAaABlACAAQgBvAG4AVABvAG4AIABTAHQA
bwByAGUAcwAsACAASQBuAGMALgAgADIAMAAxADgAAAAAAHgAKAABAE8AcgBpAGcAaQBuAGEAbABG
AGkAbABlAG4AYQBtAGUAAABTAFQAXwBiAGIAZQA2ADMAMwBmADIAMgBiADQAZgA0AGIAOABlADgA
ZAAwADUAOAA5ADEAYwAyADMAOAA5AGMAYgA2ADgALgBkAGwAbAAAAGgAJAABAFAAcgBvAGQAdQBj
AHQATgBhAG0AZQAAAAAAUwBUAF8AYgBiAGUANgAzADMAZgAyADIAYgA0AGYANABiADgAZQA4AGQA
MAA1ADgAOQAxAGMAMgAzADgAOQBjAGIANgA4AAAARAAPAAEAUAByAG8AZAB1AGMAdABWAGUAcgBz
AGkAbwBuAAAAMQAuADAALgA2ADYANQAwAC4AMwA2ADgANAA2AAAAAABIAA8AAQBBAHMAcwBlAG0A
YgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADYANQAwAC4AMwA2ADgANAA2AAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEAAAAwAAACgNwAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet"
          DTS:CreationName="Microsoft.Pipeline"
          DTS:DelayValidation="True"
          DTS:Description="Data Flow Task"
          DTS:DTSID="{22ECBED9-F349-4A67-8366-1BB9CC2FD485}"
          DTS:ExecutableType="Microsoft.Pipeline"
          DTS:LocaleID="-1"
          DTS:ObjectName="Read the report data, calculate the sum and write to the spreadsheet"
          DTS:TaskContact="Performs high-performance data extraction, transformation and loading;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved;http://www.microsoft.com/sql/support/default.asp;1">
          <DTS:Variables />
          <DTS:ObjectData>
            <pipeline
              version="1">
              <components>
                <component
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Add Report Date"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Inputs[Derived Column Input].Columns[TOTALSALES]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Inputs[Derived Column Input].Columns[TOTALSALES1]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES1]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Outputs[Derived Column Output].Columns[Date]"
                          dataType="date"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Outputs[Derived Column Output].Columns[Date]"
                          name="Date"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">@[User::ReservDate]</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">@[User::ReservDate]</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Outputs[Derived Column Output].Columns[TotalDiff]"
                          dataType="numeric"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Outputs[Derived Column Output].Columns[TotalDiff]"
                          name="TotalDiff"
                          precision="32"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES]} - #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES1]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TOTALSALES - TOTALSALES1</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Calculate change between this year and last year"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Inputs[Derived Column Input].Columns[TOTALSALES]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Inputs[Derived Column Input].Columns[STOCK]"
                          cachedDataType="numeric"
                          cachedName="STOCK"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Inputs[Derived Column Input].Columns[SO]"
                          cachedDataType="numeric"
                          cachedName="SO"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Inputs[Derived Column Input].Columns[STOCK1]"
                          cachedDataType="numeric"
                          cachedName="STOCK1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Inputs[Derived Column Input].Columns[SO1]"
                          cachedDataType="numeric"
                          cachedName="SO1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Inputs[Derived Column Input].Columns[TOTALSALES1]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Inputs[Derived Column Input].Columns[QT]"
                          cachedDataType="numeric"
                          cachedName="QT"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Inputs[Derived Column Input].Columns[QT1]"
                          cachedDataType="numeric"
                          cachedName="QT1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT1]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[QT_Change]"
                          dataType="numeric"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[QT_Change]"
                          name="QT_Change"
                          precision="38"
                          scale="6"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[ISNULL](#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT1]}) || #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT1]} &lt;= 0 ? #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT]} : ((#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT]} - #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT1]}) / #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT1]}) * 100</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(QT1) || QT1 &lt;= 0 ? QT : ((QT - QT1) / QT1) * 100</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[STOCK_Change]"
                          dataType="numeric"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[STOCK_Change]"
                          name="STOCK_Change"
                          precision="38"
                          scale="6"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[ISNULL](#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK1]}) || #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK1]} &lt;= 0 ? #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK]} : ((#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK]} - #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK1]}) / #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK1]} * 100)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(STOCK1) || STOCK1 &lt;= 0 ? STOCK : ((STOCK - STOCK1) / STOCK1 * 100)</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[SO_Change]"
                          dataType="numeric"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[SO_Change]"
                          name="SO_Change"
                          precision="38"
                          scale="6"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[ISNULL](#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO1]}) || #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO1]} &lt;= 0 ? #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO]} : ((#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO]} - #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO1]}) / #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO1]}) * 100</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(SO1) || SO1 &lt;= 0 ? SO : ((SO - SO1) / SO1) * 100</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[Tot_Change]"
                          dataType="numeric"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[Tot_Change]"
                          name="Tot_Change"
                          precision="38"
                          scale="6"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[ISNULL](#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES1]}) || #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES1]} &lt;= 0 ? #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES]} : ((#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES]} - #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES1]}) / #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES1]}) * 100</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(TOTALSALES1) || TOTALSALES1 &lt;= 0 ? TOTALSALES : ((TOTALSALES - TOTALSALES1) / TOTALSALES1) * 100</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns"
                  componentClassID="Microsoft.DerivedColumn"
                  contactInfo="Derived Column;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Creates new column values by applying expressions to transformation input columns. Create new columns or overwrite existing ones. For example, concatenate the values from the 'first name' and 'last name' column to make a 'full name' column."
                  name="Calculate change between this year and last year for change total columns"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input]"
                      description="Input to the Derived Column Transformation"
                      name="Derived Column Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input].Columns[QT_Change]"
                          cachedDataType="numeric"
                          cachedName="QT_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT_Change]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[ISNULL](#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT1]}) || #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT1]} &lt;= 0 ? #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT]} : ((#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT]} - #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT1]}) / #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT1]})</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(QT1) || QT1 &lt;= 0 ? QT : ((QT - QT1) / QT1)</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input].Columns[STOCK]"
                          cachedDataType="numeric"
                          cachedName="STOCK"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input].Columns[STOCK1]"
                          cachedDataType="numeric"
                          cachedName="STOCK1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input].Columns[STOCK_Change]"
                          cachedDataType="numeric"
                          cachedName="STOCK_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK_Change]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[ISNULL](#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK1]}) || #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK1]} &lt;= 0 ? #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK]} : ((#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK]} - #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK1]}) / #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK1]} * 100)</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(STOCK1) || STOCK1 &lt;= 0 ? STOCK : ((STOCK - STOCK1) / STOCK1 * 100)</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input].Columns[SO]"
                          cachedDataType="numeric"
                          cachedName="SO"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input].Columns[SO1]"
                          cachedDataType="numeric"
                          cachedName="SO1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input].Columns[SO_Change]"
                          cachedDataType="numeric"
                          cachedName="SO_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO_Change]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[ISNULL](#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO1]}) || #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO1]} &lt;= 0 ? #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO]} : ((#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO]} - #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO1]}) / #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO1]}) * 100</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(SO1) || SO1 &lt;= 0 ? SO : ((SO - SO1) / SO1) * 100</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input].Columns[TOTALSALES]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input].Columns[TOTALSALES1]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input].Columns[Tot_Change]"
                          cachedDataType="numeric"
                          cachedName="Tot_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[Tot_Change]"
                          truncationRowDisposition="FailComponent"
                          usageType="readWrite">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">[ISNULL](#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES1]}) || #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES1]} &lt;= 0 ? #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES]} : ((#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES]} - #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES1]}) / #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES1]}) * 100</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">ISNULL(TOTALSALES1) || TOTALSALES1 &lt;= 0 ? TOTALSALES : ((TOTALSALES - TOTALSALES1) / TOTALSALES1) * 100</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input].Columns[QT]"
                          cachedDataType="numeric"
                          cachedName="QT"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input].Columns[QT1]"
                          cachedDataType="numeric"
                          cachedName="QT1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT1]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Outputs[Derived Column Output]"
                      description="Default Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      name="Derived Column Output"
                      synchronousInputId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Outputs[Derived Column Output].Columns[TotalDiff]"
                          dataType="numeric"
                          errorOrTruncationOperation="Computation"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Outputs[Derived Column Output].Columns[TotalDiff]"
                          name="TotalDiff"
                          precision="32"
                          scale="4"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Expression"
                              name="Expression">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES]} - #{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES1]}</property>
                            <property
                              containsID="true"
                              dataType="System.String"
                              description="Derived Column Friendly Expression"
                              expressionType="Notify"
                              name="FriendlyExpression">TOTALSALES - TOTALSALES1</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Outputs[Derived Column Error Output]"
                      description="Error Output of the Derived Column Transformation"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Derived Column Error Output"
                      synchronousInputId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Outputs[Derived Column Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Outputs[Derived Column Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values"
                  componentClassID="Microsoft.Aggregate"
                  contactInfo="Aggregate;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;3"
                  description="Aggregates data with functions such as Average, Sum, Count, Max, and Min. For example, group data to compute the sum of sales per product or the average visits per day."
                  name="Calculate the sum of all values"
                  version="3">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                      name="KeyScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                      name="Keys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the approximate number of distinct values in a column that the aggregation counts distinctly. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no CountDistinctScale value is used."
                      name="CountDistinctScale"
                      typeConverter="KeyScaleType">0</property>
                    <property
                      dataType="System.Null"
                      description="Specifies the exact number of distinct values in a column that the aggregation counts distinctly. If a CountDistinctScale value is specified, the value in CountDistinctKeys takes precedence."
                      name="CountDistinctKeys" />
                    <property
                      dataType="System.Int32"
                      description="Specifies the percentage by which memory can be extended during the aggregation. Valid values are between 1 and 100."
                      name="AutoExtendFactor">25</property>
                  </properties>
                  <inputs>
                    <input
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1]"
                      name="Aggregate Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1].Columns[TOTALSALES]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1].Columns[QT]"
                          cachedDataType="numeric"
                          cachedName="QT"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1].Columns[STOCK]"
                          cachedDataType="numeric"
                          cachedName="STOCK"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1].Columns[SO]"
                          cachedDataType="numeric"
                          cachedName="SO"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1].Columns[QT1]"
                          cachedDataType="numeric"
                          cachedName="QT1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1].Columns[STOCK1]"
                          cachedDataType="numeric"
                          cachedName="STOCK1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1].Columns[SO1]"
                          cachedDataType="numeric"
                          cachedName="SO1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1].Columns[TOTALSALES1]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1].Columns[QT_Change]"
                          cachedDataType="numeric"
                          cachedName="QT_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[QT_Change]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1].Columns[STOCK_Change]"
                          cachedDataType="numeric"
                          cachedName="STOCK_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[STOCK_Change]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1].Columns[SO_Change]"
                          cachedDataType="numeric"
                          cachedName="SO_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[SO_Change]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1].Columns[Tot_Change]"
                          cachedDataType="numeric"
                          cachedName="Tot_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[Tot_Change]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1].Columns[NO_DEPT]"
                          cachedDataType="i2"
                          cachedName="NO_DEPT"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[NO_DEPT]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1]"
                      name="Aggregate Output 1">
                      <properties>
                        <property
                          dataType="System.Int32"
                          description="Specifies the approximate number of group by keys that the aggregation produces. Low indicates 500,000 key values, Medium indicates 5 million key values, and High indicates more than 25 million key values. Unspecified indicates no KeyScale value is used."
                          name="KeyScale"
                          typeConverter="KeyScaleType">0</property>
                        <property
                          dataType="System.Null"
                          description="Specifies the exact number of group by keys that the aggregation produces. If a KeyScale value is specified, the value in Keys takes precedence."
                          name="Keys" />
                      </properties>
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES]"
                          name="TOTALSALES"
                          precision="31"
                          scale="4">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">4</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT]"
                          name="QT"
                          precision="31"
                          scale="4">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">4</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK]"
                          name="STOCK"
                          precision="31"
                          scale="4">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">4</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO]"
                          name="SO"
                          precision="31"
                          scale="4">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">4</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT1]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT1]"
                          name="QT1"
                          precision="31"
                          scale="4">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT1]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">4</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK1]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK1]"
                          name="STOCK1"
                          precision="31"
                          scale="4">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK1]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">4</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO1]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO1]"
                          name="SO1"
                          precision="31"
                          scale="4">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO1]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">4</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES1]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES1]"
                          name="TOTALSALES1"
                          precision="31"
                          scale="4">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES1]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">4</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT_Change]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT_Change]"
                          name="QT_Change"
                          precision="38"
                          scale="6">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[QT_Change]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">4</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK_Change]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK_Change]"
                          name="STOCK_Change"
                          precision="38"
                          scale="6">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[STOCK_Change]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">4</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO_Change]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO_Change]"
                          name="SO_Change"
                          precision="38"
                          scale="6">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[SO_Change]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">4</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[Tot_Change]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[Tot_Change]"
                          name="Tot_Change"
                          precision="38"
                          scale="6">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[Tot_Change]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">4</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[NO_DEPT]"
                          dataType="ui8"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[NO_DEPT]"
                          name="NO_DEPT">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the ID of the input column used in the aggregation."
                              name="AggregationColumnId">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[NO_DEPT]}</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the type of aggregation."
                              name="AggregationType"
                              typeConverter="AggregationType">1</property>
                            <property
                              dataType="System.Int32"
                              description="Indicates whether the column requires special handling because it may contain oversized data or it requires precision beyond a float data type."
                              name="IsBig">1</property>
                            <property
                              dataType="System.Int32"
                              description="Specifies the string comparison options."
                              name="AggregationComparisonFlags">0</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point"
                  componentClassID="Microsoft.DataConvert"
                  contactInfo="Data Conversion;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Data Conversion"
                  name="Convert the data to a single decimal point"
                  usesDispositions="true">
                  <inputs>
                    <input
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input]"
                      name="Data Conversion Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input].Columns[TOTALSALES]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TOTALSALES]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input].Columns[Tot_Change]"
                          cachedDataType="numeric"
                          cachedName="Tot_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[Tot_Change]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input].Columns[QT]"
                          cachedDataType="numeric"
                          cachedName="QT"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input].Columns[STOCK]"
                          cachedDataType="numeric"
                          cachedName="STOCK"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input].Columns[SO]"
                          cachedDataType="numeric"
                          cachedName="SO"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input].Columns[QT1]"
                          cachedDataType="numeric"
                          cachedName="QT1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input].Columns[STOCK1]"
                          cachedDataType="numeric"
                          cachedName="STOCK1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input].Columns[SO1]"
                          cachedDataType="numeric"
                          cachedName="SO1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input].Columns[TOTALSALES1]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TOTALSALES1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input].Columns[QT_Change]"
                          cachedDataType="numeric"
                          cachedName="QT_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT_Change]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input].Columns[STOCK_Change]"
                          cachedDataType="numeric"
                          cachedName="STOCK_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK_Change]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input].Columns[SO_Change]"
                          cachedDataType="numeric"
                          cachedName="SO_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO_Change]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input].Columns[TotalDiff]"
                          cachedDataType="numeric"
                          cachedName="TotalDiff"
                          cachedPrecision="32"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TotalDiff]" />
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output]"
                      exclusionGroup="1"
                      name="Data Conversion Output"
                      synchronousInputId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[TOTALSALES]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[TOTALSALES]"
                          name="TOTALSALES"
                          precision="31"
                          scale="1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TOTALSALES]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[Tot_Change]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[Tot_Change]"
                          name="Tot_Change"
                          precision="38"
                          scale="1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[Tot_Change]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[QT]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[QT]"
                          name="QT"
                          precision="31"
                          scale="1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[STOCK]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[STOCK]"
                          name="STOCK"
                          precision="31"
                          scale="1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[SO]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[SO]"
                          name="SO"
                          precision="31"
                          scale="1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[QT1]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[QT1]"
                          name="QT1"
                          precision="31"
                          scale="1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[STOCK1]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[STOCK1]"
                          name="STOCK1"
                          precision="31"
                          scale="1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[SO1]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[SO1]"
                          name="SO1"
                          precision="31"
                          scale="1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[TOTALSALES1]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[TOTALSALES1]"
                          name="TOTALSALES1"
                          precision="31"
                          scale="1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TOTALSALES1]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[QT_Change]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[QT_Change]"
                          name="QT_Change"
                          precision="31"
                          scale="1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT_Change]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[STOCK_Change]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[STOCK_Change]"
                          name="STOCK_Change"
                          precision="31"
                          scale="1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK_Change]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[SO_Change]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[SO_Change]"
                          name="SO_Change"
                          precision="31"
                          scale="1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO_Change]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[TotalDiff]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[TotalDiff]"
                          name="TotalDiff"
                          precision="32"
                          scale="1"
                          truncationRowDisposition="FailComponent">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Specifies the input column used as the source of data for the conversion."
                              name="SourceInputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TotalDiff]}</property>
                            <property
                              dataType="System.Boolean"
                              description="Indicates whether the column uses the faster, locale-neutral parsing routines."
                              name="FastParse">false</property>
                          </properties>
                        </outputColumn>
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Data Conversion Error Output"
                      synchronousInputId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Multicast"
                  componentClassID="Microsoft.Multicast"
                  contactInfo="Multicast;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Distributes every input row to every row in one or more outputs. For example, branch your data flow to make a copy of data so that some values can be masked before sharing with external partners."
                  name="Multicast">
                  <inputs>
                    <input
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Multicast.Inputs[Multicast Input 1]"
                      name="Multicast Input 1">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Multicast.Outputs[Multicast Output 2]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 2"
                      synchronousInputId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Multicast.Outputs[Multicast Output 3]"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 3"
                      synchronousInputId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Multicast.Outputs[Multicast Output 1]"
                      dangling="true"
                      deleteOutputOnPathDetached="true"
                      name="Multicast Output 1"
                      synchronousInputId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Multicast.Inputs[Multicast Input 1]">
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database"
                  componentClassID="Microsoft.OLEDBSource"
                  contactInfo="OLE DB Source;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;7"
                  description="OLE DB Source"
                  name="Read data from the database"
                  usesDispositions="true"
                  version="7">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset"></property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor">---OUTSTANDING BUSINESS                                                        
WITH CTEOUTSALE_TY AS (SELECT DISTINCT A.NO_RESV, D.TY_STYLE, D.NO_DEPT,                              
B.DL_UNIT_NET,B.QT_RESV,B.QT_RESV *B.DL_UNIT_FINAL AS SALE                           
FROM MRSPC.VBTRESV A, MRSPC.TBTRVSK B, MRSPC.TBTSKUU C, MRSPC.TBTSTYL D        
WHERE (NOT (A.NO_LOCN = 591                                                    
     OR A.NO_LOCN = 579)                                                       
     AND (D.NO_DEPT &lt; 600)                                                     
AND (A.DT_RESV &gt;= ? AND A.DT_RESV &lt;= (?))                                                        
AND (D.TY_STYLE IN ('R', 'S', 'Q'))                                            
     AND (A.TY_RESV IN ('SO','MR', 'SP' ))                                     
     AND (A.ST_RESV = 'CF'))                                                   
     AND (B.NO_SKU = C.NO_SKU)                                                 
     AND (C.ID_STYLE = D.ID_STYLE)                                             
     AND (C.NO_VNDR_DUNS = D.NO_VNDR_DUNS)                                     
     AND (A.NO_RESV = B.NO_RESV)                                               
UNION                                                                          
SELECT DISTINCT A.NO_RESV, D.TY_STYLE, D.NO_DEPT,                              
B.DL_UNIT_NET,B.QT_RESV,B.QT_RESV *B.DL_UNIT_FINAL AS SALE                            
FROM MRSPB.VBTRESV A, MRSPB.TBTRVSK B, MRSPB.TBTSKUU C, MRSPB.TBTSTYL D        
WHERE (NOT (A.NO_LOCN = 057)                                                   
     AND (D.NO_DEPT &lt; 600)                                                     
AND (A.DT_RESV &gt;= ? AND A.DT_RESV &lt;= (?))                                                        
AND (D.TY_STYLE IN ('R', 'S', 'Q'))                                            
     AND (A.TY_RESV IN ('SO','MR', 'SP' ))                                     
     AND (A.ST_RESV = 'CF'))                                                   
     AND (B.NO_SKU = C.NO_SKU)                                                 
     AND (C.ID_STYLE = D.ID_STYLE)                                             
     AND (C.NO_VNDR_DUNS = D.NO_VNDR_DUNS)                                     
     AND (A.NO_RESV = B.NO_RESV)                                               
ORDER BY 3 ASC, 2 ASC),
CTEOUTSALE_LY AS (SELECT DISTINCT A.NO_RESV, D.TY_STYLE, D.NO_DEPT,                              
B.DL_UNIT_NET,B.QT_RESV,B.QT_RESV *B.DL_UNIT_FINAL AS SALE                           
FROM MRSPC.VBTRESV A, MRSPC.TBTRVSK B, MRSPC.TBTSKUU C, MRSPC.TBTSTYL D        
WHERE (NOT (A.NO_LOCN = 591                                                    
     OR A.NO_LOCN = 579)                                                       
     AND (D.NO_DEPT &lt; 600)                                                     
AND (A.DT_RESV &gt;= ? AND A.DT_RESV &lt;= (?))                                                        
AND (D.TY_STYLE IN ('R', 'S', 'Q'))                                            
     AND (A.TY_RESV IN ('SO','MR', 'SP' ))                                     
     AND (A.ST_RESV = 'CF'))                                                   
     AND (B.NO_SKU = C.NO_SKU)                                                 
     AND (C.ID_STYLE = D.ID_STYLE)                                             
     AND (C.NO_VNDR_DUNS = D.NO_VNDR_DUNS)                                     
     AND (A.NO_RESV = B.NO_RESV)                                               
UNION                                                                          
SELECT DISTINCT A.NO_RESV, D.TY_STYLE, D.NO_DEPT,                              
B.DL_UNIT_NET,B.QT_RESV,B.QT_RESV *B.DL_UNIT_FINAL AS SALE                            
FROM MRSPB.VBTRESV A, MRSPB.TBTRVSK B, MRSPB.TBTSKUU C, MRSPB.TBTSTYL D        
WHERE (NOT (A.NO_LOCN = 057)                                                   
     AND (D.NO_DEPT &lt; 600)                                                     
AND (A.DT_RESV &gt;= ? AND A.DT_RESV &lt;= (?))                                                        
AND (D.TY_STYLE IN ('R', 'S', 'Q'))                                            
     AND (A.TY_RESV IN ('SO','MR', 'SP' ))                                     
     AND (A.ST_RESV = 'CF'))                                                   
     AND (B.NO_SKU = C.NO_SKU)                                                 
     AND (C.ID_STYLE = D.ID_STYLE)                                             
     AND (C.NO_VNDR_DUNS = D.NO_VNDR_DUNS)                                     
     AND (A.NO_RESV = B.NO_RESV)                                               
ORDER BY 3 ASC, 2 ASC)
SELECT TY.NO_DEPT,
(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_TY WHERE NO_DEPT = TY.NO_DEPT AND TY_STYLE = 'Q' GROUP BY TY_STYLE) AS QT,  
(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_TY WHERE NO_DEPT = TY.NO_DEPT AND TY_STYLE = 'R' GROUP BY TY_STYLE) AS Stock,
(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_TY WHERE NO_DEPT = TY.NO_DEPT AND TY_STYLE = 'S' GROUP BY TY_STYLE) AS SO,
SUM(TY.SALE)/1000 AS TOTALSALES,
(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_LY WHERE NO_DEPT = LY.NO_DEPT AND TY_STYLE = 'Q' GROUP BY TY_STYLE) AS QT1,  
(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_LY WHERE NO_DEPT = LY.NO_DEPT AND TY_STYLE = 'R' GROUP BY TY_STYLE) AS Stock1,
(SELECT SUM(SALE)/1000 FROM CTEOUTSALE_LY WHERE NO_DEPT = LY.NO_DEPT AND TY_STYLE = 'S' GROUP BY TY_STYLE) AS SO1,
SUM(LY.SALE)/1000 AS TOTALSALES1 
FROM CTEOUTSALE_TY AS TY
LEFT OUTER JOIN CTEOUTSALE_LY AS LY
ON LY.NO_DEPT = TY.NO_DEPT
GROUP BY LY.NO_DEPT, TY.NO_DEPT       
WITH UR;</property>
                    <property
                      dataType="System.String"
                      description="The variable that contains the SQL command to be executed."
                      name="SqlCommandVariable">User::ReportQuery</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the column code page to use when code page information is unavailable from the data source."
                      name="DefaultCodePage">1252</property>
                    <property
                      dataType="System.Boolean"
                      description="Forces the use of the DefaultCodePage property value when describing character data."
                      name="AlwaysUseDefaultCodePage">false</property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">3</property>
                    <property
                      dataType="System.String"
                      description="The mappings between the parameters in the SQL command and variables."
                      name="ParameterMapping">"ReservDate:Input",{59DF505E-0D37-4733-A2FC-AE5BF013F9C1};"ReservDate:Input",{59DF505E-0D37-4733-A2FC-AE5BF013F9C1};"Parameter2:Input",{5379C723-EFD7-40A5-A7E2-FE1ABB5E5C46};"Parameter3:Input",{B7FBA240-4204-48B4-804F-59FD918A4A90};"Parameter4:Input",{5379C723-EFD7-40A5-A7E2-FE1ABB5E5C46};"Parameter5:Input",{B7FBA240-4204-48B4-804F-59FD918A4A90};"Parameter6:Input",{5379C723-EFD7-40A5-A7E2-FE1ABB5E5C46};"Parameter7:Input",{B7FBA240-4204-48B4-804F-59FD918A4A90};</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Connections[OleDbConnection]"
                      connectionManagerID="{4FFC8A2E-915F-4E1B-943F-D9761E66BBA0}:external"
                      connectionManagerRefId="Project.ConnectionManagers[BigTicket OLEDBConnectionManager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <outputs>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output]"
                      name="OLE DB Source Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[NO_DEPT]"
                          dataType="i2"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[NO_DEPT]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[NO_DEPT]"
                          name="NO_DEPT"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[TOTALSALES]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES]"
                          name="TOTALSALES"
                          precision="31"
                          scale="4"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[QT]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT]"
                          name="QT"
                          precision="31"
                          scale="4"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[STOCK]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK]"
                          name="STOCK"
                          precision="31"
                          scale="4"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[SO]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO]"
                          name="SO"
                          precision="31"
                          scale="4"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT1]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[QT1]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT1]"
                          name="QT1"
                          precision="31"
                          scale="4"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK1]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[STOCK1]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK1]"
                          name="STOCK1"
                          precision="31"
                          scale="4"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO1]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[SO1]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO1]"
                          name="SO1"
                          precision="31"
                          scale="4"
                          truncationRowDisposition="FailComponent" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES1]"
                          dataType="numeric"
                          errorOrTruncationOperation="Conversion"
                          errorRowDisposition="FailComponent"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[TOTALSALES1]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES1]"
                          name="TOTALSALES1"
                          precision="31"
                          scale="4"
                          truncationRowDisposition="FailComponent" />
                      </outputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[NO_DEPT]"
                          dataType="i2"
                          name="NO_DEPT" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[TOTALSALES]"
                          dataType="numeric"
                          name="TOTALSALES"
                          precision="31"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[QT]"
                          dataType="numeric"
                          name="QT"
                          precision="31"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[STOCK]"
                          dataType="numeric"
                          name="STOCK"
                          precision="31"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[SO]"
                          dataType="numeric"
                          name="SO"
                          precision="31"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[QT1]"
                          dataType="numeric"
                          name="QT1"
                          precision="31"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[STOCK1]"
                          dataType="numeric"
                          name="STOCK1"
                          precision="31"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[SO1]"
                          dataType="numeric"
                          name="SO1"
                          precision="31"
                          scale="4" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].ExternalColumns[TOTALSALES1]"
                          dataType="numeric"
                          name="TOTALSALES1"
                          precision="31"
                          scale="4" />
                      </externalMetadataColumns>
                    </output>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output]"
                      isErrorOut="true"
                      name="OLE DB Source Error Output">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[NO_DEPT]"
                          dataType="i2"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[NO_DEPT]"
                          name="NO_DEPT" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[QT]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[QT]"
                          name="QT"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[STOCK]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[STOCK]"
                          name="STOCK"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[SO]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[SO]"
                          name="SO"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[TOTALSALES]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[TOTALSALES]"
                          name="TOTALSALES"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[QT1]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[QT1]"
                          name="QT1"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[STOCK1]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[STOCK1]"
                          name="STOCK1"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[SO1]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[SO1]"
                          name="SO1"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[TOTALSALES1]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[TOTALSALES1]"
                          name="TOTALSALES1"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All"
                  componentClassID="Microsoft.UnionAll"
                  contactInfo="Union All;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;1"
                  description="Combines rows from multiple data flows without sorting. For example, add rows back to a data flow after correction of errors. If sorting is important, we recommend using the Merge transformation."
                  name="Union All"
                  version="1">
                  <inputs>
                    <input
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2]"
                      hasSideEffects="true"
                      name="Union All Input 2">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[NO_DEPT]"
                          cachedDataType="i2"
                          cachedName="NO_DEPT"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[NO_DEPT]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[NO_DEPT]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[TOTALSALES]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TOTALSALES]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[QT]"
                          cachedDataType="numeric"
                          cachedName="QT"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[STOCK]"
                          cachedDataType="numeric"
                          cachedName="STOCK"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[SO]"
                          cachedDataType="numeric"
                          cachedName="SO"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[QT1]"
                          cachedDataType="numeric"
                          cachedName="QT1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[QT1]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT1]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[STOCK1]"
                          cachedDataType="numeric"
                          cachedName="STOCK1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[STOCK1]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK1]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[SO1]"
                          cachedDataType="numeric"
                          cachedName="SO1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[SO1]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO1]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[TOTALSALES1]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output].Columns[TOTALSALES1]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TOTALSALES1]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[QT_Change]"
                          cachedDataType="numeric"
                          cachedName="QT_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[QT_Change]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT_Change]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[STOCK_Change]"
                          cachedDataType="numeric"
                          cachedName="STOCK_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[STOCK_Change]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK_Change]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[SO_Change]"
                          cachedDataType="numeric"
                          cachedName="SO_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[SO_Change]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO_Change]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[Tot_Change]"
                          cachedDataType="numeric"
                          cachedName="Tot_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output].Columns[Tot_Change]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[Tot_Change]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Outputs[Derived Column Output].Columns[Date]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[Date]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2].Columns[TotalDiff]"
                          cachedDataType="numeric"
                          cachedName="TotalDiff"
                          cachedPrecision="32"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Outputs[Derived Column Output].Columns[TotalDiff]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TotalDiff]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 1]"
                      hasSideEffects="true"
                      name="Union All Input 1">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 1].Columns[TOTALSALES]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TOTALSALES]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 1].Columns[QT]"
                          cachedDataType="numeric"
                          cachedName="QT"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 1].Columns[STOCK]"
                          cachedDataType="numeric"
                          cachedName="STOCK"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 1].Columns[SO]"
                          cachedDataType="numeric"
                          cachedName="SO"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 1].Columns[QT1]"
                          cachedDataType="numeric"
                          cachedName="QT1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT1]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT1]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 1].Columns[STOCK1]"
                          cachedDataType="numeric"
                          cachedName="STOCK1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK1]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK1]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 1].Columns[SO1]"
                          cachedDataType="numeric"
                          cachedName="SO1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO1]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO1]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 1].Columns[TOTALSALES1]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES1"
                          cachedPrecision="31"
                          cachedScale="4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[TOTALSALES1]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TOTALSALES1]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 1].Columns[QT_Change]"
                          cachedDataType="numeric"
                          cachedName="QT_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[QT_Change]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT_Change]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 1].Columns[STOCK_Change]"
                          cachedDataType="numeric"
                          cachedName="STOCK_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[STOCK_Change]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK_Change]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 1].Columns[SO_Change]"
                          cachedDataType="numeric"
                          cachedName="SO_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[SO_Change]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO_Change]}</property>
                          </properties>
                        </inputColumn>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 1].Columns[Tot_Change]"
                          cachedDataType="numeric"
                          cachedName="Tot_Change"
                          cachedPrecision="38"
                          cachedScale="6"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1].Columns[Tot_Change]">
                          <properties>
                            <property
                              containsID="true"
                              dataType="System.Int32"
                              description="Output column lineage ID"
                              name="OutputColumnLineageID">#{Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[Tot_Change]}</property>
                          </properties>
                        </inputColumn>
                      </inputColumns>
                      <externalMetadataColumns />
                    </input>
                    <input
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 3]"
                      dangling="true"
                      hasSideEffects="true"
                      name="Union All Input 3">
                      <externalMetadataColumns />
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1]"
                      name="Union All Output 1">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[NO_DEPT]"
                          dataType="i2"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[NO_DEPT]"
                          name="NO_DEPT" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TOTALSALES]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TOTALSALES]"
                          name="TOTALSALES"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT]"
                          name="QT"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK]"
                          name="STOCK"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO]"
                          name="SO"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT1]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT1]"
                          name="QT1"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK1]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK1]"
                          name="STOCK1"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO1]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO1]"
                          name="SO1"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TOTALSALES1]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TOTALSALES1]"
                          name="TOTALSALES1"
                          precision="31"
                          scale="4" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT_Change]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[QT_Change]"
                          name="QT_Change"
                          precision="38"
                          scale="6" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK_Change]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[STOCK_Change]"
                          name="STOCK_Change"
                          precision="38"
                          scale="6" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO_Change]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[SO_Change]"
                          name="SO_Change"
                          precision="38"
                          scale="6" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[Tot_Change]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[Tot_Change]"
                          name="Tot_Change"
                          precision="38"
                          scale="6" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[Date]"
                          dataType="date"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[Date]"
                          name="Date" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TotalDiff]"
                          dataType="numeric"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[TotalDiff]"
                          name="TotalDiff"
                          precision="32"
                          scale="4" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
                <component
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet"
                  componentClassID="Microsoft.ExcelDestination"
                  contactInfo="Excel Destination;Microsoft Corporation; Microsoft SQL Server; (C) Microsoft Corporation; All Rights Reserved; http://www.microsoft.com/sql/support;0"
                  description="Excel Destination"
                  name="Write the results to the spreadsheet"
                  usesDispositions="true">
                  <properties>
                    <property
                      dataType="System.Int32"
                      description="The number of seconds before a command times out.  A value of 0 indicates an infinite time-out."
                      name="CommandTimeout">0</property>
                    <property
                      dataType="System.String"
                      description="Specifies the name of the database object used to open a rowset."
                      name="OpenRowset">Sheet1$</property>
                    <property
                      dataType="System.String"
                      description="Specifies the variable that contains the name of the database object used to open a rowset."
                      name="OpenRowsetVariable"></property>
                    <property
                      dataType="System.String"
                      description="The SQL command to be executed."
                      name="SqlCommand"
                      UITypeEditor="Microsoft.DataTransformationServices.Controls.ModalMultilineStringEditor"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies the mode used to access the database."
                      name="AccessMode"
                      typeConverter="AccessMode">0</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the values supplied for identity columns will be copied to the destination. If false, values for identity columns will be auto-generated at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepIdentity">false</property>
                    <property
                      dataType="System.Boolean"
                      description="Indicates whether the columns containing null will have null inserted in the destination. If false, columns containing null will have their default values inserted at the destination. Applies only if fast load is turned on."
                      name="FastLoadKeepNulls">false</property>
                    <property
                      dataType="System.String"
                      description="Specifies options to be used with fast load.  Applies only if fast load is turned on."
                      name="FastLoadOptions"></property>
                    <property
                      dataType="System.Int32"
                      description="Specifies when commits are issued during data insertion.  A value of 0 specifies that one commit will be issued at the end of data insertion.  Applies only if fast load is turned on."
                      name="FastLoadMaxInsertCommitSize">2147483647</property>
                  </properties>
                  <connections>
                    <connection
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Connections[OleDbConnection]"
                      connectionManagerID="Package.ConnectionManagers[Excel Connection Manager]"
                      connectionManagerRefId="Package.ConnectionManagers[Excel Connection Manager]"
                      description="The OLE DB runtime connection used to access the database."
                      name="OleDbConnection" />
                  </connections>
                  <inputs>
                    <input
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input]"
                      errorOrTruncationOperation="Insert"
                      errorRowDisposition="FailComponent"
                      hasSideEffects="true"
                      name="Excel Destination Input">
                      <inputColumns>
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[Date]"
                          cachedDataType="date"
                          cachedName="Date"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F2]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[Date]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[NO_DEPT]"
                          cachedDataType="i2"
                          cachedName="NO_DEPT"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F4]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1].Columns[NO_DEPT]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[TOTALSALES]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES"
                          cachedPrecision="31"
                          cachedScale="1"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F9]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[TOTALSALES]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[QT]"
                          cachedDataType="numeric"
                          cachedName="QT"
                          cachedPrecision="31"
                          cachedScale="1"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F6]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[QT]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[QT1]"
                          cachedDataType="numeric"
                          cachedName="QT1"
                          cachedPrecision="31"
                          cachedScale="1"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F11]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[QT1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[STOCK]"
                          cachedDataType="numeric"
                          cachedName="STOCK"
                          cachedPrecision="31"
                          cachedScale="1"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F7]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[STOCK]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[SO]"
                          cachedDataType="numeric"
                          cachedName="SO"
                          cachedPrecision="31"
                          cachedScale="1"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F8]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[SO]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[STOCK1]"
                          cachedDataType="numeric"
                          cachedName="STOCK1"
                          cachedPrecision="31"
                          cachedScale="1"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F12]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[STOCK1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[SO1]"
                          cachedDataType="numeric"
                          cachedName="SO1"
                          cachedPrecision="31"
                          cachedScale="1"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F13]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[SO1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[TOTALSALES1]"
                          cachedDataType="numeric"
                          cachedName="TOTALSALES1"
                          cachedPrecision="31"
                          cachedScale="1"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F14]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[TOTALSALES1]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[TotalDiff]"
                          cachedDataType="numeric"
                          cachedName="TotalDiff"
                          cachedPrecision="32"
                          cachedScale="1"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F16]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[TotalDiff]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[QT_Change]"
                          cachedDataType="numeric"
                          cachedName="QT_Change"
                          cachedPrecision="31"
                          cachedScale="1"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F18]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[QT_Change]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[STOCK_Change]"
                          cachedDataType="numeric"
                          cachedName="STOCK_Change"
                          cachedPrecision="31"
                          cachedScale="1"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F19]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[STOCK_Change]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[SO_Change]"
                          cachedDataType="numeric"
                          cachedName="SO_Change"
                          cachedPrecision="31"
                          cachedScale="1"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F20]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[SO_Change]" />
                        <inputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].Columns[Tot_Change]"
                          cachedDataType="numeric"
                          cachedName="Tot_Change"
                          cachedPrecision="38"
                          cachedScale="1"
                          externalMetadataColumnId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F21]"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output].Columns[Tot_Change]" />
                      </inputColumns>
                      <externalMetadataColumns
                        isUsed="True">
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F1]"
                          dataType="wstr"
                          length="255"
                          name="F1" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F3]"
                          dataType="wstr"
                          length="255"
                          name="F3" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F5]"
                          dataType="wstr"
                          length="255"
                          name="F5" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F6]"
                          dataType="r8"
                          name="F6" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F10]"
                          dataType="r8"
                          name="F10" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F11]"
                          dataType="r8"
                          name="F11" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F15]"
                          dataType="r8"
                          name="F15" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F16]"
                          dataType="r8"
                          name="F16" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F20]"
                          dataType="r8"
                          name="F20" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F21]"
                          dataType="wstr"
                          length="255"
                          name="F21" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F22]"
                          dataType="wstr"
                          length="255"
                          name="F22" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F23]"
                          dataType="r8"
                          name="F23" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F24]"
                          dataType="wstr"
                          length="255"
                          name="F24" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F25]"
                          dataType="wstr"
                          length="255"
                          name="F25" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F26]"
                          dataType="wstr"
                          length="255"
                          name="F26" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F27]"
                          dataType="wstr"
                          length="255"
                          name="F27" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F28]"
                          dataType="wstr"
                          length="255"
                          name="F28" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F2]"
                          dataType="date"
                          name="F2" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F4]"
                          dataType="r8"
                          name="F4" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F7]"
                          dataType="r8"
                          name="F7" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F8]"
                          dataType="r8"
                          name="F8" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F9]"
                          dataType="r8"
                          name="F9" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F12]"
                          dataType="r8"
                          name="F12" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F13]"
                          dataType="r8"
                          name="F13" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F14]"
                          dataType="r8"
                          name="F14" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F17]"
                          dataType="r8"
                          name="F17" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F18]"
                          dataType="wstr"
                          length="255"
                          name="F18" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F19]"
                          dataType="r8"
                          name="F19" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F29]"
                          dataType="wstr"
                          length="255"
                          name="F29" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F30]"
                          dataType="wstr"
                          length="255"
                          name="F30" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F31]"
                          dataType="wstr"
                          length="255"
                          name="F31" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F32]"
                          dataType="wstr"
                          length="255"
                          name="F32" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F33]"
                          dataType="wstr"
                          length="255"
                          name="F33" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F34]"
                          dataType="wstr"
                          length="255"
                          name="F34" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F35]"
                          dataType="wstr"
                          length="255"
                          name="F35" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F36]"
                          dataType="wstr"
                          length="255"
                          name="F36" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F37]"
                          dataType="wstr"
                          length="255"
                          name="F37" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F38]"
                          dataType="wstr"
                          length="255"
                          name="F38" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F39]"
                          dataType="wstr"
                          length="255"
                          name="F39" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F40]"
                          dataType="wstr"
                          length="255"
                          name="F40" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F41]"
                          dataType="wstr"
                          length="255"
                          name="F41" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F42]"
                          dataType="wstr"
                          length="255"
                          name="F42" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F43]"
                          dataType="wstr"
                          length="255"
                          name="F43" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F44]"
                          dataType="wstr"
                          length="255"
                          name="F44" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F45]"
                          dataType="wstr"
                          length="255"
                          name="F45" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F46]"
                          dataType="wstr"
                          length="255"
                          name="F46" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F47]"
                          dataType="wstr"
                          length="255"
                          name="F47" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F48]"
                          dataType="wstr"
                          length="255"
                          name="F48" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F49]"
                          dataType="wstr"
                          length="255"
                          name="F49" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F50]"
                          dataType="wstr"
                          length="255"
                          name="F50" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F51]"
                          dataType="wstr"
                          length="255"
                          name="F51" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F52]"
                          dataType="wstr"
                          length="255"
                          name="F52" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F53]"
                          dataType="wstr"
                          length="255"
                          name="F53" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F54]"
                          dataType="wstr"
                          length="255"
                          name="F54" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F55]"
                          dataType="wstr"
                          length="255"
                          name="F55" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F56]"
                          dataType="wstr"
                          length="255"
                          name="F56" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F57]"
                          dataType="wstr"
                          length="255"
                          name="F57" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F58]"
                          dataType="wstr"
                          length="255"
                          name="F58" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F59]"
                          dataType="wstr"
                          length="255"
                          name="F59" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F60]"
                          dataType="wstr"
                          length="255"
                          name="F60" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F61]"
                          dataType="wstr"
                          length="255"
                          name="F61" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F62]"
                          dataType="wstr"
                          length="255"
                          name="F62" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F63]"
                          dataType="wstr"
                          length="255"
                          name="F63" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F64]"
                          dataType="wstr"
                          length="255"
                          name="F64" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F65]"
                          dataType="wstr"
                          length="255"
                          name="F65" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F66]"
                          dataType="wstr"
                          length="255"
                          name="F66" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F67]"
                          dataType="wstr"
                          length="255"
                          name="F67" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F68]"
                          dataType="wstr"
                          length="255"
                          name="F68" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F69]"
                          dataType="wstr"
                          length="255"
                          name="F69" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F70]"
                          dataType="wstr"
                          length="255"
                          name="F70" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F71]"
                          dataType="wstr"
                          length="255"
                          name="F71" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F72]"
                          dataType="wstr"
                          length="255"
                          name="F72" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F73]"
                          dataType="wstr"
                          length="255"
                          name="F73" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F74]"
                          dataType="wstr"
                          length="255"
                          name="F74" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F75]"
                          dataType="wstr"
                          length="255"
                          name="F75" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F76]"
                          dataType="wstr"
                          length="255"
                          name="F76" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F77]"
                          dataType="wstr"
                          length="255"
                          name="F77" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F78]"
                          dataType="wstr"
                          length="255"
                          name="F78" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F79]"
                          dataType="wstr"
                          length="255"
                          name="F79" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F80]"
                          dataType="wstr"
                          length="255"
                          name="F80" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F81]"
                          dataType="wstr"
                          length="255"
                          name="F81" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F82]"
                          dataType="wstr"
                          length="255"
                          name="F82" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F83]"
                          dataType="wstr"
                          length="255"
                          name="F83" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F84]"
                          dataType="wstr"
                          length="255"
                          name="F84" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F85]"
                          dataType="wstr"
                          length="255"
                          name="F85" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F86]"
                          dataType="wstr"
                          length="255"
                          name="F86" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F87]"
                          dataType="wstr"
                          length="255"
                          name="F87" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F88]"
                          dataType="wstr"
                          length="255"
                          name="F88" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F89]"
                          dataType="wstr"
                          length="255"
                          name="F89" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F90]"
                          dataType="wstr"
                          length="255"
                          name="F90" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F91]"
                          dataType="wstr"
                          length="255"
                          name="F91" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F92]"
                          dataType="wstr"
                          length="255"
                          name="F92" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F93]"
                          dataType="wstr"
                          length="255"
                          name="F93" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F94]"
                          dataType="wstr"
                          length="255"
                          name="F94" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F95]"
                          dataType="wstr"
                          length="255"
                          name="F95" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F96]"
                          dataType="wstr"
                          length="255"
                          name="F96" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F97]"
                          dataType="wstr"
                          length="255"
                          name="F97" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F98]"
                          dataType="wstr"
                          length="255"
                          name="F98" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F99]"
                          dataType="wstr"
                          length="255"
                          name="F99" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F100]"
                          dataType="wstr"
                          length="255"
                          name="F100" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F101]"
                          dataType="wstr"
                          length="255"
                          name="F101" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F102]"
                          dataType="wstr"
                          length="255"
                          name="F102" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F103]"
                          dataType="wstr"
                          length="255"
                          name="F103" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F104]"
                          dataType="wstr"
                          length="255"
                          name="F104" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F105]"
                          dataType="wstr"
                          length="255"
                          name="F105" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F106]"
                          dataType="wstr"
                          length="255"
                          name="F106" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F107]"
                          dataType="wstr"
                          length="255"
                          name="F107" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F108]"
                          dataType="wstr"
                          length="255"
                          name="F108" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F109]"
                          dataType="wstr"
                          length="255"
                          name="F109" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F110]"
                          dataType="wstr"
                          length="255"
                          name="F110" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F111]"
                          dataType="wstr"
                          length="255"
                          name="F111" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F112]"
                          dataType="wstr"
                          length="255"
                          name="F112" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F113]"
                          dataType="wstr"
                          length="255"
                          name="F113" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F114]"
                          dataType="wstr"
                          length="255"
                          name="F114" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F115]"
                          dataType="wstr"
                          length="255"
                          name="F115" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F116]"
                          dataType="wstr"
                          length="255"
                          name="F116" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F117]"
                          dataType="wstr"
                          length="255"
                          name="F117" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F118]"
                          dataType="wstr"
                          length="255"
                          name="F118" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F119]"
                          dataType="wstr"
                          length="255"
                          name="F119" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F120]"
                          dataType="wstr"
                          length="255"
                          name="F120" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F121]"
                          dataType="wstr"
                          length="255"
                          name="F121" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F122]"
                          dataType="wstr"
                          length="255"
                          name="F122" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F123]"
                          dataType="wstr"
                          length="255"
                          name="F123" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F124]"
                          dataType="wstr"
                          length="255"
                          name="F124" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F125]"
                          dataType="wstr"
                          length="255"
                          name="F125" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F126]"
                          dataType="wstr"
                          length="255"
                          name="F126" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F127]"
                          dataType="wstr"
                          length="255"
                          name="F127" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F128]"
                          dataType="wstr"
                          length="255"
                          name="F128" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F129]"
                          dataType="wstr"
                          length="255"
                          name="F129" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F130]"
                          dataType="wstr"
                          length="255"
                          name="F130" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F131]"
                          dataType="wstr"
                          length="255"
                          name="F131" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F132]"
                          dataType="wstr"
                          length="255"
                          name="F132" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F133]"
                          dataType="wstr"
                          length="255"
                          name="F133" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F134]"
                          dataType="wstr"
                          length="255"
                          name="F134" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F135]"
                          dataType="wstr"
                          length="255"
                          name="F135" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F136]"
                          dataType="wstr"
                          length="255"
                          name="F136" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F137]"
                          dataType="wstr"
                          length="255"
                          name="F137" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F138]"
                          dataType="wstr"
                          length="255"
                          name="F138" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F139]"
                          dataType="wstr"
                          length="255"
                          name="F139" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F140]"
                          dataType="wstr"
                          length="255"
                          name="F140" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F141]"
                          dataType="wstr"
                          length="255"
                          name="F141" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F142]"
                          dataType="wstr"
                          length="255"
                          name="F142" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F143]"
                          dataType="wstr"
                          length="255"
                          name="F143" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F144]"
                          dataType="wstr"
                          length="255"
                          name="F144" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F145]"
                          dataType="wstr"
                          length="255"
                          name="F145" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F146]"
                          dataType="wstr"
                          length="255"
                          name="F146" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F147]"
                          dataType="wstr"
                          length="255"
                          name="F147" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F148]"
                          dataType="wstr"
                          length="255"
                          name="F148" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F149]"
                          dataType="wstr"
                          length="255"
                          name="F149" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F150]"
                          dataType="wstr"
                          length="255"
                          name="F150" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F151]"
                          dataType="wstr"
                          length="255"
                          name="F151" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F152]"
                          dataType="wstr"
                          length="255"
                          name="F152" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F153]"
                          dataType="wstr"
                          length="255"
                          name="F153" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F154]"
                          dataType="wstr"
                          length="255"
                          name="F154" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F155]"
                          dataType="wstr"
                          length="255"
                          name="F155" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F156]"
                          dataType="wstr"
                          length="255"
                          name="F156" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F157]"
                          dataType="wstr"
                          length="255"
                          name="F157" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F158]"
                          dataType="wstr"
                          length="255"
                          name="F158" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F159]"
                          dataType="wstr"
                          length="255"
                          name="F159" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F160]"
                          dataType="wstr"
                          length="255"
                          name="F160" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F161]"
                          dataType="wstr"
                          length="255"
                          name="F161" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F162]"
                          dataType="wstr"
                          length="255"
                          name="F162" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F163]"
                          dataType="wstr"
                          length="255"
                          name="F163" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F164]"
                          dataType="wstr"
                          length="255"
                          name="F164" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F165]"
                          dataType="wstr"
                          length="255"
                          name="F165" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F166]"
                          dataType="wstr"
                          length="255"
                          name="F166" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F167]"
                          dataType="wstr"
                          length="255"
                          name="F167" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F168]"
                          dataType="wstr"
                          length="255"
                          name="F168" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F169]"
                          dataType="wstr"
                          length="255"
                          name="F169" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F170]"
                          dataType="wstr"
                          length="255"
                          name="F170" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F171]"
                          dataType="wstr"
                          length="255"
                          name="F171" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F172]"
                          dataType="wstr"
                          length="255"
                          name="F172" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F173]"
                          dataType="wstr"
                          length="255"
                          name="F173" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F174]"
                          dataType="wstr"
                          length="255"
                          name="F174" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F175]"
                          dataType="wstr"
                          length="255"
                          name="F175" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F176]"
                          dataType="wstr"
                          length="255"
                          name="F176" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F177]"
                          dataType="wstr"
                          length="255"
                          name="F177" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F178]"
                          dataType="wstr"
                          length="255"
                          name="F178" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F179]"
                          dataType="wstr"
                          length="255"
                          name="F179" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F180]"
                          dataType="wstr"
                          length="255"
                          name="F180" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F181]"
                          dataType="wstr"
                          length="255"
                          name="F181" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F182]"
                          dataType="wstr"
                          length="255"
                          name="F182" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F183]"
                          dataType="wstr"
                          length="255"
                          name="F183" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F184]"
                          dataType="wstr"
                          length="255"
                          name="F184" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F185]"
                          dataType="wstr"
                          length="255"
                          name="F185" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F186]"
                          dataType="wstr"
                          length="255"
                          name="F186" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F187]"
                          dataType="wstr"
                          length="255"
                          name="F187" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F188]"
                          dataType="wstr"
                          length="255"
                          name="F188" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F189]"
                          dataType="wstr"
                          length="255"
                          name="F189" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F190]"
                          dataType="wstr"
                          length="255"
                          name="F190" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F191]"
                          dataType="wstr"
                          length="255"
                          name="F191" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F192]"
                          dataType="wstr"
                          length="255"
                          name="F192" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F193]"
                          dataType="wstr"
                          length="255"
                          name="F193" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F194]"
                          dataType="wstr"
                          length="255"
                          name="F194" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F195]"
                          dataType="wstr"
                          length="255"
                          name="F195" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F196]"
                          dataType="wstr"
                          length="255"
                          name="F196" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F197]"
                          dataType="wstr"
                          length="255"
                          name="F197" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F198]"
                          dataType="wstr"
                          length="255"
                          name="F198" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F199]"
                          dataType="wstr"
                          length="255"
                          name="F199" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F200]"
                          dataType="wstr"
                          length="255"
                          name="F200" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F201]"
                          dataType="wstr"
                          length="255"
                          name="F201" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F202]"
                          dataType="wstr"
                          length="255"
                          name="F202" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F203]"
                          dataType="wstr"
                          length="255"
                          name="F203" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F204]"
                          dataType="wstr"
                          length="255"
                          name="F204" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F205]"
                          dataType="wstr"
                          length="255"
                          name="F205" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F206]"
                          dataType="wstr"
                          length="255"
                          name="F206" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F207]"
                          dataType="wstr"
                          length="255"
                          name="F207" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F208]"
                          dataType="wstr"
                          length="255"
                          name="F208" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F209]"
                          dataType="wstr"
                          length="255"
                          name="F209" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F210]"
                          dataType="wstr"
                          length="255"
                          name="F210" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F211]"
                          dataType="wstr"
                          length="255"
                          name="F211" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F212]"
                          dataType="wstr"
                          length="255"
                          name="F212" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F213]"
                          dataType="wstr"
                          length="255"
                          name="F213" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F214]"
                          dataType="wstr"
                          length="255"
                          name="F214" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F215]"
                          dataType="wstr"
                          length="255"
                          name="F215" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F216]"
                          dataType="wstr"
                          length="255"
                          name="F216" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F217]"
                          dataType="wstr"
                          length="255"
                          name="F217" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F218]"
                          dataType="wstr"
                          length="255"
                          name="F218" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F219]"
                          dataType="wstr"
                          length="255"
                          name="F219" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F220]"
                          dataType="wstr"
                          length="255"
                          name="F220" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F221]"
                          dataType="wstr"
                          length="255"
                          name="F221" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F222]"
                          dataType="wstr"
                          length="255"
                          name="F222" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F223]"
                          dataType="wstr"
                          length="255"
                          name="F223" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F224]"
                          dataType="wstr"
                          length="255"
                          name="F224" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F225]"
                          dataType="wstr"
                          length="255"
                          name="F225" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F226]"
                          dataType="wstr"
                          length="255"
                          name="F226" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F227]"
                          dataType="wstr"
                          length="255"
                          name="F227" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F228]"
                          dataType="wstr"
                          length="255"
                          name="F228" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F229]"
                          dataType="wstr"
                          length="255"
                          name="F229" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F230]"
                          dataType="wstr"
                          length="255"
                          name="F230" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F231]"
                          dataType="wstr"
                          length="255"
                          name="F231" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F232]"
                          dataType="wstr"
                          length="255"
                          name="F232" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F233]"
                          dataType="wstr"
                          length="255"
                          name="F233" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F234]"
                          dataType="wstr"
                          length="255"
                          name="F234" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F235]"
                          dataType="wstr"
                          length="255"
                          name="F235" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F236]"
                          dataType="wstr"
                          length="255"
                          name="F236" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F237]"
                          dataType="wstr"
                          length="255"
                          name="F237" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F238]"
                          dataType="wstr"
                          length="255"
                          name="F238" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F239]"
                          dataType="wstr"
                          length="255"
                          name="F239" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F240]"
                          dataType="wstr"
                          length="255"
                          name="F240" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F241]"
                          dataType="wstr"
                          length="255"
                          name="F241" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F242]"
                          dataType="wstr"
                          length="255"
                          name="F242" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F243]"
                          dataType="wstr"
                          length="255"
                          name="F243" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F244]"
                          dataType="wstr"
                          length="255"
                          name="F244" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F245]"
                          dataType="wstr"
                          length="255"
                          name="F245" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F246]"
                          dataType="wstr"
                          length="255"
                          name="F246" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F247]"
                          dataType="wstr"
                          length="255"
                          name="F247" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F248]"
                          dataType="wstr"
                          length="255"
                          name="F248" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F249]"
                          dataType="wstr"
                          length="255"
                          name="F249" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F250]"
                          dataType="wstr"
                          length="255"
                          name="F250" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F251]"
                          dataType="wstr"
                          length="255"
                          name="F251" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F252]"
                          dataType="wstr"
                          length="255"
                          name="F252" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F253]"
                          dataType="wstr"
                          length="255"
                          name="F253" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F254]"
                          dataType="wstr"
                          length="255"
                          name="F254" />
                        <externalMetadataColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input].ExternalColumns[F255]"
                          dataType="wstr"
                          length="255"
                          name="F255" />
                      </externalMetadataColumns>
                    </input>
                  </inputs>
                  <outputs>
                    <output
                      refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Outputs[Excel Destination Error Output]"
                      exclusionGroup="1"
                      isErrorOut="true"
                      name="Excel Destination Error Output"
                      synchronousInputId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input]">
                      <outputColumns>
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          dataType="i4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Outputs[Excel Destination Error Output].Columns[ErrorCode]"
                          name="ErrorCode"
                          specialFlags="1" />
                        <outputColumn
                          refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          dataType="i4"
                          lineageId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Outputs[Excel Destination Error Output].Columns[ErrorColumn]"
                          name="ErrorColumn"
                          specialFlags="2" />
                      </outputColumns>
                      <externalMetadataColumns />
                    </output>
                  </outputs>
                </component>
              </components>
              <paths>
                <path
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Aggregate Output 1]"
                  endId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Inputs[Derived Column Input]"
                  name="Aggregate Output 1"
                  startId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Outputs[Aggregate Output 1]" />
                <path
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Data Conversion Output]"
                  endId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet.Inputs[Excel Destination Input]"
                  name="Data Conversion Output"
                  startId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Outputs[Data Conversion Output]" />
                <path
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Derived Column Output]"
                  endId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Multicast.Inputs[Multicast Input 1]"
                  name="Derived Column Output"
                  startId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Derived Column Output1]"
                  endId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 2]"
                  name="Derived Column Output"
                  startId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Derived Column Output2]"
                  endId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Inputs[Union All Input 1]"
                  name="Derived Column Output"
                  startId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns.Outputs[Derived Column Output]" />
                <path
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Multicast Output 2]"
                  endId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values.Inputs[Aggregate Input 1]"
                  name="Multicast Output 2"
                  startId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Multicast.Outputs[Multicast Output 2]" />
                <path
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Multicast Output 3]"
                  endId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date.Inputs[Derived Column Input]"
                  name="Multicast Output 3"
                  startId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Multicast.Outputs[Multicast Output 3]" />
                <path
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[OLE DB Source Output]"
                  endId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year.Inputs[Derived Column Input]"
                  name="OLE DB Source Output"
                  startId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database.Outputs[OLE DB Source Output]" />
                <path
                  refId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Union All Output 1]"
                  endId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point.Inputs[Data Conversion Input]"
                  name="Union All Output 1"
                  startId="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All.Outputs[Union All Output 1]" />
              </paths>
            </pipeline>
          </DTS:ObjectData>
        </DTS:Executable>
        <DTS:Executable
          DTS:refId="Package\Generate the weekly report\Set week start date and end date for the report query"
          DTS:CreationName="Microsoft.ScriptTask"
          DTS:Description="Script Task"
          DTS:DTSID="{BCDFD063-9872-4BAB-A9D2-BD7B28487F0F}"
          DTS:ExecutableType="Microsoft.ScriptTask"
          DTS:LocaleID="-1"
          DTS:ObjectName="Set week start date and end date for the report query"
          DTS:ThreadHint="0">
          <DTS:Variables />
          <DTS:ObjectData>
            <ScriptProject
              Name="ST_a1021e9690474c57b7f095cf8430d97b"
              VSTAMajorVersion="3"
              VSTAMinorVersion="0"
              Language="CSharp"
              ReadWriteVariables="User::LastYearWeekEndDate,User::NoOfWeeks,User::ReportMonth,User::ReportQuery,User::ReservDate,User::WeekEndDate">
              <ProjectItem
                Name="Properties\Settings.settings"
                Encoding="UTF8"><![CDATA[<?xml version='1.0' encoding='iso-8859-1'?>
<SettingsFile xmlns="uri:settings" CurrentProfile="(Default)">
  <Profiles>
    <Profile Name="(Default)" />
  </Profiles>
  <Settings />
</SettingsFile>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.resx"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
</root>]]></ProjectItem>
              <ProjectItem
                Name="ST_a1021e9690474c57b7f095cf8430d97b.csproj"
                Encoding="UTF8"><![CDATA[<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" DefaultTargets="Build" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">
  <PropertyGroup>
    <ProjectTypeGuids>{30D016F9-3734-4E33-A861-5E7D899E18F3};{FAE04EC0-301F-11D3-BF4B-00C04F79EFBC}</ProjectTypeGuids>
    <Configuration Condition=" '$(Configuration)' == '' ">Debug</Configuration>
    <Platform Condition=" '$(Platform)' == '' ">AnyCPU</Platform>
    <ProductVersion>8.0.30703</ProductVersion>
    <SchemaVersion>2.0</SchemaVersion>
    <ProjectGuid>{52B89E74-1EA1-48B1-8913-EAEC6D733107}</ProjectGuid>
    <OutputType>Library</OutputType>
    <AppDesignerFolder>Properties</AppDesignerFolder>
    <RootNamespace>ST_918b27563b934ecb982634812fd32b11</RootNamespace>
    <AssemblyName>ST_a1021e9690474c57b7f095cf8430d97b</AssemblyName>
    <TargetFrameworkVersion>v4.0</TargetFrameworkVersion>
    <FileAlignment>512</FileAlignment>
    <ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>true</ResolveAssemblyReferenceIgnoreTargetFrameworkAttributeVersionMismatch>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
    <DebugSymbols>true</DebugSymbols>
    <DebugType>full</DebugType>
    <Optimize>false</Optimize>
    <OutputPath>.\bin\Debug\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>DEBUG;TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
    <DebugSymbols>false</DebugSymbols>
    <Optimize>true</Optimize>
    <OutputPath>.\bin\Release\</OutputPath>
    <EnableUnmanagedDebugging>false</EnableUnmanagedDebugging>
    <DefineConstants>TRACE</DefineConstants>
    <ErrorReport>prompt</ErrorReport>
    <WarningLevel>4</WarningLevel>
  </PropertyGroup>
  <ItemGroup>
    <Reference Include="System" />
    <Reference Include="System.Data" />
    <Reference Include="System.Windows.Forms" />
    <Reference Include="System.Xml" />
    <Reference Include="Microsoft.SqlServer.ManagedDTS, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
    <Reference Include="Microsoft.SqlServer.ScriptTask, Version=12.0.0.0, Culture=neutral, PublicKeyToken=89845dcd8080cc91" />
  </ItemGroup>
  <ItemGroup>
    <AppDesigner Include="Properties\" />
    <Compile Include="Properties\AssemblyInfo.cs">
      <SubType>Code</SubType>
    </Compile>
    <EmbeddedResource Include="Properties\Resources.resx">
      <Generator>ResXFileCodeGenerator</Generator>
      <LastGenOutput>Resources.Designer.cs</LastGenOutput>
    </EmbeddedResource>
    <Compile Include="Properties\Resources.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Resources.resx</DependentUpon>
    </Compile>
    <None Include="Properties\Settings.settings">
      <Generator>SettingsSingleFileGenerator</Generator>
      <LastGenOutput>Settings.Designer.cs</LastGenOutput>
    </None>
    <Compile Include="Properties\Settings.Designer.cs">
      <AutoGen>True</AutoGen>
      <DependentUpon>Settings.settings</DependentUpon>
    </Compile>
    <Compile Include="ScriptMain.cs">
      <SubType>Code</SubType>
    </Compile>
  </ItemGroup>
  <!-- Include the build rules for a C# project.-->
  <Import Project="$(MSBuildBinPath)\Microsoft.CSharp.targets" />
  <ProjectExtensions>
    <VisualStudio>
      <FlavorProperties GUID="{30D016F9-3734-4E33-A861-5E7D899E18F3}">
        <ProjectProperties HostName="VSTAHostName" HostPackage="{B3A685AA-7EAF-4BC6-9940-57959FA5AC07}" ApplicationType="usd" Language="cs" TemplatesPath="" DebugInfoExeName="#HKEY_LOCAL_MACHINE\SOFTWARE\Microsoft\VisualStudio\10.0\InstallDir#\devenv.exe" />
        <Host Name="ScriptTask" />
        <ProjectClient>
          <HostIdentifier>SSIS_ST120</HostIdentifier>
        </ProjectClient>
      </FlavorProperties>
    </VisualStudio>
  </ProjectExtensions>
</Project>]]></ProjectItem>
              <ProjectItem
                Name="ScriptMain.cs"
                Encoding="UTF8"><![CDATA[#region Help:  Introduction to the script task
/* The Script Task allows you to perform virtually any operation that can be accomplished in
 * a .Net application within the context of an Integration Services control flow. 
 * 
 * Expand the other regions which have "Help" prefixes for examples of specific ways to use
 * Integration Services features within this script task. */
#endregion


#region Namespaces
using System;
using System.Data;
using Microsoft.SqlServer.Dts.Runtime;
using System.Windows.Forms;
using System.Globalization;
#endregion

namespace ST_918b27563b934ecb982634812fd32b11
{
    /// <summary>
    /// ScriptMain is the entry point class of the script.  Do not change the name, attributes,
    /// or parent of this class.
    /// </summary>
	[Microsoft.SqlServer.Dts.Tasks.ScriptTask.SSISScriptTaskEntryPointAttribute]
	public partial class ScriptMain : Microsoft.SqlServer.Dts.Tasks.ScriptTask.VSTARTScriptObjectModelBase
	{
        #region Help:  Using Integration Services variables and parameters in a script
        /* To use a variable in this script, first ensure that the variable has been added to 
         * either the list contained in the ReadOnlyVariables property or the list contained in 
         * the ReadWriteVariables property of this script task, according to whether or not your
         * code needs to write to the variable.  To add the variable, save this script, close this instance of
         * Visual Studio, and update the ReadOnlyVariables and 
         * ReadWriteVariables properties in the Script Transformation Editor window.
         * To use a parameter in this script, follow the same steps. Parameters are always read-only.
         * 
         * Example of reading from a variable:
         *  DateTime startTime = (DateTime) Dts.Variables["System::StartTime"].Value;
         * 
         * Example of writing to a variable:
         *  Dts.Variables["User::myStringVariable"].Value = "new value";
         * 
         * Example of reading from a package parameter:
         *  int batchId = (int) Dts.Variables["$Package::batchId"].Value;
         *  
         * Example of reading from a project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].Value;
         * 
         * Example of reading from a sensitive project parameter:
         *  int batchId = (int) Dts.Variables["$Project::batchId"].GetSensitiveValue();
         * */

        #endregion

        #region Help:  Firing Integration Services events from a script
        /* This script task can fire events for logging purposes.
         * 
         * Example of firing an error event:
         *  Dts.Events.FireError(18, "Process Values", "Bad value", "", 0);
         * 
         * Example of firing an information event:
         *  Dts.Events.FireInformation(3, "Process Values", "Processing has started", "", 0, ref fireAgain)
         * 
         * Example of firing a warning event:
         *  Dts.Events.FireWarning(14, "Process Values", "No values received for input", "", 0);
         * */
        #endregion

        #region Help:  Using Integration Services connection managers in a script
        /* Some types of connection managers can be used in this script task.  See the topic 
         * "Working with Connection Managers Programatically" for details.
         * 
         * Example of using an ADO.Net connection manager:
         *  object rawConnection = Dts.Connections["Sales DB"].AcquireConnection(Dts.Transaction);
         *  SqlConnection myADONETConnection = (SqlConnection)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Sales DB"].ReleaseConnection(rawConnection);
         *
         * Example of using a File connection manager
         *  object rawConnection = Dts.Connections["Prices.zip"].AcquireConnection(Dts.Transaction);
         *  string filePath = (string)rawConnection;
         *  //Use the connection in some code here, then release the connection
         *  Dts.Connections["Prices.zip"].ReleaseConnection(rawConnection);
         * */
        #endregion


		/// <summary>
        /// This method is called when this script task executes in the control flow.
        /// Before returning from this method, set the value of Dts.TaskResult to indicate success or failure.
        /// To open Help, press F1.
        /// </summary>
		public void Main()
		{
			// TODO: Add your code here
            int noOfWeeks = (int)Dts.Variables["User::NoOfWeeks"].Value;
            if (noOfWeeks == 0)
            {
                DateTime lastSaturday = getPreviousSaturday(DateTime.Today);
                DateTime monthStartDate = new DateTime(lastSaturday.Year, lastSaturday.Month, 1);
                DateTime firstSaturdayOfMonth = getFirstSaturday(monthStartDate);
                //DateTime reportEndDate = lastSaturday.Date;
                DateTime reportEndDate = firstSaturdayOfMonth.Date;
                DateTimeFormatInfo dfi = DateTimeFormatInfo.CurrentInfo;
                Calendar cal = dfi.Calendar;
                int weekNumber = cal.GetWeekOfYear(firstSaturdayOfMonth, CalendarWeekRule.FirstFourDayWeek, DayOfWeek.Monday);
                int noOfWeeksInJan = GetNoOf4DaysWeekInAMonth(firstSaturdayOfMonth.Year, 1);

                DateTime lastYearDate = new DateTime(firstSaturdayOfMonth.Year - 1, 1, 1).AddDays((weekNumber * 7) - 1).Date;

                // reduce the week number if last jan had 5 weeks with 4 days in a week
                if (noOfWeeksInJan == 5)
                {
                    lastYearDate = new DateTime(firstSaturdayOfMonth.Year - 1, 1, 1).AddDays(((weekNumber - 1) * 7) - 1).Date;
                }

                Dts.Variables["User::ReportMonth"].Value = lastSaturday.Month;
                Dts.Variables["User::LastYearWeekEndDate"].Value = lastYearDate.Date;
                Dts.Variables["User::WeekEndDate"].Value = reportEndDate.Date;
                Dts.Variables["User::ReservDate"].Value = reportEndDate.Date.ToString("dd-MMMM");
            }
            else
            {
                DateTime lastYearEndDate = ((DateTime)(Dts.Variables["User::LastYearWeekEndDate"].Value)).AddDays(7).Date;
                DateTime endDate = ((DateTime)(Dts.Variables["User::WeekEndDate"].Value)).AddDays(7).Date;

                Dts.Variables["User::LastYearWeekEndDate"].Value = lastYearEndDate;
                Dts.Variables["User::WeekEndDate"].Value = endDate;
                Dts.Variables["User::ReservDate"].Value = endDate.Date.ToString("dd-MMMM");

                if (endDate.AddDays(7).Month != endDate.Month)
                {
                    noOfWeeks = noOfWeeks + 1;
                }
            }

            Dts.TaskResult = (int)ScriptResults.Success;
		}

        public DateTime getFirstMondayOfMonthAndYear(int Month, int Year)
        {
            DateTime dt;
            DateTime.TryParse(String.Format("{0}/{1}/1", Year, Month), out dt);
            for (int i = 0; i < 7; i++)
            {
                if (dt.DayOfWeek == DayOfWeek.Monday)
                {
                    return dt;
                }
                else
                {
                    dt = dt.AddDays(1);
                }
            }
            return DateTime.Now;
        }

        public DateTime getPreviousSaturday(DateTime date)
        {
            for (int i = 0; i < 7; i++)
            {
                if (date.DayOfWeek == DayOfWeek.Saturday)
                {
                    return date;
                }
                else
                {
                    date = date.AddDays(-1);
                }
            }
            return DateTime.Now;
        }

        public DateTime getFirstSaturday(DateTime date)
        {
            for (int i = 0; i < 7; i++)
            {
                if (date.DayOfWeek == DayOfWeek.Saturday)
                {
                    return date;
                }
                else
                {
                    date = date.AddDays(1);
                }
            }
            return DateTime.Now;
        }

        public int GetNoOf4DaysWeekInAMonth(int year, int month)
        {
            int noOfDays = DateTime.DaysInMonth(year, month);
            int totalMondays = 0;
            DateTime startDateOfMonth = new DateTime(year, month, 1);
            int noOfWeeks = 0;

            for (int i = 0; i < noOfDays; i++)
            {
                if (startDateOfMonth.Date.AddDays(i).DayOfWeek == DayOfWeek.Monday)
                {
                    totalMondays++;
                }
            }

            if (totalMondays == 5)
            {
                if (new DateTime(year, month, (noOfDays - 2)).DayOfWeek == DayOfWeek.Monday)
                {
                    noOfWeeks = totalMondays;
                }
                else
                {
                    noOfWeeks = totalMondays - 1;
                }
            }
            else
            {
                noOfWeeks = totalMondays;
            }

            return noOfWeeks;
        }

        #region ScriptResults declaration
        /// <summary>
        /// This enum provides a convenient shorthand within the scope of this class for setting the
        /// result of the script.
        /// 
        /// This code was generated automatically.
        /// </summary>
        enum ScriptResults
        {
            Success = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Success,
            Failure = Microsoft.SqlServer.Dts.Runtime.DTSExecResult.Failure
        };
        #endregion

	}
}]]></ProjectItem>
              <ProjectItem
                Name="Project"
                Encoding="UTF16LE"><![CDATA[<?xml version="1.0" encoding="UTF-16" standalone="yes"?>
<c:Project xmlns:c="http://schemas.microsoft.com/codeprojectml/2010/08/main" xmlns:msb="http://schemas.microsoft.com/developer/msbuild/2003" runtimeVersion="3.0" schemaVersion="1.0">
	<msb:PropertyGroup>
		<msb:CodeName>ST_918b27563b934ecb982634812fd32b11</msb:CodeName>
		<msb:Language>msBuild</msb:Language>
		<msb:DisplayName>ST_918b27563b934ecb982634812fd32b11</msb:DisplayName>
		<msb:ProjectId>{60451506-358F-46CF-BF7F-A8CFCECBB1E0}</msb:ProjectId>
	</msb:PropertyGroup>
	<msb:ItemGroup>
		<msb:Project Include="ST_a1021e9690474c57b7f095cf8430d97b.csproj"/>
		<msb:File Include="Properties\AssemblyInfo.cs"/>
		<msb:File Include="Properties\Settings.settings"/>
		<msb:File Include="Properties\Resources.resx"/>
		<msb:File Include="Properties\Resources.Designer.cs"/>
		<msb:File Include="Properties\Settings.Designer.cs"/>
		<msb:File Include="ScriptMain.cs"/>
	</msb:ItemGroup>
</c:Project>]]></ProjectItem>
              <ProjectItem
                Name="Properties\Settings.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_918b27563b934ecb982634812fd32b11.Properties.Settings.get_Default():ST_918b27563b934ecb982634812fd32b11.Properties.Sett" +
    "ings")]

namespace ST_918b27563b934ecb982634812fd32b11.Properties {
    
    
    internal sealed partial class Settings : global::System.Configuration.ApplicationSettingsBase {
        
        [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
        private static Settings defaultInstance = new Settings();
        
        public static Settings Default {
            get {
                return defaultInstance;
            }
        }
    }
}]]></ProjectItem>
              <ProjectItem
                Name="Properties\AssemblyInfo.cs"
                Encoding="UTF8"><![CDATA[using System.Reflection;
using System.Runtime.CompilerServices;

//
// General Information about an assembly is controlled through the following 
// set of attributes. Change these attribute values to modify the information
// associated with an assembly.
//
[assembly: AssemblyTitle("ST_918b27563b934ecb982634812fd32b11")]
[assembly: AssemblyDescription("")]
[assembly: AssemblyConfiguration("")]
[assembly: AssemblyCompany("The BonTon Stores, Inc.")]
[assembly: AssemblyProduct("ST_918b27563b934ecb982634812fd32b11")]
[assembly: AssemblyCopyright("Copyright @ The BonTon Stores, Inc. 2018")]
[assembly: AssemblyTrademark("")]
[assembly: AssemblyCulture("")]
//
// Version information for an assembly consists of the following four values:
//
//      Major Version
//      Minor Version 
//      Build Number
//      Revision
//
// You can specify all the values or you can default the Revision and Build Numbers 
// by using the '*' as shown below:

[assembly: AssemblyVersion("1.0.*")]]]></ProjectItem>
              <ProjectItem
                Name="Properties\Resources.Designer.cs"
                Encoding="UTF8"><![CDATA[//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_918b27563b934ecb982634812fd32b11.Properties.Resources.get_ResourceManager():System.Resources.Resou" +
    "rceManager")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_918b27563b934ecb982634812fd32b11.Properties.Resources.get_Culture():System.Globalization.CultureIn" +
    "fo")]
[assembly: global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode", Scope="member", Target="ST_918b27563b934ecb982634812fd32b11.Properties.Resources.set_Culture(System.Globalization.CultureInfo" +
    "):Void")]

namespace ST_918b27563b934ecb982634812fd32b11.Properties {
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    internal class Resources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Resources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if ((resourceMan == null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("ST_918b27563b934ecb982634812fd32b11.Properties.Resources", typeof(Resources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
    }
}]]></ProjectItem>
              <BinaryItem
                Name="ST_a1021e9690474c57b7f095cf8430d97b.dll">TVqQAAMAAAAEAAAA//8AALgAAAAAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAgAAAAA4fug4AtAnNIbgBTM0hVGhpcyBwcm9ncmFtIGNhbm5vdCBiZSBydW4gaW4gRE9TIG1v
ZGUuDQ0KJAAAAAAAAABQRQAATAEDAHfcqloAAAAAAAAAAOAAAiELAQsAABYAAAAIAAAAAAAArjUA
AAAgAAAAQAAAAAAAEAAgAAAAAgAABAAAAAAAAAAEAAAAAAAAAACAAAAAAgAAAAAAAAMAQIUAABAA
ABAAAAAAEAAAEAAAAAAAABAAAAAAAAAAAAAAAGA1AABLAAAAAEAAAIgEAAAAAAAAAAAAAAAAAAAA
AAAAAGAAAAwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAIAAACAAAAAAAAAAAAAAACCAAAEgAAAAAAAAAAAAAAC50ZXh0AAAAtBUAAAAgAAAAFgAAAAIA
AAAAAAAAAAAAAAAAACAAAGAucnNyYwAAAIgEAAAAQAAAAAYAAAAYAAAAAAAAAAAAAAAAAABAAABA
LnJlbG9jAAAMAAAAAGAAAAACAAAAHgAAAAAAAAAAAAAAAAAAQAAAQgAAAAAAAAAAAAAAAAAAAACQ
NQAAAAAAAEgAAAACAAUAgCUAAOAPAAABAAAAAAAAAMgkAAC4AAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAB4CKA4AAAoqEzACAC0AAAABAAARfgEAAAQtIHIBAABw0AIA
AAIoDwAACm8QAAAKcxEAAAoKBoABAAAEfgEAAAQqGn4CAAAEKh4CgAIAAAQqGn4DAAAEKi5zBgAA
BoADAAAEKh4CKBQAAAoqABMwBACkAgAAAgAAEQIoFgAACm8XAAAKcnMAAHBvGAAACm8ZAAAKpR8A
AAEKBjpiAQAAAigaAAAKKAoAAAYLEgISASgbAAAKEgEoHAAAChcoHQAACgIIKAsAAAYNEgMoHgAA
ChMEKB8AAAoTBREFbyAAAAoTBhEGCRgXbyEAAAoTBwISAygbAAAKFygMAAAGEwgSAygbAAAKF1kX
F3MdAAAKEwwSDBEHHVoXWWwoIgAAChMNEg0oHgAAChMJEQgbMy0SAygbAAAKF1kXF3MdAAAKEw4S
DhEHF1kdWhdZbCgiAAAKEw8SDygeAAAKEwkCKBYAAApvFwAACnKTAABwbxgAAAoSASgcAAAKjB8A
AAFvIwAACgIoFgAACm8XAAAKcrcAAHBvGAAAChIJKB4AAAqMBwAAAW8jAAAKAigWAAAKbxcAAApy
6wAAcG8YAAAKEgQoHgAACowHAAABbyMAAAoCKBYAAApvFwAACnIPAQBwbxgAAAoSBCgeAAAKExAS
EHIxAQBwKCQAAApvIwAACjgPAQAAAigWAAAKbxcAAApytwAAcG8YAAAKbxkAAAqlBwAAARMREhEj
AAAAAAAAHEAoIgAAChMSEhIoHgAAChMKAigWAAAKbxcAAApy6wAAcG8YAAAKbxkAAAqlBwAAARMT
EhMjAAAAAAAAHEAoIgAAChMUEhQoHgAAChMLAigWAAAKbxcAAApytwAAcG8YAAAKEQqMBwAAAW8j
AAAKAigWAAAKbxcAAApy6wAAcG8YAAAKEQuMBwAAAW8jAAAKAigWAAAKbxcAAApyDwEAcG8YAAAK
EgsoHgAAChMVEhVyMQEAcCgkAAAKbyMAAAoSCyMAAAAAAAAcQCgiAAAKExYSFigcAAAKEgsoHAAA
Ci4EBhdYCgIoFgAAChZvJQAACioTMAMATQAAAAMAABFyQQEAcASMHwAAAQOMHwAAASgmAAAKEgAo
JwAACiYWCyshEgAoKAAAChczAgYqEgAjAAAAAAAA8D8oIgAACgoHF1gLBx0y2ygpAAAKKgAAABMw
AgAwAAAABAAAERYKKyIPASgoAAAKHDMCAyoPASMAAAAAAADwvygiAAAKEAEGF1gKBh0y2igpAAAK
KhMwAgAwAAAABAAAERYKKyIPASgoAAAKHDMCAyoPASMAAAAAAADwPygiAAAKEAEGF1gKBh0y2igp
AAAKKhMwBABxAAAABQAAEQMEKCoAAAoKFgsSAgMEFygdAAAKFg0WEwQrKRICKB4AAAoTBRIFEQRs
KCIAAAoTBhIGKCgAAAoXMwQHF1gLEQQXWBMEEQQGMtIHGzMgAwQGGFlzHQAAChMHEgcoKAAAChcz
BAcNKwgHF1kNKwIHDQkqHgIoKwAACioAAAC0AAAAzsrvvgEAAACRAAAAbFN5c3RlbS5SZXNvdXJj
ZXMuUmVzb3VyY2VSZWFkZXIsIG1zY29ybGliLCBWZXJzaW9uPTQuMC4wLjAsIEN1bHR1cmU9bmV1
dHJhbCwgUHVibGljS2V5VG9rZW49Yjc3YTVjNTYxOTM0ZTA4OSNTeXN0ZW0uUmVzb3VyY2VzLlJ1
bnRpbWVSZXNvdXJjZVNldAIAAAAAAAAAAAAAAFBBRFBBRFC0AAAAQlNKQgEAAQAAAAAADAAAAHY0
LjAuMzAzMTkAAAAABQBsAAAApAQAACN+AAAQBQAAKAcAACNTdHJpbmdzAAAAADgMAABYAQAAI1VT
AJANAAAQAAAAI0dVSUQAAACgDQAAQAIAACNCbG9iAAAAAAAAAAIAAAFXHaIBCQMAAAD6JTMAFgAA
AQAAACQAAAAFAAAABgAAAA0AAAAHAAAAKwAAAAIAAAAPAAAABQAAAAIAAAADAAAABAAAAAEAAAAE
AAAAAQAAAAEAAAAAAAoAAQAAAAAABgDBALoACgDdAMgADgA9ARQBBgBZAboABgBvAV4BBgCgAYsB
BgAfAroABgDWArwCBgABA+8CBgAYA+8CBgA1A+8CBgBUA+8CBgBtA+8CBgCGA+8CBgChA+8CBgC8
A+8CBgDVA+8CBgAOBO4DBgAuBO4DBgCDBHAEBgCgBLoABgClBLoABgDJBO8CCgD1BN8ECgAOBd8E
BgAjBe4DDgBFBRQBDgBnBRQBEgDABaAFEgDYBaAFBgD0BboABgAgBosBBgBDBosBBgBZBosBBgBq
BroABgCsBroAAAAAAAEAAAAAAAEAAQAAABAAMgA8AAUAAQABAAABEABrADwACQADAAUAAQAQAHQA
fwANAAQACAADAQAAowAAABEABAAOABEAfwETABEArAEXABEA9gE5AAYGgwJbAFaAiwJeAFaAkwJe
AFAgAAAAAIMYvAEbAAEAWCAAAAAAkwjCAR8AAQCRIAAAAACTCNYBJAABAJggAAAAAJMI4gEpAAEA
oCAAAAAAlggGAj0AAgCzIAAAAACGGLwBGwACAKcgAAAAAJEYPgWdAAIAvCAAAAAAhgAaAhsAAgBs
IwAAAACGACgCRwACAMgjAAAAAIYARQJOAAQABCQAAAAAhgBZAk4ABQBAJAAAAACGAGoCVQAGAL0k
AAAAAIYYvAEbAAgAAAABAJsCAAABAKECAAACAKcCAAABAKwCAAABAKwCAAABALECAAACALYCQQC8
AWwASQC8AWwAUQC8AWwAWQC8AWwAYQC8AWwAaQC8AWwAcQC8AWwAeQC8AWwAgQC8AWwAiQC8AWwA
kQC8AXEAmQC8ARsAoQC8ARsACQC8ARsAqQC3BHYAqQDSBH0AKQC8AYIAwQC8AY4A0QC8ARsAEQC8
ARsA2QC8ARsAGQB5BaEA4QDKBaYA6QDhBasA8QDqBbEAOQD6BbUAOQAEBroAOQANBroAOQC8Ab4A
OQAXBsUAAQEzBsoAAQFMBtAACQF0BtYAOQCCBuIA8QCKBugAOQCUBu0A4QCdBnEAIQGzBiIBOQC6
BikBOQDDBjEBOQDRBrUAOQDZBkEBGQC8ARsACAAUAGIACAAYAGcAKQCTAJQALgAbAMcBLgAjAMcB
LgBjACECLgALAFYBLgATAJ4BLgAzAJ4BLgArAM0BLgA7AOoBLgBDAMcBLgBbABgCQwBrAGcASQCT
AJQAYQCbAGcAgwCrAGcAiQDyADcBPQFHAQIAAQADAAMAAABvAS8AAADuATQAAAASAkIAAgACAAMA
AgADAAUAAQAEAAUAAgAFAAcABIAAAAEAAAD4GUtoAAAAAAAATAQAAAQAAAAAAAAAAAAAAAEAsQAA
AAAABAAAAAAAAAAAAAAAAQC6AAAAAAAMAAAAAAAAAAAAAAAKAPUAAAAAAAwAAAAAAAAAAAAAAAoA
gQUAAAAAAAAAAAEAAADlBgAABQAEAAAAADxNb2R1bGU+AFNUX2ExMDIxZTk2OTA0NzRjNTdiN2Yw
OTVjZjg0MzBkOTdiLmRsbABSZXNvdXJjZXMAU1RfOTE4YjI3NTYzYjkzNGVjYjk4MjYzNDgxMmZk
MzJiMTEuUHJvcGVydGllcwBTZXR0aW5ncwBTY3JpcHRNYWluAFNUXzkxOGIyNzU2M2I5MzRlY2I5
ODI2MzQ4MTJmZDMyYjExAFNjcmlwdFJlc3VsdHMAbXNjb3JsaWIAU3lzdGVtAE9iamVjdABTeXN0
ZW0uQ29uZmlndXJhdGlvbgBBcHBsaWNhdGlvblNldHRpbmdzQmFzZQBNaWNyb3NvZnQuU3FsU2Vy
dmVyLlNjcmlwdFRhc2sATWljcm9zb2Z0LlNxbFNlcnZlci5EdHMuVGFza3MuU2NyaXB0VGFzawBW
U1RBUlRTY3JpcHRPYmplY3RNb2RlbEJhc2UARW51bQBTeXN0ZW0uUmVzb3VyY2VzAFJlc291cmNl
TWFuYWdlcgByZXNvdXJjZU1hbgBTeXN0ZW0uR2xvYmFsaXphdGlvbgBDdWx0dXJlSW5mbwByZXNv
dXJjZUN1bHR1cmUALmN0b3IAZ2V0X1Jlc291cmNlTWFuYWdlcgBnZXRfQ3VsdHVyZQBzZXRfQ3Vs
dHVyZQBDdWx0dXJlAGRlZmF1bHRJbnN0YW5jZQBnZXRfRGVmYXVsdABEZWZhdWx0AE1haW4ARGF0
ZVRpbWUAZ2V0Rmlyc3RNb25kYXlPZk1vbnRoQW5kWWVhcgBnZXRQcmV2aW91c1NhdHVyZGF5AGdl
dEZpcnN0U2F0dXJkYXkAR2V0Tm9PZjREYXlzV2Vla0luQU1vbnRoAHZhbHVlX18AU3VjY2VzcwBG
YWlsdXJlAHZhbHVlAE1vbnRoAFllYXIAZGF0ZQB5ZWFyAG1vbnRoAFN5c3RlbS5SdW50aW1lLlZl
cnNpb25pbmcAVGFyZ2V0RnJhbWV3b3JrQXR0cmlidXRlAFN5c3RlbS5SZWZsZWN0aW9uAEFzc2Vt
Ymx5VGl0bGVBdHRyaWJ1dGUAQXNzZW1ibHlEZXNjcmlwdGlvbkF0dHJpYnV0ZQBBc3NlbWJseUNv
bmZpZ3VyYXRpb25BdHRyaWJ1dGUAQXNzZW1ibHlDb21wYW55QXR0cmlidXRlAEFzc2VtYmx5UHJv
ZHVjdEF0dHJpYnV0ZQBBc3NlbWJseUNvcHlyaWdodEF0dHJpYnV0ZQBBc3NlbWJseVRyYWRlbWFy
a0F0dHJpYnV0ZQBBc3NlbWJseUN1bHR1cmVBdHRyaWJ1dGUAQXNzZW1ibHlWZXJzaW9uQXR0cmli
dXRlAFN5c3RlbS5SdW50aW1lLkNvbXBpbGVyU2VydmljZXMAQ29tcGlsYXRpb25SZWxheGF0aW9u
c0F0dHJpYnV0ZQBSdW50aW1lQ29tcGF0aWJpbGl0eUF0dHJpYnV0ZQBTVF9hMTAyMWU5NjkwNDc0
YzU3YjdmMDk1Y2Y4NDMwZDk3YgBTeXN0ZW0uRGlhZ25vc3RpY3MARGVidWdnZXJOb25Vc2VyQ29k
ZUF0dHJpYnV0ZQBUeXBlAFJ1bnRpbWVUeXBlSGFuZGxlAEdldFR5cGVGcm9tSGFuZGxlAEFzc2Vt
Ymx5AGdldF9Bc3NlbWJseQBTeXN0ZW0uQ29tcG9uZW50TW9kZWwARWRpdG9yQnJvd3NhYmxlQXR0
cmlidXRlAEVkaXRvckJyb3dzYWJsZVN0YXRlAENvbXBpbGVyR2VuZXJhdGVkQXR0cmlidXRlAC5j
Y3RvcgBTU0lTU2NyaXB0VGFza0VudHJ5UG9pbnRBdHRyaWJ1dGUAU2NyaXB0T2JqZWN0TW9kZWwA
Z2V0X0R0cwBNaWNyb3NvZnQuU3FsU2VydmVyLk1hbmFnZWREVFMATWljcm9zb2Z0LlNxbFNlcnZl
ci5EdHMuUnVudGltZQBWYXJpYWJsZXMAZ2V0X1ZhcmlhYmxlcwBWYXJpYWJsZQBnZXRfSXRlbQBn
ZXRfVmFsdWUASW50MzIAZ2V0X1RvZGF5AGdldF9ZZWFyAGdldF9Nb250aABnZXRfRGF0ZQBEYXRl
VGltZUZvcm1hdEluZm8AZ2V0X0N1cnJlbnRJbmZvAENhbGVuZGFyAGdldF9DYWxlbmRhcgBDYWxl
bmRhcldlZWtSdWxlAERheU9mV2VlawBHZXRXZWVrT2ZZZWFyAEFkZERheXMAc2V0X1ZhbHVlAFRv
U3RyaW5nAHNldF9UYXNrUmVzdWx0AFN0cmluZwBGb3JtYXQAVHJ5UGFyc2UAZ2V0X0RheU9mV2Vl
awBnZXRfTm93AERheXNJbk1vbnRoAFNUXzkxOGIyNzU2M2I5MzRlY2I5ODI2MzQ4MTJmZDMyYjEx
LlByb3BlcnRpZXMuUmVzb3VyY2VzLnJlc291cmNlcwAAcVMAVABfADkAMQA4AGIAMgA3ADUANgAz
AGIAOQAzADQAZQBjAGIAOQA4ADIANgAzADQAOAAxADIAZgBkADMAMgBiADEAMQAuAFAAcgBvAHAA
ZQByAHQAaQBlAHMALgBSAGUAcwBvAHUAcgBjAGUAcwAAH1UAcwBlAHIAOgA6AE4AbwBPAGYAVwBl
AGUAawBzAAAjVQBzAGUAcgA6ADoAUgBlAHAAbwByAHQATQBvAG4AdABoAAAzVQBzAGUAcgA6ADoA
TABhAHMAdABZAGUAYQByAFcAZQBlAGsARQBuAGQARABhAHQAZQAAI1UAcwBlAHIAOgA6AFcAZQBl
AGsARQBuAGQARABhAHQAZQAAIVUAcwBlAHIAOgA6AFIAZQBzAGUAcgB2AEQAYQB0AGUAAA9kAGQA
LQBNAE0ATQBNAAETewAwAH0ALwB7ADEAfQAvADEAAAAAAKia9haDOYdCocj3CrJoJ34ACLd6XFYZ
NOCJCImEXc2AgMyRAwYSFQMGEhkDIAABBAAAEhUEAAASGQUAAQESGQQIABIVBAgAEhkDBhIMBAAA
EgwECAASDAYgAhEdCAgGIAERHREdBSACCAgIAgYIAwYRFAQAAAAABAEAAAAEIAEBDgQgAQEIBgAB
ElURWQQgABJdBiACAQ4SXQQHARIVBSABARFlCAEAAgAAAAAAAwAAAQQgABJxBCAAEnUFIAESeRwD
IAAcBAAAER0DIAAIBiADAQgICAQgABEdBQAAEoCBBSAAEoCFCyADCBEdEYCJEYCNBSABER0NBCAB
ARwEIAEODi8HFwgRHREdER0RHRKAgRKAhQgIER0RHREdER0RHREdER0RHREdER0RHREdER0RHQYA
Aw4OHBwHAAICDhARHQUgABGAjQUHAhEdCAMHAQgFAAIICAgOBwgICBEdCAgRHREdER1HAQAaLk5F
VEZyYW1ld29yayxWZXJzaW9uPXY0LjABAFQOFEZyYW1ld29ya0Rpc3BsYXlOYW1lEC5ORVQgRnJh
bWV3b3JrIDQoAQAjU1RfOTE4YjI3NTYzYjkzNGVjYjk4MjYzNDgxMmZkMzJiMTEAAAUBAAAAABwB
ABdUaGUgQm9uVG9uIFN0b3JlcywgSW5jLgAALQEAKENvcHlyaWdodCBAIFRoZSBCb25Ub24gU3Rv
cmVzLCBJbmMuIDIwMTgAAAgBAAgAAAAAAB4BAAEAVAIWV3JhcE5vbkV4Y2VwdGlvblRocm93cwGI
NQAAAAAAAAAAAACeNQAAACAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAkDUAAAAAAAAAAF9Db3JEbGxN
YWluAG1zY29yZWUuZGxsAAAAAAD/JQAgABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAABABAAAAAYAACAAAAAAAAAAAAAAAAAAAABAAEAAAAwAACAAAAAAAAAAAAAAAAAAAABAAAAAABI
AAAAWEAAADAEAAAAAAAAAAAAADAENAAAAFYAUwBfAFYARQBSAFMASQBPAE4AXwBJAE4ARgBPAAAA
AAC9BO/+AAABAAAAAQBLaPgZAAABAEto+Bk/AAAAAAAAAAQAAAACAAAAAAAAAAAAAAAAAAAARAAA
AAEAVgBhAHIARgBpAGwAZQBJAG4AZgBvAAAAAAAkAAQAAABUAHIAYQBuAHMAbABhAHQAaQBvAG4A
AAAAAAAAsASQAwAAAQBTAHQAcgBpAG4AZwBGAGkAbABlAEkAbgBmAG8AAABsAwAAAQAwADAAMAAw
ADAANABiADAAAABQABgAAQBDAG8AbQBwAGEAbgB5AE4AYQBtAGUAAAAAAFQAaABlACAAQgBvAG4A
VABvAG4AIABTAHQAbwByAGUAcwAsACAASQBuAGMALgAAAHAAJAABAEYAaQBsAGUARABlAHMAYwBy
AGkAcAB0AGkAbwBuAAAAAABTAFQAXwA5ADEAOABiADIANwA1ADYAMwBiADkAMwA0AGUAYwBiADkA
OAAyADYAMwA0ADgAMQAyAGYAZAAzADIAYgAxADEAAABAAA8AAQBGAGkAbABlAFYAZQByAHMAaQBv
AG4AAAAAADEALgAwAC4ANgA2ADQAOAAuADIANgA2ADkAOQAAAAAAcAAoAAEASQBuAHQAZQByAG4A
YQBsAE4AYQBtAGUAAABTAFQAXwBhADEAMAAyADEAZQA5ADYAOQAwADQANwA0AGMANQA3AGIANwBm
ADAAOQA1AGMAZgA4ADQAMwAwAGQAOQA3AGIALgBkAGwAbAAAAHgAKQABAEwAZQBnAGEAbABDAG8A
cAB5AHIAaQBnAGgAdAAAAEMAbwBwAHkAcgBpAGcAaAB0ACAAQAAgAFQAaABlACAAQgBvAG4AVABv
AG4AIABTAHQAbwByAGUAcwAsACAASQBuAGMALgAgADIAMAAxADgAAAAAAHgAKAABAE8AcgBpAGcA
aQBuAGEAbABGAGkAbABlAG4AYQBtAGUAAABTAFQAXwBhADEAMAAyADEAZQA5ADYAOQAwADQANwA0
AGMANQA3AGIANwBmADAAOQA1AGMAZgA4ADQAMwAwAGQAOQA3AGIALgBkAGwAbAAAAGgAJAABAFAA
cgBvAGQAdQBjAHQATgBhAG0AZQAAAAAAUwBUAF8AOQAxADgAYgAyADcANQA2ADMAYgA5ADMANABl
AGMAYgA5ADgAMgA2ADMANAA4ADEAMgBmAGQAMwAyAGIAMQAxAAAARAAPAAEAUAByAG8AZAB1AGMA
dABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADYANAA4AC4AMgA2ADYAOQA5AAAAAABIAA8AAQBB
AHMAcwBlAG0AYgBsAHkAIABWAGUAcgBzAGkAbwBuAAAAMQAuADAALgA2ADYANAA4AC4AMgA2ADYA
OQA5AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAAAAwAAACwNQAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA=</BinaryItem>
            </ScriptProject>
          </DTS:ObjectData>
        </DTS:Executable>
      </DTS:Executables>
      <DTS:PrecedenceConstraints>
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Generate the weekly report.PrecedenceConstraints[Constraint]"
          DTS:CreationName=""
          DTS:DTSID="{D6AB50F4-893D-4BD5-AAB8-8E37ED6C135C}"
          DTS:From="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint"
          DTS:To="Package\Generate the weekly report\Add total text to the spreadsheet and two blank rows to separate weeks" />
        <DTS:PrecedenceConstraint
          DTS:refId="Package\Generate the weekly report.PrecedenceConstraints[Constraint 7]"
          DTS:CreationName=""
          DTS:DTSID="{E36DA2BC-29AB-4205-ADE6-70F9F237610D}"
          DTS:From="Package\Generate the weekly report\Set week start date and end date for the report query"
          DTS:LogicalAnd="True"
          DTS:ObjectName="Constraint 7"
          DTS:To="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet" />
      </DTS:PrecedenceConstraints>
    </DTS:Executable>
  </DTS:Executables>
  <DTS:PrecedenceConstraints>
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 1]"
      DTS:CreationName=""
      DTS:DTSID="{50B00EB4-2782-45EF-B8DD-C0D02C1F8740}"
      DTS:From="Package\Delete the top two temporary rows from the spreadsheet, they were used for formatting"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 1"
      DTS:To="Package\Generate PDF document from the excel spreadsheet using Excel Interop" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 2]"
      DTS:CreationName=""
      DTS:DTSID="{F480E3D7-23A3-4374-841E-B11D39EAB8ED}"
      DTS:From="Package\Generate PDF document from the excel spreadsheet using Excel Interop"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 2"
      DTS:To="Package\Execute the send email task to send the report out" />
    <DTS:PrecedenceConstraint
      DTS:refId="Package.PrecedenceConstraints[Constraint 7]"
      DTS:CreationName=""
      DTS:DTSID="{BBB0924E-7204-4108-A0BF-91721DAFA7E0}"
      DTS:From="Package\Generate the weekly report"
      DTS:LogicalAnd="True"
      DTS:ObjectName="Constraint 7"
      DTS:To="Package\Delete the top two temporary rows from the spreadsheet, they were used for formatting" />
  </DTS:PrecedenceConstraints>
  <DTS:DesignTimeProperties><![CDATA[<?xml version="1.0"?>
<!--This CDATA section contains the layout information of the package. The section includes information such as (x,y) coordinates, width, and height.-->
<!--If you manually edit this section and make a mistake, you can delete it. -->
<!--The package will still be able to load normally but the previous layout information will be lost and the designer will automatically re-arrange the elements on the design surface.-->
<Objects
  Version="sql12">
  <!--Each node below will contain properties that do not affect runtime behavior.-->
  <Package
    design-time-name="Package">
    <LayoutInfo>
      <GraphLayout
        Capacity="16" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="595,42"
          Id="Package\Delete the top two temporary rows from the spreadsheet, they were used for formatting"
          TopLeft="344.5,506.5" />
        <NodeLayout
          Size="597,42"
          Id="Package\Execute the send email task to send the report out"
          TopLeft="342.5,710.5" />
        <NodeLayout
          Size="596,42"
          Id="Package\Generate PDF document from the excel spreadsheet using Excel Interop"
          TopLeft="338.5,605.5" />
        <NodeLayout
          Size="412,42"
          Id="Package\Generate the weekly report\Add total text to the spreadsheet and two blank rows to separate weeks"
          TopLeft="44.5,203.5" />
        <NodeLayout
          Size="407,42"
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet"
          TopLeft="43,117" />
        <NodeLayout
          Size="406,42"
          Id="Package\Generate the weekly report\Set week start date and end date for the report query"
          TopLeft="43,28" />
        <EdgeLayout
          Id="Package\Generate the weekly report.PrecedenceConstraints[Constraint]"
          TopLeft="248.5,159">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,44.5"
              Start="0,0"
              End="0,37">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,37" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Generate the weekly report.PrecedenceConstraints[Constraint 7]"
          TopLeft="246.25,70">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,47"
              Start="0,0"
              End="0,39.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,39.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <ContainerLayout
          HeaderHeight="43"
          IsExpanded="True"
          PanelSize="601,308"
          Size="601,351"
          Id="Package\Generate the weekly report"
          TopLeft="336.5,78.5" />
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 1]"
          TopLeft="639.25,548.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,57"
              Start="0,0"
              End="0,49.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,49.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 2]"
          TopLeft="638.75,647.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,63"
              Start="0,0"
              End="0,55.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,55.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package.PrecedenceConstraints[Constraint 7]"
          TopLeft="639.5,429.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="0,77"
              Start="0,0"
              End="0,69.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,69.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </Package>
  <TaskHost
    design-time-name="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet">
    <LayoutInfo>
      <GraphLayout
        Capacity="32" xmlns="clr-namespace:Microsoft.SqlServer.IntegrationServices.Designer.Model.Serialization;assembly=Microsoft.SqlServer.IntegrationServices.Graph" xmlns:mssgle="clr-namespace:Microsoft.SqlServer.Graph.LayoutEngine;assembly=Microsoft.SqlServer.Graph" xmlns:assembly="http://schemas.microsoft.com/winfx/2006/xaml">
        <NodeLayout
          Size="312,42"
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year"
          TopLeft="138.5,178.5" />
        <NodeLayout
          Size="250,42"
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet"
          TopLeft="176.5,883.5" />
        <NodeLayout
          Size="197,42"
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Multicast"
          TopLeft="140.5,251.5" />
        <NodeLayout
          Size="123,42"
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Union All"
          TopLeft="184.5,570.5" />
        <NodeLayout
          Size="432,42"
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate change between this year and last year for change total columns"
          TopLeft="274.5,401.5" />
        <NodeLayout
          Size="278,42"
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Convert the data to a single decimal point"
          TopLeft="170.5,682.5" />
        <NodeLayout
          Size="224,42"
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Calculate the sum of all values"
          TopLeft="351.5,327.5" />
        <NodeLayout
          Size="159,42"
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Add Report Date"
          TopLeft="15,342.5" />
        <NodeLayout
          Size="218,42"
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database"
          TopLeft="133,81" />
        <EdgeLayout
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Multicast Output 2]"
          TopLeft="270.5,293.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="193,34"
              Start="0,0"
              End="193,26.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,9.7643504531722" />
                  <mssgle:CubicBezierSegment
                    Point1="0,9.7643504531722"
                    Point2="0,13.7643504531722"
                    Point3="4,13.7643504531722" />
                  <mssgle:LineSegment
                    End="189,13.7643504531722" />
                  <mssgle:CubicBezierSegment
                    Point1="189,13.7643504531722"
                    Point2="193,13.7643504531722"
                    Point3="193,17.7643504531722" />
                  <mssgle:LineSegment
                    End="193,26.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Derived Column Output2]"
          TopLeft="490.5,443.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-225.333333333333,127"
              Start="0,0"
              End="-225.333333333333,119.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,71.2215088282504" />
                  <mssgle:CubicBezierSegment
                    Point1="0,71.2215088282504"
                    Point2="0,75.2215088282504"
                    Point3="-4,75.2215088282504" />
                  <mssgle:LineSegment
                    End="-221.333333333333,75.2215088282504" />
                  <mssgle:CubicBezierSegment
                    Point1="-221.333333333333,75.2215088282504"
                    Point2="-225.333333333333,75.2215088282504"
                    Point3="-225.333333333333,79.2215088282504" />
                  <mssgle:LineSegment
                    End="-225.333333333333,119.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Derived Column Output1]"
          TopLeft="94.5,384.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="151.5,186"
              Start="0,0"
              End="151.5,178.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,89" />
                  <mssgle:CubicBezierSegment
                    Point1="0,89"
                    Point2="0,93"
                    Point3="4,93" />
                  <mssgle:LineSegment
                    End="147.5,93" />
                  <mssgle:CubicBezierSegment
                    Point1="147.5,93"
                    Point2="151.5,93"
                    Point3="151.5,97" />
                  <mssgle:LineSegment
                    End="151.5,178.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Derived Column Output]"
          TopLeft="294.5,220.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-55.5,31"
              Start="0,0"
              End="-55.5,23.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,11.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,11.5"
                    Point2="0,15.5"
                    Point3="-4,15.5" />
                  <mssgle:LineSegment
                    End="-51.5,15.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-51.5,15.5"
                    Point2="-55.5,15.5"
                    Point3="-55.5,19.5" />
                  <mssgle:LineSegment
                    End="-55.5,23.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Data Conversion Output]"
          TopLeft="309.5,724.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-8,159"
              Start="0,0"
              End="-8,151.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,75.5" />
                  <mssgle:CubicBezierSegment
                    Point1="0,75.5"
                    Point2="0,79.5"
                    Point3="-4,79.5" />
                  <mssgle:LineSegment
                    End="-4,79.5" />
                  <mssgle:CubicBezierSegment
                    Point1="-4,79.5"
                    Point2="-8,79.5"
                    Point3="-8,83.5" />
                  <mssgle:LineSegment
                    End="-8,151.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Aggregate Output 1]"
          TopLeft="463.5,369.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="27,32"
              Start="0,0"
              End="27,24.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,12" />
                  <mssgle:CubicBezierSegment
                    Point1="0,12"
                    Point2="0,16"
                    Point3="4,16" />
                  <mssgle:LineSegment
                    End="23,16" />
                  <mssgle:CubicBezierSegment
                    Point1="23,16"
                    Point2="27,16"
                    Point3="27,20" />
                  <mssgle:LineSegment
                    End="27,24.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Union All Output 1]"
          TopLeft="246,612.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="63.5,70"
              Start="0,0"
              End="63.5,62.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,31" />
                  <mssgle:CubicBezierSegment
                    Point1="0,31"
                    Point2="0,35"
                    Point3="4,35" />
                  <mssgle:LineSegment
                    End="59.5,35" />
                  <mssgle:CubicBezierSegment
                    Point1="59.5,35"
                    Point2="63.5,35"
                    Point3="63.5,39" />
                  <mssgle:LineSegment
                    End="63.5,62.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[OLE DB Source Output]"
          TopLeft="242,123">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="52.5,55.5"
              Start="0,0"
              End="52.5,48">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,23.75" />
                  <mssgle:CubicBezierSegment
                    Point1="0,23.75"
                    Point2="0,27.75"
                    Point3="4,27.75" />
                  <mssgle:LineSegment
                    End="48.5,27.75" />
                  <mssgle:CubicBezierSegment
                    Point1="48.5,27.75"
                    Point2="52.5,27.75"
                    Point3="52.5,31.75" />
                  <mssgle:LineSegment
                    End="52.5,48" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
        <EdgeLayout
          Id="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet.Paths[Multicast Output 3]"
          TopLeft="207.5,293.5">
          <EdgeLayout.Curve>
            <mssgle:Curve
              StartConnector="{assembly:Null}"
              EndConnector="-113,49"
              Start="0,0"
              End="-113,41.5">
              <mssgle:Curve.Segments>
                <mssgle:SegmentCollection
                  Capacity="5">
                  <mssgle:LineSegment
                    End="0,15.8368580060423" />
                  <mssgle:CubicBezierSegment
                    Point1="0,15.8368580060423"
                    Point2="0,19.8368580060423"
                    Point3="-4,19.8368580060423" />
                  <mssgle:LineSegment
                    End="-109,19.8368580060423" />
                  <mssgle:CubicBezierSegment
                    Point1="-109,19.8368580060423"
                    Point2="-113,19.8368580060423"
                    Point3="-113,23.8368580060423" />
                  <mssgle:LineSegment
                    End="-113,41.5" />
                </mssgle:SegmentCollection>
              </mssgle:Curve.Segments>
            </mssgle:Curve>
          </EdgeLayout.Curve>
          <EdgeLayout.Labels>
            <EdgeLabelCollection />
          </EdgeLayout.Labels>
        </EdgeLayout>
      </GraphLayout>
    </LayoutInfo>
  </TaskHost>
  <PipelineComponentMetadata
    design-time-name="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Write the results to the spreadsheet">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
      <Property>
        <Name>TableInfoObjectType</Name>
        <Value
          type="q2:string">Table</Value>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
  <PipelineComponentMetadata
    design-time-name="Package\Generate the weekly report\Read the report data, calculate the sum and write to the spreadsheet\Read data from the database">
    <Properties>
      <Property>
        <Name>DataSourceViewID</Name>
      </Property>
    </Properties>
  </PipelineComponentMetadata>
</Objects>]]></DTS:DesignTimeProperties>
</DTS:Executable>